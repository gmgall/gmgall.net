<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on gmgall.net</title>
    <link>https://gmgall.net/blog/</link>
    <description>Recent content in Blog on gmgall.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Tue, 10 Jan 2023 22:52:11 -0300</lastBuildDate><atom:link href="https://gmgall.net/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>squash&#43;merge no Git</title>
      <link>https://gmgall.net/blog/squash&#43;merge-no-git/</link>
      <pubDate>Mon, 01 May 2023 23:22:39 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/squash&#43;merge-no-git/</guid>
      <description>&lt;p&gt;Às vezes, depois de terminar o trabalho num &lt;em&gt;feature branch&lt;/em&gt; qualquer, você não deseja simplesmente fazer um &lt;code&gt;merge&lt;/code&gt;. Você quer dar uma &amp;ldquo;limpada&amp;rdquo; no histórico primeiro antes de fazer &lt;code&gt;merge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Frequentemente essa &amp;ldquo;limpeza&amp;rdquo; se dá na forma de um &lt;code&gt;squash&lt;/code&gt;, uma junção das alterações inseridas por mais de um &lt;em&gt;commit&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Por exemplo: o &lt;a href=&#34;https://github.com/gmgall/gmgall.net&#34;&gt;repositório desse site&lt;/a&gt; tem um &lt;em&gt;branch&lt;/em&gt; &lt;code&gt;main&lt;/code&gt; com histórico relativamente &amp;ldquo;limpo&amp;rdquo;. Cada &lt;em&gt;commit&lt;/em&gt; representa um novo conteúdo no site ou uma nova funcionalidade. O &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;workflow que faz deploy&lt;/a&gt; do site é disparado cada vez que eu faço um &lt;code&gt;push&lt;/code&gt; em &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Eu criei um &lt;em&gt;branch&lt;/em&gt; local chamado &lt;code&gt;fediverse_comments&lt;/code&gt; para trabalhar na funcionalidade de comentários. Era uma funcionalidade nova, eu não sabia exatamente quantos &lt;em&gt;commits&lt;/em&gt; eu precisaria fazer. Estava experimentando muita coisa. Então, mesmo sendo local, não quis fazer bagunça em &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;branches_antes.png&#34;
         alt=&#34;Screenshot do gitk mostrando um branch main e um branch fediverse_comments com vários commits desorganizados.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Branch main &amp;#34;limpo&amp;#34; e feature branch fediverse_comments &amp;#34;sujo&amp;#34; antes do merge.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Depois de 5 &lt;em&gt;commits&lt;/em&gt; em &lt;code&gt;fediverse_comments&lt;/code&gt; (na imagem acima só aparecem 4, mas fiz mais um depois de tirar o &lt;em&gt;screenshot&lt;/em&gt;) me dei por satisfeito. Era hora do &lt;code&gt;merge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Eu normalmente faria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git rebase -i&lt;/code&gt; para transformar os &lt;em&gt;commits&lt;/em&gt; em &lt;code&gt;fediverse_comments&lt;/code&gt; em um ou mais &lt;em&gt;commits&lt;/em&gt; &amp;ldquo;limpos&amp;rdquo;, ou seja, &lt;em&gt;commits&lt;/em&gt; que eu estaria OK em trazer via &lt;code&gt;merge&lt;/code&gt; para &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;trocaria para o &lt;em&gt;branch&lt;/em&gt; &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;faria o &lt;code&gt;merge&lt;/code&gt; com o &lt;code&gt;fediverse_comments&lt;/code&gt; (agora já &amp;ldquo;limpo&amp;rdquo;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eu achava um pouco &amp;ldquo;indireto&amp;rdquo; demais &amp;ldquo;limpar&amp;rdquo; um &lt;em&gt;branch&lt;/em&gt; que em breve estaria em desuso para só depois fazer &lt;code&gt;merge&lt;/code&gt;, mas era como eu sabia fazer e nunca me questionei muito.&lt;/p&gt;
&lt;p&gt;Pois bem, descobri uma forma que me pareceu mais intuitiva semana passada. O comando &lt;code&gt;merge&lt;/code&gt; já possui uma &lt;em&gt;flag&lt;/em&gt; &lt;code&gt;--squash&lt;/code&gt; que faz o que eu precisava.&lt;/p&gt;
&lt;p&gt;Então, depois de terminar os trabalhos em &lt;code&gt;fediverse_comments&lt;/code&gt;, foi só trocar para &lt;code&gt;main&lt;/code&gt; e dar o seguinte comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git merge --squash fediverse_comments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O que esse comando faz é colocar no &lt;strong&gt;working directory&lt;/strong&gt; e na &lt;strong&gt;staging area&lt;/strong&gt; todas as alternações em &lt;code&gt;fediverse_comments&lt;/code&gt;. Porém, &lt;strong&gt;não faz &lt;code&gt;commit&lt;/code&gt;&lt;/strong&gt;. Acho isso positivo porque me dá a oportunidade de dar uma última revisada ou de fazer mais alguma alteração no &lt;em&gt;commit&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Não precisei nessa situação, então fiz um &lt;em&gt;commit&lt;/em&gt; de mensagem &lt;code&gt;Adiciona comentários pelo fediverso&lt;/code&gt; em &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;branches_depois.png&#34;
         alt=&#34;Screenshot do gitk mostrando um branch main com um único commit limpo que traz as alterações de todos os commits sujos de fediverse_comments.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Branch main &amp;#34;limpo&amp;#34; com um único commit com todas alternações feitas em fediverse_comments.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Dessa forma, meu &lt;code&gt;main&lt;/code&gt; ficou apenas com &lt;em&gt;commits&lt;/em&gt; &amp;ldquo;limpos&amp;rdquo; e poupei a etapa de fazer &lt;code&gt;squash&lt;/code&gt; no &lt;em&gt;feature branch&lt;/em&gt;. Devo fazer mais dessa forma no futuro.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sobre o App do Mastodon e Discussões no Mastodon em Geral</title>
      <link>https://gmgall.net/blog/sobre-o-app-do-mastodon-e-discussoes-no-mastodon-em-geral/</link>
      <pubDate>Fri, 21 Apr 2023 20:01:12 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/sobre-o-app-do-mastodon-e-discussoes-no-mastodon-em-geral/</guid>
      <description>&lt;p&gt;Uma mudança recente no &lt;em&gt;app&lt;/em&gt; oficial do Mastodon suscitou uma discussão interessante por lá.&lt;/p&gt;
&lt;p&gt;Agora &lt;a href=&#34;https://github.com/mastodon/mastodon-ios/issues/1023&#34;&gt;o &lt;em&gt;app&lt;/em&gt; direciona os novos usuários a criar uma conta na maior instância&lt;/a&gt; daquela rede em número de usuários. O comportamento anterior era pedir para o usuário escolher uma instância. Ainda existe um botão &lt;em&gt;pick my own server&lt;/em&gt;, mas ele é difícil de perceber. Definitivamente o &amp;ldquo;caminho natural&amp;rdquo; nessa nova interface leva um novo usuário a criar uma conta em &lt;a href=&#34;https://mastodon.social/&#34;&gt;mastodon.social&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Quem é contra a mudança, vê riscos na centralização que &amp;ldquo;empurrar&amp;rdquo; novos usuários para a maior instância causaria. Se a mastodon.social se tornar lar da esmagadora maioria das contas, um potencial comprador &lt;em&gt;à la&lt;/em&gt; &lt;a href=&#34;https://knowyourmeme.com/memes/space-karen&#34;&gt;Space Karen&lt;/a&gt; teria a capacidade de fazer um &lt;em&gt;takeover&lt;/em&gt;: desfederar as demais instâncias (para não ceder tráfego para &amp;ldquo;concorrentes&amp;rdquo;) e aplicar as regras que quiser, inclusive impossibilitando a migração para outras instâncias.&lt;/p&gt;
&lt;p&gt;Um bom fio sobre isso é o da conta &lt;a href=&#34;https://mstdn.social/@feditips&#34;&gt;@feditips@mstdn.social&lt;/a&gt;, que pode ser lido &lt;a href=&#34;https://mstdn.social/@feditips/110233282251253677&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Quem é a favor da mudança, lembra que a principal dificuldade de usuários recém chegados ao Mastodon e ao fediverso é a escolha de uma instância. Reduzir esse atrito ajudaria a aumentar o número de usuários. O risco maior, seria o de perder a oportunidade de crescer o fediverso &lt;strong&gt;agora&lt;/strong&gt;. Se isso não for feito, competidores centralizados vão se estabelecer e nada mudará substancialmente no mundo das redes sociais. Com o Twitter nas cordas, estaríamos numa janela temporal ideal para crescer o fediverso. O atrito para recebermos novos usuários precisaria ser mínimo para não perdermos essa oportunidade.&lt;/p&gt;
&lt;p&gt;Dois bons &lt;em&gt;toots&lt;/em&gt; sobre isso são os do &lt;a href=&#34;https://mastodon.social/@davidslifka&#34;&gt;@davidslifka@mastodon.social&lt;/a&gt;, que podem ser lidos &lt;a href=&#34;https://mastodon.social/@davidslifka/110233470281108114&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Minha posição? Realmente não tenho uma opinião estabelecida ainda. Pelo que li até o momento, achei que ambos os lados possuem bons pontos.&lt;/p&gt;
&lt;p&gt;Mais do que resumir a discussão, queria expressar como é bom ler uma discussão nuançada e feita com cortesia numa rede social novamente. Li e me senti &lt;strong&gt;bem&lt;/strong&gt; lendo a conversa. Não recordo da última vez em que isso aconteceu. Certamente não foi no Twitter dos últimos anos, muito menos no Facebook e Instagram. Acho que me senti assim nos primeiros anos do Twitter, nos fóruns e nas listas de discussão. Ou seja: fazia tempo.&lt;/p&gt;
&lt;p&gt;A torcida é para que o melhor lado para o fediverso &amp;ldquo;ganhe&amp;rdquo; porque realmente é um espaço diferenciado e necessário. Precisa ser bem sucedido.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Palpitando do alto da minha experiência de 72 dias no fediverso e tentando lembrar dos dias em que eu não entendia exatamente o conceito de federação, parece-me que o problema é que as pessoas não entendem de cara que a mudança de uma instância para outra é possível. Se entendem que é possível, acham que será um procedimento difícil. Aí vira um degrau alto demais e elas desistem. Bate uma &lt;a href=&#34;https://en.wikipedia.org/wiki/Analysis_paralysis&#34;&gt;paralisia por análise&lt;/a&gt;. Na busca pela instância perfeita, escolhe-se instância nenhuma.&lt;/p&gt;
&lt;p&gt;Curioso como escolhemos uma dentre várias operadoras para usar celular, um dentre vários serviços de email para usar email e entendemos que essa escolha não significa não poder trocar de &amp;ldquo;instância&amp;rdquo; ou não poder falar com pessoas em &amp;ldquo;outras instâncias&amp;rdquo;, mas internalizamos tanto o modelo de redes sociais centralizadas que a escolha de instância se torna uma questão.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;many_buttons_meme.jpg&#34;
         alt=&#34;Meme tradicional de um homem transpirando com expressão ansiosa diante da escolha dentre 2 botões. Só que nessa versão do meme são bem mais que 2 botões no painel.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Usuário tentando escolher uma instância numa rede social federada.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Talvez uma solução seja focar em divulgar que a escolha de uma instância não é tão definitiva quanto parece. Que uma mudança é possível e &lt;strong&gt;não é difícil&lt;/strong&gt;. Reconheço, porém, que o caminho mais fácil na interface do &lt;em&gt;app&lt;/em&gt; oficial realmente vai acabar sendo o mais trilhado, então a discussão é bastante relevante, sim.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Já está no fediverso? Quais foram suas dificuldades no início? Tem um lado nessa discussão sobre o &lt;em&gt;app&lt;/em&gt;? Seria ótimo ler o que você tem a dizer. Entre em &lt;a href=&#34;https://gmgall.net/contact/&#34;&gt;contato&lt;/a&gt; e vamos conversar sobre isso. :-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gerando Feeds Com GitHub Actions e os Servindo Com GitHub Pages</title>
      <link>https://gmgall.net/blog/gerando-feeds-com-github-actions-e-os-servindo-com-github-pages/</link>
      <pubDate>Sun, 16 Apr 2023 14:01:34 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/gerando-feeds-com-github-actions-e-os-servindo-com-github-pages/</guid>
      <description>&lt;p&gt;Terminei o &lt;a href=&#34;https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/&#34;&gt;post anterior&lt;/a&gt; sobre o &lt;a href=&#34;https://github.com/ittner/newslinkrss&#34;&gt;newslinkrss&lt;/a&gt; falando o seguinte:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Com o comando que gera o &lt;em&gt;feed&lt;/em&gt; pronto, podemos remover a opção &lt;code&gt;--log&lt;/code&gt;. Para assinarmos o &lt;em&gt;feed&lt;/em&gt; criado podemos agendar a execução periódica do &lt;code&gt;newslinkrss&lt;/code&gt; via &lt;code&gt;cron&lt;/code&gt; e assinarmos o &lt;em&gt;feed&lt;/em&gt; resultante ou então indicarmos no nosso agregador RSS que a origem é um comando.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Isso cobre 2 de 3 possibilidades de consumo dos &lt;em&gt;feeds&lt;/em&gt; criados. São elas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;arquivo local;&lt;/li&gt;
&lt;li&gt;comando e&lt;/li&gt;
&lt;li&gt;URL.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A 1ª possibilidade, a de agendar o &lt;code&gt;newslinkrss&lt;/code&gt; para escrever periodicamente um &lt;em&gt;feed&lt;/em&gt; em &lt;code&gt;/path/para/o/feed.xml&lt;/code&gt; e depois informar ao agregador que a origem do &lt;em&gt;feed&lt;/em&gt; é um arquivo, não é viável caso o nosso agregador RSS seja um serviço &lt;em&gt;web&lt;/em&gt; como o &lt;a href=&#34;https://feedly.com/&#34;&gt;Feedly&lt;/a&gt;. Ele naturalmente não tem acesso ao nosso sistema de arquivos local.&lt;/p&gt;
&lt;p&gt;A 2ª possibilidade, a de informar que a origem do &lt;em&gt;feed&lt;/em&gt; é um comando, é interessante por não nos obrigar a agendar a execução periódica do &lt;code&gt;newslinkrss&lt;/code&gt;, mas não são todos os agregadores que possuem essa funcionalidade.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;liferea.png&#34;
         alt=&#34;Tela de cadastro do agregador RSS Liferea mostrando 3 fontes possíveis para o feed: URL, comando e arquivo local.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Tela de cadastro de feed no agregador Liferea. Não são todos que permitem usar um comando como fonte.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Resta a última possibilidade: gerar os &lt;em&gt;feeds&lt;/em&gt;, servi-los na &lt;em&gt;web&lt;/em&gt; e informar no agregador que a origem é a URL dos &lt;em&gt;feeds&lt;/em&gt; gerados. Isso vai funcionar em agregadores &lt;em&gt;web&lt;/em&gt;, &lt;em&gt;mobile&lt;/em&gt; ou &lt;em&gt;desktop&lt;/em&gt; e vai permitir que outras pessoas também cadastrem o &lt;em&gt;feed&lt;/em&gt; que você criou. É a possibilidade mais versátil porque estaremos fazendo o trabalho que o dono do site &lt;strong&gt;deveria ter feito, mas não fez&lt;/strong&gt;: servir um &lt;em&gt;feed&lt;/em&gt; para o site acessível a qualquer um na &lt;em&gt;web&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A desvantagem dessa abordagem é que nem todo mundo vai ter um servidor &lt;em&gt;web&lt;/em&gt; acessível na internet e configurar um só para servir &lt;em&gt;feeds&lt;/em&gt; de sites de terceiros pode ser trabalho demais. Seria ótimo uma alternativa mais simples e sugiro uma que depende apenas de termos uma conta no &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;: gerar os &lt;em&gt;feeds&lt;/em&gt; com &lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt; e servi-los via &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O &amp;ldquo;estalo&amp;rdquo; veio ao pensar no &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt; que uso para publicar meu site&lt;/a&gt;. Se tenho um &lt;em&gt;workflow&lt;/em&gt; que executa o &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; e faz o &lt;em&gt;deploy&lt;/em&gt; dos arquivos HTML/CSS/JS/etc. gerados por ele no GitHub Pages, seria questão de pouca adaptação ter um &lt;em&gt;workflow&lt;/em&gt; que executa o &lt;code&gt;newslinkrss&lt;/code&gt; e faz o &lt;em&gt;deploy&lt;/em&gt; dos arquivos XML gerados.&lt;/p&gt;
&lt;p&gt;Funcionou praticamente na 1ª tentativa. O &lt;a href=&#34;https://github.com/gmgall/feeds&#34;&gt;repositório&lt;/a&gt; com o &lt;a href=&#34;https://github.com/gmgall/feeds/blob/main/generate_feeds.sh&#34;&gt;script que gera os &lt;em&gt;feeds&lt;/em&gt;&lt;/a&gt; e o &lt;a href=&#34;https://github.com/gmgall/feeds/blob/main/.github/workflows/feeds.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt; que executa o script e faz o &lt;em&gt;deploy&lt;/em&gt;&lt;/a&gt; dos arquivos é público. O script &lt;code&gt;generate_feeds.sh&lt;/code&gt; é só um script Bash com uma sucessão de chamadas ao &lt;code&gt;newslinkrss&lt;/code&gt;. Os arquivos gerados em são escritos em &lt;code&gt;./feeds&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O arquivo &lt;code&gt;.github/workflows/feeds.yml&lt;/code&gt; descreve um &lt;em&gt;workflow&lt;/em&gt; do GitHub Actions que prepara o ambiente, executa o script &lt;code&gt;generate_feeds.sh&lt;/code&gt; e faz o &lt;em&gt;deploy&lt;/em&gt; dos arquivos em &lt;code&gt;./feeds&lt;/code&gt; no GitHub Pages. Vou descrever o que cada trecho do arquivo faz sem muito detalhamento porque acho que é praticamente autoexplicativo. Vou me deter no processo de configuração do Pages e das chaves no final, por ser as maiores &amp;ldquo;pegadinhas&amp;rdquo; do processo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Generate and deploy feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;schedule&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# Run workflow automatically&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;cron&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0 * * * *&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Runs every hour, on the hour&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;workflow_dispatch&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O trecho acima nomeia o &lt;em&gt;workflow&lt;/em&gt; e define que ele será executado em 2 situações:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Periodicamente, a cada 1h. A sintaxe usada é a do &lt;code&gt;cron&lt;/code&gt;. Se precisar de ajuda com ela, veja o assistente &lt;a href=&#34;https://crontab.guru/&#34;&gt;crontab guru&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ao se clicar no botão &lt;strong&gt;Run workflow&lt;/strong&gt; na página das &lt;em&gt;Actions&lt;/em&gt; do repositório no GitHub. Não é estritamente necessário, mas é interessante enquanto você estiver testando. Imagine precisar esperar uma hora pela próxima execução do &lt;em&gt;workflow&lt;/em&gt; só para descobrir se alguma alteração funcionou como previsto?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;build-deploy&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aqui é definido que a máquina virtual (o &lt;em&gt;runner&lt;/em&gt;) em que os passos seguintes serão executados usará a última versão disponível do Ubuntu Linux.&lt;/p&gt;
&lt;p&gt;Também executa o primeiro passo: fazer &lt;em&gt;checkout&lt;/em&gt; do repositório. O &lt;em&gt;runner&lt;/em&gt; vai precisar usar o script &lt;code&gt;generate_feeds.sh&lt;/code&gt;. Essa &lt;em&gt;action&lt;/em&gt; torna o script disponível no &lt;em&gt;runner&lt;/em&gt;. É como se estivéssemos fazendo &lt;code&gt;git clone&lt;/code&gt; no &lt;em&gt;runner&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Instala Python 3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/setup-python@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;python-version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3.9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Instala newslinkrss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;pip3 install newslinkrss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima instalamos o Python e o &lt;code&gt;newslinkrss&lt;/code&gt; via &lt;code&gt;pip&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Cria diretório que receberá os feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mkdir feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima criamos o diretório &lt;code&gt;feeds&lt;/code&gt;. Lembram que &lt;code&gt;generate_feeds.sh&lt;/code&gt; escreve sempre no diretório &lt;code&gt;feeds&lt;/code&gt;? Com esse passo, criamos esse diretório no &lt;em&gt;runner&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Executa newslinkrss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bash generate_feeds.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima executamos o script &lt;code&gt;generate_feeds.sh&lt;/code&gt;. O script está disponível no &lt;em&gt;runner&lt;/em&gt; porque o 1º passo que fizemos foi um &lt;em&gt;checkout&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;ACTIONS_DEPLOY_KEY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gh-pages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_DIR&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima é feito o &lt;em&gt;deploy&lt;/em&gt; com a &lt;em&gt;action&lt;/em&gt; &lt;a href=&#34;https://github.com/peaceiris/actions-gh-pages&#34;&gt;&lt;code&gt;peaceiris/actions-gh-pages&lt;/code&gt;&lt;/a&gt;. Essa é a parte final do &lt;em&gt;workflow&lt;/em&gt; e a que eu acho que merece um pouco mais de atenção &lt;strong&gt;porque demanda configurações em outros locais&lt;/strong&gt;. Vou falar de cada variável abaixo de &lt;code&gt;env:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PUBLISH_DIR&lt;/code&gt; define o diretório cujo conteúdo será servido via GitHub Pages. Os &lt;em&gt;feeds&lt;/em&gt; são escritos em &lt;code&gt;./feeds&lt;/code&gt; no &lt;em&gt;runner&lt;/em&gt; pelo script &lt;code&gt;generate_feeds.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PUBLISH_BRANCH&lt;/code&gt; define o nome do &lt;em&gt;branch&lt;/em&gt; no nosso repositório que terá os arquivos servidos via GitHub Pages. Ele será um branch órfão do repositório. Não terá o script &lt;code&gt;generate_feeds.sh&lt;/code&gt;, o &lt;code&gt;README.md&lt;/code&gt;, o arquivo YAML que descreve o &lt;em&gt;workflow&lt;/em&gt; ou qualquer outra coisa que não sejam os arquivos servidos via GitHub Pages. Aqui estamos definindo o &lt;em&gt;branch&lt;/em&gt; &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Certifique-se de que as configurações do seu repositório em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Pages&lt;/em&gt; estejam como na imagem abaixo: definindo que a origem é um &lt;em&gt;branch&lt;/em&gt; de nome &lt;code&gt;gh-pages&lt;/code&gt;. No momento em que escrevo esse post, a URL para acessar essa configuração é &lt;a href=&#34;https://github.com/USER/REPO/settings/pages&#34;&gt;https://github.com/USER/REPO/settings/pages&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;pages_config.png&#34;
         alt=&#34;Configurações do GitHub Pages para um repositório no GitHub. As configurações mostram que o branch de origem é gh-pages.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Configurações do GitHub Pages.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;ACTIONS_DEPLOY_KEY&lt;/code&gt; define um &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets&#34;&gt;&lt;em&gt;segredo criptografado&lt;/em&gt;&lt;/a&gt; de mesmo nome com a &lt;strong&gt;parte privada&lt;/strong&gt; de um par de chaves que será usada para o &lt;a href=&#34;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/managing-deploy-keys&#34;&gt;&lt;em&gt;deploy&lt;/em&gt;&lt;/a&gt;. Os segredos são configurados em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Secrets and variables&lt;/em&gt;. No momento em que escrevo esse post, a URL é &lt;a href=&#34;https://github.com/USER/REPO/settings/secrets/actions&#34;&gt;https://github.com/USER/REPO/settings/secrets/actions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;parte pública&lt;/strong&gt; deve ser configurada em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Deploy keys&lt;/em&gt;. No momento em que escrevo esse post, a URL para essa configuração é &lt;a href=&#34;https://github.com/USER/REPO/settings/keys&#34;&gt;https://github.com/USER/REPO/settings/keys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A lógica é análoga a configurar login numa máquina remota via SSH com um par de chaves. A sua máquina local fica com a parte privada. A máquina remota fica com a parte pública.&lt;/p&gt;
&lt;p&gt;O repositório tem uma chave pública configurada para que apenas &lt;strong&gt;as máquinas com a parte privada correspondente&lt;/strong&gt; possam fazer &lt;em&gt;deploy&lt;/em&gt; nele. Essa parte privada é usada pelos &lt;em&gt;runners&lt;/em&gt; do GitHub Actions. Eles nada mais são que máquinas virtuais efêmeras, então não podemos logar nelas uma única vez e configurar a chave privada como faríamos em uma máquina qualquer que controlamos. A parte privada fica acessível aos &lt;em&gt;runners&lt;/em&gt; por meio dos &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets&#34;&gt;segredos&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Como configuramos ambas as partes nas configurações de um mesmo repositório, pode ficar confuso o papel de cada parte. Espero as linhas acima tenham ajudado a elucidar o papel de cada uma. Mostro como fazer na prática abaixo.&lt;/p&gt;
&lt;h2 id=&#34;configurando-as-chaves&#34;&gt;Configurando as chaves&lt;/h2&gt;
&lt;h3 id=&#34;criando-as-chaves&#34;&gt;Criando as chaves&lt;/h3&gt;
&lt;p&gt;A criação do par de chaves pode ser feita com um comando como o seguinte:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa -b &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;git config user.email&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -f gh-pages -N &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2 arquivos serão criados por esse comando: &lt;code&gt;gh-pages&lt;/code&gt; e &lt;code&gt;gh-pages.pub&lt;/code&gt;, as chaves privada e pública, respectivamente.&lt;/p&gt;
&lt;h3 id=&#34;adicionando-a-chave-pública-como-deploy-key&#34;&gt;Adicionando a chave pública como &lt;em&gt;deploy key&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Acesse &lt;a href=&#34;https://github.com/USER/REPO/settings/keys&#34;&gt;https://github.com/USER/REPO/settings/keys&lt;/a&gt;, clique em &lt;em&gt;Add deploy key&lt;/em&gt; e cole a &lt;strong&gt;parte pública&lt;/strong&gt;. Lembre-se de marcar a caixa &lt;em&gt;Allow write access&lt;/em&gt; e clique em &lt;em&gt;Add key&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As configurações em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Deploy keys&lt;/em&gt; devem ficar parecidas às da figura abaixo.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;deploy_keys.png&#34;
         alt=&#34;Configurações das deploy keys num repositório do GitHub após a configuração de uma chave.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Configurações das deploy keys.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;adicionando-a-chave-privada-como-segredo&#34;&gt;Adicionando a chave privada como segredo&lt;/h3&gt;
&lt;p&gt;Acesse &lt;a href=&#34;https://github.com/USER/REPO/settings/secrets/actions&#34;&gt;https://github.com/USER/REPO/settings/secrets/actions&lt;/a&gt;, clique no botão verde &lt;em&gt;New repository secret&lt;/em&gt;, use &lt;code&gt;ACTIONS_DEPLOY_KEY&lt;/code&gt; como nome, cole a &lt;strong&gt;parte privada&lt;/strong&gt; no campo &lt;em&gt;Secret&lt;/em&gt; e clique em &lt;em&gt;Add secret&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As configurações em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Secrets and variables&lt;/em&gt; &amp;gt; &lt;em&gt;Actions&lt;/em&gt; devem ficar parecidas às da figura abaixo.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;secrets.png&#34;
         alt=&#34;Configurações dos segredos criptografados num repositório do GitHub após a inserção de um segredo chamado &amp;#34;ACTIONS_DEPLOY_KEY&amp;#34;.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Configurações dos segredos num repositório após a inserção de um segredo chamado ACTIONS_DEPLOY_KEY.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Com o &lt;em&gt;workflow&lt;/em&gt; funcionando, os &lt;em&gt;feeds&lt;/em&gt; estarão disponíveis numa URL como &lt;a href=&#34;https://USER.github.io/REPO/FILE.xml&#34;&gt;https://USER.github.io/REPO/FILE.xml&lt;/a&gt;. No caso do &lt;em&gt;feed&lt;/em&gt; de exemplo que fiz para o &lt;a href=&#34;https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/&#34;&gt;post anterior&lt;/a&gt;, a URL é &lt;a href=&#34;https://gmgall.github.io/feeds/gmgall_untappd.xml&#34;&gt;https://gmgall.github.io/feeds/gmgall_untappd.xml&lt;/a&gt; (&lt;code&gt;feeds&lt;/code&gt; é o &lt;a href=&#34;https://github.com/gmgall/feeds&#34;&gt;nome do repositório&lt;/a&gt; e &lt;code&gt;gmgall_untappd.xml&lt;/code&gt; é o &lt;a href=&#34;https://github.com/gmgall/feeds/blob/464ddf704a3ee2d46bbc40220331b0bb27d4e767/generate_feeds.sh#L20&#34;&gt;nome do arquivo gerado pelo script&lt;/a&gt; &lt;code&gt;generate_feeds.sh&lt;/code&gt;).&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Usa o GitHub Actions para algo parecido? Pensou em outra forma de servir os &lt;em&gt;feeds&lt;/em&gt;? Seria ótimo conversar sobre isso. Entre com &lt;a href=&#34;https://gmgall.net/contact/&#34;&gt;contato&lt;/a&gt; se quiser trocar ideia.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando Feeds RSS Para Sites Que Não os Fornecem</title>
      <link>https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/</link>
      <pubDate>Wed, 12 Apr 2023 22:00:07 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/</guid>
      <description>&lt;p&gt;Quem usa um agregador RSS como &amp;ldquo;porta de entrada&amp;rdquo; para a &lt;em&gt;web&lt;/em&gt; hoje em dia sofre com vários sites que deveriam publicar um &lt;em&gt;feed&lt;/em&gt;, mas não o fazem.&lt;/p&gt;
&lt;p&gt;Resta buscar/escrever ferramentas que usem APIs ou fazer &lt;em&gt;scraping&lt;/em&gt; para gerar os &lt;em&gt;feeds&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Muitas dessas ferramentas, como a &lt;a href=&#34;https://github.com/RSS-Bridge/rss-bridge&#34;&gt;RSS-Bridge&lt;/a&gt;, parecem interessantes, mas nunca parei para testá-las porque elas sempre me pareceram &lt;em&gt;complicadas demais&lt;/em&gt;. A RSS-Bridge, por exemplo, precisa de um servidor com PHP.&lt;/p&gt;
&lt;p&gt;Uma ferramenta de linha de comando, fácil de instalar, que eu pudesse agendar a execução via &lt;code&gt;cron&lt;/code&gt;, que recebesse as opções em texto e &amp;ldquo;jogasse&amp;rdquo; o resultado como texto na saída padrão, seria minha ferramenta ideal.&lt;/p&gt;
&lt;p&gt;Nunca tinha encontrado uma ferramenta assim, até recentemente. Ela chama-se &lt;a href=&#34;https://github.com/ittner/newslinkrss&#34;&gt;newslinkrss&lt;/a&gt;. Citando o README, &amp;ldquo;ele funciona como um &lt;em&gt;crawler&lt;/em&gt; ou &lt;em&gt;scraper&lt;/em&gt; de propósito específico&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Acho que o grande &amp;ldquo;pulo do gato&amp;rdquo; dessa ferramenta é servir como uma espécie de &lt;em&gt;framework&lt;/em&gt; para criação de &lt;em&gt;feeds&lt;/em&gt; RSS. Você só precisa entrar com o conhecimento específico sobre a página para a qual você está tentando criar um &lt;em&gt;feed&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Opções para capturar/filtrar a URL de cada item do &lt;em&gt;feed&lt;/em&gt; (o conteúdo de &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;), o corpo de cada item (o conteúdo de &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt;), a data de cada item (o conteúdo de &lt;code&gt;&amp;lt;pubDate&amp;gt;&lt;/code&gt;), o título do &lt;em&gt;feed&lt;/em&gt;&amp;hellip; Estão todas presentes.&lt;/p&gt;
&lt;p&gt;Fica mais simples de entender com um exemplo: criarei um &lt;em&gt;feed&lt;/em&gt; RSS para as cervejas em que dei &lt;em&gt;check-in&lt;/em&gt; no &lt;a href=&#34;https://untappd.com/&#34;&gt;Untappd&lt;/a&gt;. O ponto de partida é sempre a URL da página que lista os links para o que serão os &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;s individuais do &lt;em&gt;feed&lt;/em&gt;. Essa URL é o único parâmetro posicional que o comando recebe.&lt;/p&gt;
&lt;p&gt;Num blog, seria a URL da página com a lista dos posts. Num site de notícias, seria a URL da página principal de uma editoria qualquer. Nesse exemplo, é a URL da página do &lt;a href=&#34;https://untappd.com/user/gmgall&#34;&gt;meu perfil no Untappd&lt;/a&gt;. Ela contém uma &lt;em&gt;timeline&lt;/em&gt; com as cervejas abaixo de &lt;em&gt;Guilherme&amp;rsquo;s Recent Activity&lt;/em&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;untappd.png&#34;
         alt=&#34;Um perfil do Untappd visualizado visto pela interface web.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Meu perfil no Untappd.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; -o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Estou usando a opção &lt;code&gt;-o&lt;/code&gt; para gravar o &lt;em&gt;feed&lt;/em&gt; resultante num arquivo em &lt;code&gt;/tmp/feed.xml&lt;/code&gt;. O comportamento &lt;em&gt;default&lt;/em&gt; é imprimir na saída padrão. Enquanto estou criando o &lt;em&gt;feed&lt;/em&gt;, gosto de abri-lo com o Firefox para ter uma visualização melhor da estrutura.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;firefox_rss.png&#34;
         alt=&#34;Um arquivo XML sendo visualizado pelo Firefox.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;A estrutura do feed sendo mostrada pelo Firefox.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Analisando o que temos até aqui, percebemos que o comando está generalista demais. Todo link virou um item no &lt;em&gt;feed&lt;/em&gt;, até aqueles do topo da página (&amp;ldquo;Blog&amp;rdquo;, &amp;ldquo;Top Rated&amp;rdquo;, &amp;ldquo;Help&amp;rdquo;). Precisamos pegar só os links para os &lt;em&gt;check-ins&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Vamos inspecionar a página do perfil para descobrirmos que padrão seguem os links para os &lt;em&gt;check-ins&lt;/em&gt;. Usando a opção &lt;em&gt;Selecionar um elemento da página (Ctrl+Shift+C)&lt;/em&gt; e colocando o cursor do mouse sobre os links de texto &amp;ldquo;View Detailed Check-in&amp;rdquo;, percebemos que o padrão é &lt;code&gt;/user/gmgall/checkin/&lt;/code&gt; seguido por um número.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;inspetor.png&#34;
         alt=&#34;Firefox Developer Tools sendo usada para inspecionar a página de um perfil no Untappd&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Usando DevTools para descobrir o padrão dos links que apontam para a página individual de cada check-in.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A opção que usamos para capturarmos apenas os links que casam com determinada regex é &lt;code&gt;-p&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se abrirmos o &lt;em&gt;feed&lt;/em&gt; que temos nesse ponto, veremos que cada item é um &lt;em&gt;check-in&lt;/em&gt;. Outros links no perfil não viraram &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;s no &lt;em&gt;feed&lt;/em&gt;. Exemplo de um dos itens:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;guid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isPermaLink=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Os links estão corretos, mas o título poderia ser melhor. O conteúdo de &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; também. Vamos usar a opção &lt;code&gt;--follow&lt;/code&gt; para tentarmos capturar mais informações por item.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--follow &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Agora cada item está como o abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd | UntappdLink text: Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;The Untappd Team&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;guid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isPermaLink=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Melhorou bastante, mas tem uma melhora óbvia: capturar a data. A opção &lt;code&gt;--follow&lt;/code&gt; nos dá a capacidade de capturar a data a partir da página de cada item individual com opções específicas para isso.&lt;/p&gt;
&lt;p&gt;Vamos usar o inspetor na página de um &lt;em&gt;check-in&lt;/em&gt; individual para vermos onde podemos pegar a data.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;inspetor2.png&#34;
         alt=&#34;Firefox Developer Tools sendo usado para inspecionar a página de um check-in no Untappd.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Inspecionando a página de um check-in no Untappd.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A data/hora do &lt;em&gt;check-in&lt;/em&gt; aparece num parágrafo (elemento &lt;code&gt;p&lt;/code&gt;) com a classe &lt;code&gt;time&lt;/code&gt;. Podemos capturá-la via um &lt;a href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Selectors&#34;&gt;seletor CSS&lt;/a&gt; com a opção &lt;code&gt;--date-from-csss&lt;/code&gt; (&lt;em&gt;date from CSS selector&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Vamos também usar a opção &lt;code&gt;--log DEBUG&lt;/code&gt; para vermos exatamente o que está sendo capturado como data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--follow &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--date-from-csss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--log DEBUG &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A opção &lt;code&gt;--log DEBUG&lt;/code&gt; vai imprimir linhas como a abaixo para cada item:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INFO:__main__:Following URL https://untappd.com/user/gmgall/checkin/1260790060
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEBUG:__main__:date-from-csss found candidate text: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sat, 01 Apr 2023 04:26:44 +0000&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEBUG:__main__:date regex matched: src&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Sat, &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;2023&lt;/span&gt; 04:26:44 +0000, rx&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;.+&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, result&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Sat, &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;2023&lt;/span&gt; 04:26:44 +0000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEBUG:__main__:Found date from CSS Selector 2023-04-01 04:26:44+00:00
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nesse caso específico, já temos uma data em formato utilizável, mas raramente esse é o caso. Use &lt;code&gt;--log&lt;/code&gt; quando for criar &lt;em&gt;feeds&lt;/em&gt; para páginas com formatos mais complicados.&lt;/p&gt;
&lt;p&gt;Vamos ver como está cada item no &lt;em&gt;feed&lt;/em&gt; agora:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd | UntappdLink text: Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;The Untappd Team&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;guid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isPermaLink=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;Sat, 01 Apr 2023 04:26:44 GMT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nesse ponto, temos as datas de cada item (&lt;code&gt;&amp;lt;pubDate&amp;gt;&lt;/code&gt; agora está presente).&lt;/p&gt;
&lt;p&gt;Vamos melhorar o título de cada item. A parte inicial (&lt;code&gt;Guilherme is drinking a&lt;/code&gt;) e a final (&lt;code&gt;on Untappd&lt;/code&gt;) são redundantes. A opção &lt;code&gt;--title-regex&lt;/code&gt; nos permite filtrar os títulos dos itens. Ela recebe uma regex com um grupo e o que casar dentro desse grupo se torna o novo título.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--follow &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--date-from-csss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--log DEBUG &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--title-regex &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Guilherme is drinking a (.+) on Untappd&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cada item agora tem um título melhor:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Torobayo by Compañia Cervecera Kunstmann&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd | UntappdLink text: Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;The Untappd Team&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;guid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isPermaLink=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;Sat, 01 Apr 2023 04:26:44 GMT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Precisamos agora de um corpo melhor em cada item. Atualmente em &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; temos apenas um texto com nome da cerveja e data/hora do &lt;em&gt;check-in&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Vamos usar &lt;code&gt;--with-body&lt;/code&gt; para incluirmos um corpo e &lt;code&gt;--body-csss&lt;/code&gt; para filtrarmos o que fará parte do corpo por meio de um seletor CSS. Usando apenas &lt;code&gt;--with-body&lt;/code&gt;, tudo entre &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; será incluído no corpo de cada item do &lt;em&gt;feed&lt;/em&gt;. Pode ser esse o comportamento desejado para páginas mais simples, mas não é o caso do Untappd.&lt;/p&gt;
&lt;p&gt;Inspecionando a página de cada &lt;em&gt;check-in&lt;/em&gt;, descobrimos que o &lt;em&gt;card&lt;/em&gt; com as informações do check-in é uma &lt;code&gt;div&lt;/code&gt; com as classes &lt;code&gt;checkin-info&lt;/code&gt; e &lt;code&gt;pad-it&lt;/code&gt;. Podemos selecioná-la com o seletor &lt;code&gt;.checkin-info.pad-it&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--follow &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--date-from-csss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--log DEBUG &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--title-regex &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Guilherme is drinking a (.+) on Untappd&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--with-body &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--body-csss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.checkin-info.pad-it&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se visualizarmos esse &lt;em&gt;feed&lt;/em&gt; num agregador, temos um resultado bem satisfatório:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;quite_rss.png&#34;
         alt=&#34;Agregador RSS exibindo o feed que acabamos de criar.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Agregador QuiteRSS mostrando o feed que acabamos de criar nesse post.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Com o comando que gera o &lt;em&gt;feed&lt;/em&gt; pronto, podemos remover a opção &lt;code&gt;--log&lt;/code&gt;. Para assinarmos o &lt;em&gt;feed&lt;/em&gt; criado podemos agendar a execução periódica do &lt;code&gt;newslinkrss&lt;/code&gt; via &lt;code&gt;cron&lt;/code&gt; e assinarmos o &lt;em&gt;feed&lt;/em&gt; resultante ou então indicarmos no nosso agregador RSS que a origem é um comando.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Como você tem lidado com sites que não oferecem &lt;em&gt;feeds&lt;/em&gt;? Conhece alguma ferramenta parecida com o &lt;code&gt;newslinkrss&lt;/code&gt;? Adoraria ouvir sobre. Faça &lt;a href=&#34;https://gmgall.net/contact/&#34;&gt;contato&lt;/a&gt; se quiser conversar sobre isso.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perguntas &#34;idiotas&#34; podem ser tentativas de ter controle sobre um mundo caótico</title>
      <link>https://gmgall.net/blog/perguntas-idiotas/</link>
      <pubDate>Sat, 08 Apr 2023 15:50:19 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/perguntas-idiotas/</guid>
      <description>&lt;p&gt;Um fio lá no Twitter - que se perdeu porque apaguei todos os meus tweets - começava com esses 2 tweets de uma mesma pessoa:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&amp;ldquo;Se eu estudar x horas por dia durante x meses eu arranjo o emprego tal?&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sei lá mano, se vc não for um personagem de videogame que aumenta de nível a cada tanto de xp certinho, acho que ninguém vai saber te responder isso&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Eu fico de cara quando vejo essa pergunta vindo de gente com idade pra ser adulta tlgd? Já deu tempo pra vida ter dado oportunidades de vc aprender que não é assim que ela funciona carai&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Eu concordo com a pessoa, mas nas &lt;em&gt;replies&lt;/em&gt; fui no caminho de tentar entender o lado de quem faz a pergunta criticada.&lt;/p&gt;
&lt;p&gt;Acho que esse tipo de pergunta aparece de uma necessidade de acreditar que exista um método num processo bastante caótico, em que não temos controle quase nenhum. No caso específico da pergunta, é o processo de arranjar um emprego, mas acho que fazemos isso com vários outros problemas.&lt;/p&gt;
&lt;p&gt;Saber que os resultados são muito variáveis, que se depende muito de &amp;ldquo;QI&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&amp;rdquo; e que raramente é &amp;ldquo;justo&amp;rdquo; são pensamentos muito desconfortáveis para se manter na cabeça quando se está trocando de carreira/emprego, então se busca uma referência&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; que diga o contrário.&lt;/p&gt;
&lt;p&gt;Vendo por outra perspectiva: a ideologia dominante cospe meritocracia na nossa cara desde cedo. Basta &amp;ldquo;ter mérito&amp;rdquo; o suficiente para conseguir qualquer coisa. Quem faz uma pergunta dessas está só tentando obter uma métrica objetiva de quanto &amp;ldquo;mérito&amp;rdquo; vai precisar aplicar para resolver o problema &amp;ldquo;arranjar o emprego x&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Uma pessoa honesta vai te responder que não há como saber&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Uma desonesta talvez tente te vender um curso ou livro te ensinando como obter conhecimento W em X dias e arranjar o emprego Y em até Z meses, sem jamais citar que é impossível garantir essas coisas.&lt;/p&gt;
&lt;p&gt;O que escrevi acima não é uma constatação genial e acho que quem faz a pergunta também sabe dessas coisas no âmago. Meu palpite é que a pessoa até tem um certo senso de que &amp;ldquo;a banda não toca&amp;rdquo; desse jeito, mas faz a pergunta pela dissonância que existe entre o que ela vê no mundo (processos aleatórios com um monte de variáveis que ela não controla) e o que dizem para ela sobre o mundo (existe meritocracia, existe um método que te faz trocar de emprego/carreira estudando X horas/dia etc).&lt;/p&gt;
&lt;p&gt;Acho que muitas das perguntas &amp;ldquo;idiotas&amp;rdquo; que deixam a gente pensando &amp;ldquo;o mundo não funciona assim, cara, como você ainda não entendeu isso?&amp;rdquo; são as pessoas tentando lidar com essa dissonância. E isso não acontece só com processos seletivos para empregos, acontece com vários outras questões da vida.&lt;/p&gt;
&lt;p&gt;Eu sei que já fiz várias dessas perguntas &amp;ldquo;idiotas&amp;rdquo; e provavelmente seguirei fazendo algumas. É bem mais confortável dar o braço para alguém se você está atravessando uma avenida vendado. O problema é que em várias situações está &lt;strong&gt;todo mundo vendado&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Que tipo de pergunta &amp;ldquo;idiota&amp;rdquo; dessas você já fez? Quais segue fazendo? Se idenfificou com alguma coisa que escrevi?&lt;/p&gt;
&lt;p&gt;Discorda? Nunca teve esse tipo de pensamento?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gmgall.net/contact/&#34;&gt;Entre em contato&lt;/a&gt; se quiser dialogar sobre, vai ser interessante ver outras  perspectivas.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Quem Indica&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;O perfil que comentava a pergunta é &amp;ldquo;grande&amp;rdquo;, com mais de 10000 seguidores.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Uma frustração que a pessoa que iniciou o fio manifesta é que nessas situações sempre tem quem responda com muita certeza e precisão.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>O Skoob Parece Abandonado</title>
      <link>https://gmgall.net/blog/skoob/</link>
      <pubDate>Tue, 28 Mar 2023 13:48:26 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/skoob/</guid>
      <description>&lt;p&gt;&lt;strong&gt;UPDATE 28/03/2023 20:50&lt;/strong&gt;: Fui informado via Mastodon que o Skoob não permite cadastro de livros sem ISBN pelo menos desde 2015.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Se você se importa com os dados que entra no &lt;a href=&#34;https://www.skoob.com.br/&#34;&gt;Skoob&lt;/a&gt;, mantenha &lt;em&gt;backup&lt;/em&gt; deles em algum outro lugar.&lt;/p&gt;
&lt;p&gt;Se num diário de leituras físico, perfil em outra rede social com foco em leitura ou no seu site pessoal, não importa. Só não confie cegamente no Skoob.&lt;/p&gt;
&lt;p&gt;A atividade deles no Twitter e no Instagram parece indicar que ainda pretendem explorá-lo como negócio, mas o site em si parece abandonado em alguns aspectos.&lt;/p&gt;
&lt;p&gt;Não acho que estejam trabalhando em novas funcionalidades. &lt;strong&gt;Talvez&lt;/strong&gt; estejam dando manutenção.&lt;/p&gt;
&lt;p&gt;Digo isso pelo seguinte:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A API está &amp;ldquo;para sair&amp;rdquo; ao menos &lt;a href=&#34;https://web.archive.org/web/20160120004953/https://www.skoob.com.br/ajuda/faq/15#13&#34;&gt;desde 2016&lt;/a&gt; (tem um texto nas FAQ que diz &amp;ldquo;&lt;strong&gt;ainda&lt;/strong&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; não divulgamos o API&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;O cadastro de livros sem ISBN está &amp;ldquo;temporariamente desativado&amp;rdquo;. Não consegui descobrir na &lt;a href=&#34;https://web.archive.org/&#34;&gt;Wayback Machine&lt;/a&gt; há quanto tempo está assim, mas posso atestar que é desde antes de fevereiro de 2023, época em que tentei cadastrar um livro antigo sem ISBN pela 1ª vez e não consegui. &lt;strong&gt;UPDATE&lt;/strong&gt;: o &lt;a href=&#34;https://mastodon.gal/@darksideofaquarius/&#34;&gt;@darksideofaquarius@mastodon.gal&lt;/a&gt; me informou via Mastodon que não consegue cadastrar livros sem ISBN &lt;a href=&#34;https://mastodon.gal/@darksideofaquarius/110102803829455089&#34;&gt;pelo menos desde 2015&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img src=&#34;toot.png&#34;
         alt=&#34;Toot de @darksideofaquarius@mastodon.gal informando que não consegue cadastrar livros sem ISBN pelo menos desde 2015. A data é 28/03/2023.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Toot de @darksideofaquarius@mastodon.gal informando que não consegue cadastrar livros sem ISBN pelo menos desde 2015.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;A integração com o Twitter ainda usa o migre.me, encurtador de URLs que não funciona mais.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img src=&#34;tweet.png&#34;
         alt=&#34;Tweet de @jonnyken anunciando a morte do serviço migre.me. A data é 20/11/2022.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Tweet de @jonnyken anunciando a morte do serviço migre.me.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Aliás, nem sei se tem equipe - ou vontade - suficiente para explorar a plataforma como negócio.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A última postagem no &lt;a href=&#34;https://blog.skoob.com.br/&#34;&gt;blog&lt;/a&gt; é de &lt;a href=&#34;https://blog.skoob.com.br/plus-trocas-funcionamento-do-sistema-de-trocas/&#34;&gt;2020&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;O último vídeo no &lt;a href=&#34;https://www.youtube.com/@skoob/videos&#34;&gt;canal do YouTube&lt;/a&gt; é de &lt;a href=&#34;https://youtu.be/lv3YCVKiQC8&#34;&gt;2020&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Contatos pelo Twitter para tirar dúvidas não são respondidos&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;. Só interagem com quem responde nos &lt;em&gt;tweets&lt;/em&gt; promocionais.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como os livros lidos, as notas, as resenhas e o progresso de leitura costumam ser informações cultivadas pelas pessoas durante muito tempo, resolvi fazer esse &lt;em&gt;post&lt;/em&gt; para chamar a atenção para o fato de que o Skoob parece &amp;ldquo;largado&amp;rdquo;. (Mantenha um &lt;em&gt;backup&lt;/em&gt; dessas informações em outro lugar)².&lt;/p&gt;
&lt;p&gt;Eu decidi manter as minhas aqui mesmo &lt;a href=&#34;https://gmgall.net/books/&#34;&gt;numa seção desse site&lt;/a&gt;, mas existem serviços alternativos parecidos com o Skoob também. Os 2 que eu conheço são:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://joinbookwyrm.com/pt-br/&#34;&gt;BookWyrm&lt;/a&gt;: federada, baseada em ActivityPub e com código sob &lt;a href=&#34;https://github.com/bookwyrm-social/bookwyrm/blob/main/LICENSE.md&#34;&gt;licença anticapitalista&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.goodreads.com/&#34;&gt;Goodreads&lt;/a&gt;: acho que é o maior site do gênero, &lt;a href=&#34;https://www.npr.org/sections/thetwo-way/2013/03/28/175631962/amazon-buys-book-recommendation-site-goodreads&#34;&gt;mas é da Amazon&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Grifo meu.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Considerando o momento do Twitter, pode ser muito bem que não tenham me respondido porque não viram a notificação com minha pergunta. Porém, se você visitar o perfil deles no Twitter e olhar os &lt;a href=&#34;https://twitter.com/skoobnews/with_replies&#34;&gt;tweets + respostas&lt;/a&gt; vai ver que não há interações respondendo dúvidas ou reclamações. A presença deles no Twitter só existe para fins promocionais.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Informações São Efêmeras</title>
      <link>https://gmgall.net/blog/informacoes-sao-efemeras/</link>
      <pubDate>Thu, 09 Mar 2023 13:08:05 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/informacoes-sao-efemeras/</guid>
      <description>&lt;p&gt;Tive uma realização recentemente. Descobri algo importantíssimo nesse ano de 2023. Foi o seguinte:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Informações são efêmeras e a Internet não muda isso.&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;john-cleese.gif&#34;
         alt=&#34;GIF de John Cleese olhando de forma não surpresa&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Você me olhando após eu fazer a constatação mais óbvia do universo.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Eu sei, eu sei. Descobri a pólvora, né?&lt;/p&gt;
&lt;p&gt;Não é como se eu não &lt;strong&gt;soubesse&lt;/strong&gt;, mas eu não &lt;strong&gt;sentia&lt;/strong&gt; o problema. Era algo que estava num nível objetivo na minha cabeça, não no subjetivo. Não estava internalizado.&lt;/p&gt;
&lt;p&gt;Se você me perguntasse da importância de backups, de arquivar o que você acha importante, de manter bem cuidado o acervo de bibliotecas etc. eu responderia de bate-pronto que é super importante. Porém, isso não se refletia nas minhas atitudes.&lt;/p&gt;
&lt;p&gt;Eu, até bem recentemente, agia como se desse para encontrar tudo na web porque eu efetivamente encontrava.&lt;/p&gt;
&lt;p&gt;Mas esse ano &lt;a href=&#34;https://idioms.thefreedictionary.com/run+into+a+brick+wall&#34;&gt;corri contra umas paredes de tijolos&lt;/a&gt; ao botar esse site no ar e ao tentar ler alguns livros que me deixaram esperto.&lt;/p&gt;
&lt;h2 id=&#34;livros&#34;&gt;Livros&lt;/h2&gt;
&lt;p&gt;Minha intuição era de que com Kindle + Internet, eu nunca mais teria problemas para ler o que eu desejasse ler.&lt;/p&gt;
&lt;p&gt;O que já estivesse em domínio público seria transformado num epub da vida por alguém; o que não estivesse e eu pudesse pagar, estaria à venda na Amazon; o que não estivesse em domínio público e eu não pudesse pagar, cairia de um &lt;a href=&#34;https://libgen.rs&#34;&gt;caminhão&lt;/a&gt; &lt;a href=&#34;https://sci-hub.ru&#34;&gt;aqui&lt;/a&gt; na &lt;a href=&#34;https://t.me/Literary2019&#34;&gt;rua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Eu estava &lt;em&gt;bastante&lt;/em&gt; errado. Descobri isso indo atrás dos livros da coleção &amp;ldquo;Romances do Povo&amp;rdquo;, publicado pela Editorial Vitória. Demorei para conseguir ler o soviético &amp;ldquo;&lt;a href=&#34;https://gmgall.net/books/a-colheita&#34;&gt;A Colheita&lt;/a&gt;&amp;rdquo;. Não achei e-books em lugar nenhum. Li numa edição física bastante envelhecida da biblioteca municipal de Petrópolis. Outros livros da coleção ainda não encontrei.&lt;/p&gt;
&lt;p&gt;Os livros de um autor russo de uma época um pouco anterior, &lt;a href=&#34;https://pt.wikipedia.org/wiki/Alexandre_Ivanovich_Kuprin&#34;&gt;Alexandre I. Kuprine&lt;/a&gt; também não estão tão fáceis de encontrar quanto eu esperava. Tem e-books de uns 2 livros mais conhecidos dele. Boa sorte com os outros. Li a novela &amp;ldquo;&lt;a href=&#34;https://gmgall.net/books/o-caminho-da-gloria/&#34;&gt;O Caminho da Glória&lt;/a&gt;&amp;rdquo; numa edição portuguesa de 1942 que claramente não durará por muito mais tempo.&lt;/p&gt;
&lt;p&gt;Não são livros tão antigos assim, não têm nem 100 anos. A perspectiva de em breve eles não estarem disponíveis me causou mal estar. Num mundo ideal, acho que não era para livros ficarem indisponíveis considerando que existe uma &lt;strong&gt;rede mundial de computadores&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;web&#34;&gt;Web&lt;/h2&gt;
&lt;p&gt;Ao &lt;a href=&#34;https://gmgall.net/blog/hello-world&#34;&gt;colocar esse site no ar em janeiro&lt;/a&gt;, migrei 7 posts de um blog antigo para cá. Vários links estavam quebrados e eu os substituí por links para uma captura na &lt;a href=&#34;https://web.archive.org/&#34;&gt;Wayback Machine&lt;/a&gt; do &lt;a href=&#34;https://archive.org/&#34;&gt;Internet Archive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Os 7 posts possuem no total 48 links. 12 tiveram que ser substituídos por capturas porque não estavam mais disponíveis na URL original. Uns 2 foram perdidos para sempre (infelizmente não contei os perdidos certinho).&lt;/p&gt;
&lt;p&gt;O post migrado mais antigo não tem nem 15 anos de idade. &lt;strong&gt;Isso significa que ~25% dos links quebraram em pouco mais de 10 anos.&lt;/strong&gt; É uma quantidade gigante de informação que só não foi totalmente perdida porque existe o &lt;a href=&#34;https://archive.org&#34;&gt;Internet Archive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mas links quebrados estão longe de serem a única forma de perdermos acesso à informações na web.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Quem armazena os arquivos pode simplesmente tirar o servidor da tomada para sempre (alô GeoCities, alô Orkut).&lt;/li&gt;
&lt;li&gt;Informações podem migrar para plataformas privadas, pouco ou nada alcançáveis por buscadores.
&lt;ul&gt;
&lt;li&gt;Exemplo de 2023: um vereador aqui da cidade foi empossado na ALERJ. Uma candidatura coletiva vai ficar com a vaga que era dele na Câmara de Vereadores. Algumas pessoas estavam saindo do coletivo ou ele estava se desfazendo, não sei exatamente o que aconteceu. E não sei porque o anúncio foi feito no Instagram. Não era para informações desse tipo estarem escondidas atrás de uma tela de login de uma empresa privada.&lt;/li&gt;
&lt;li&gt;Há quem esteja querendo &lt;a href=&#34;http://ascii.textfiles.com/archives/5509&#34;&gt;tirar documentação de websites para manter apenas um canal no Discord&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img src=&#34;discord-is-NOT-an-archive.png&#34;
         alt=&#34;Print de tuite de Jason Scott explicando que o Discord não é um arquivo.&#34; width=&#34;70%&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Discord sendo usado no lugar de websites. O que poderia dar errado?&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Não ajuda que o Google esteja ficando pior para encontrar algumas coisas.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img src=&#34;google-results.webp&#34;
         alt=&#34;Print de tuite de @spakhm mostrando que para algumas buscas, toda a 1ª página de resultados é de anúncios.&#34; width=&#34;70%&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Algumas buscas no Google só retornam anúncios. Fonte: https://dkb.blog/p/google-search-is-dying.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A moral da história? &lt;a href=&#34;https://rubenerd.com/archive-it-if-you-care-about-it/&#34;&gt;Se é importante para você, arquive&lt;/a&gt;. Ajude o &lt;a href=&#34;https://archive.org/&#34;&gt;Internet Archive&lt;/a&gt;. Defenda as bibliotecas públicas. &lt;strong&gt;Não conte com a Internet como &amp;ldquo;repositório de tudo&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Qual a sua experiência com o que eu relatei acima? O que você não encontrou na web, mas achou que seria fácil de achar? Tem o hábito de salvar uma cópia do que acha que pode precisar no futuro? Entre em &lt;a href=&#34;https://gmgall.net/contact/&#34;&gt;contato&lt;/a&gt; se quiser trocar ideia sobre isso. :-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Acompanhando Suas Inscrições no YouTube por RSS</title>
      <link>https://gmgall.net/blog/acompanhando-suas-inscricoes-no-youtube-por-rss/</link>
      <pubDate>Thu, 23 Feb 2023 15:01:04 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/acompanhando-suas-inscricoes-no-youtube-por-rss/</guid>
      <description>&lt;p&gt;TL;DR. Escrevi uma ferramenta que converte um CSV com suas inscrições no YouTube em um arquivo &lt;a href=&#34;http://opml.org/&#34;&gt;OPML&lt;/a&gt; com os &lt;em&gt;feeds&lt;/em&gt; RSS dos canais. Esse arquivo OPML é importável em quase todos os agregadores RSS. Use o conversor em &lt;a href=&#34;https://yt2opml.gmgall.net/&#34;&gt;https://yt2opml.gmgall.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Com FreshRSS + extensões, não é necessário nem sair do agregador para assistir aos vídeos.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Procurei colocar RSS de volta na minha vida desde a &lt;a href=&#34;https://gmgall.net/blog/tchau-twitter&#34;&gt;debacle do Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sempre fui fã do padrão RSS. Acho que é a melhor forma de consumo de conteúdo na &lt;em&gt;web&lt;/em&gt;. Hoje, é mais importante do que nunca, já que dá liberdade ao usuário de desviar das diversas formas pelas quais &lt;a href=&#34;https://thewebisfucked.com/&#34;&gt;a &lt;em&gt;web&lt;/em&gt; se tornou uma merda&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Só que eu era uma das folclóricas viúvas do &lt;a href=&#34;https://pt.wikipedia.org/wiki/Google_Reader&#34;&gt;Google Reader&lt;/a&gt;. Não tinha me adaptado bem a nenhum outro agregador depois dele. Tentei usar vários, mas nunca parava com nenhum. O que usei por mais tempo depois do Reader foi o &lt;a href=&#34;https://feedly.com/&#34;&gt;Feedly&lt;/a&gt;, mas ele nunca virou meu &amp;ldquo;ponto central&amp;rdquo; de consumo da &lt;em&gt;web&lt;/em&gt; como o Reader foi.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;viuva_google_reader_23-02-2023.png&#34;
         alt=&#34;Print de tweet com texto &amp;#34;Eu trocaria fácil todas as minhas redes sociais pelo Google Reader&amp;#34;.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Toda viúva do Google Reader desde 2013.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Então fui mantendo o Twitter como &amp;ldquo;agregador&amp;rdquo;. Junta isso com o fato de estarem lá várias pessoas que eu gosto e a comodidade falou mais alto. Meu &amp;ldquo;ponto central&amp;rdquo; virou o Twitter.&lt;/p&gt;
&lt;p&gt;O novo senhor feudal do Twitter ser um &lt;a href=&#34;https://www.platformer.news/p/yes-elon-musk-created-a-special-system&#34;&gt;déspota&lt;/a&gt; &lt;a href=&#34;https://arstechnica.com/tech-policy/2023/02/musk-fired-top-engineer-for-explaining-why-his-tweets-views-are-down/&#34;&gt;mimado&lt;/a&gt; me colocou para procurar, mais uma vez, um agregador que pudesse usar rotineiramente.&lt;/p&gt;
&lt;p&gt;Estou feliz em dizer que parece que a busca terminou. Estou usando o &lt;a href=&#34;https://freshrss.org/&#34;&gt;FreshRSS&lt;/a&gt; há uns 15 dias e estou bem satisfeito.&lt;/p&gt;
&lt;p&gt;Minha &amp;ldquo;dieta de informações&amp;rdquo; melhorou demais. Já não fico tão ansioso com o &lt;em&gt;doomscrolling&lt;/em&gt; na &lt;em&gt;timeline&lt;/em&gt; do Twitter ou lendo a última polêmica de política que chegou aos &lt;em&gt;trending topics&lt;/em&gt;. Estou lendo textos mais longos, sem um algoritmo no caminho.&lt;/p&gt;
&lt;p&gt;Foi apenas natural que eu quisesse consumir &lt;strong&gt;tudo&lt;/strong&gt; via RSS, não apenas texto. O próximo candidato óbvio era o YouTube. Com frequência eu abro o &lt;em&gt;app&lt;/em&gt; e vejo alguma coisa indicada na &lt;em&gt;home&lt;/em&gt; ou então entro numa sequência de &lt;em&gt;Shorts&lt;/em&gt; que me fazem gastar um tempão neles enquanto os vídeos dos canais em que sou inscrito mesmo vão ficando para depois.&lt;/p&gt;
&lt;p&gt;Minha intuição é que a Google não ia deixar os canais com &lt;em&gt;feeds&lt;/em&gt; RSS, justamente para forçar a visita ao site. Fico feliz de estar errado. Todo canal tem um &lt;em&gt;feed&lt;/em&gt; (por enquanto?), só é uma funcionalidade um pouco &amp;ldquo;escondida&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Os canais no YouTube têm um &lt;em&gt;Channel ID&lt;/em&gt; único e a URL dos canais seguem o formato &lt;code&gt;https://www.youtube.com/channel/ID&lt;/code&gt;.  O feed fica em &lt;code&gt;https://www.youtube.com/feeds/videos.xml?channel_id=ID&lt;/code&gt;. Usando como exemplo o canal &lt;a href=&#34;https://www.youtube.com/@TeseOnze&#34;&gt;Tese Onze&lt;/a&gt;, temos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;URL do canal: &lt;a href=&#34;http://www.youtube.com/channel/UC0fGGprihDIlQ3ykWvcb9hg&#34;&gt;http://www.youtube.com/channel/UC0fGGprihDIlQ3ykWvcb9hg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;URL do &lt;em&gt;feed&lt;/em&gt; RSS: &lt;a href=&#34;https://www.youtube.com/feeds/videos.xml?channel_id=UC0fGGprihDIlQ3ykWvcb9hg&#34;&gt;https://www.youtube.com/feeds/videos.xml?channel_id=UC0fGGprihDIlQ3ykWvcb9hg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O problema é que ninguém divulga a URL do seu canal nesse formato. Em geral se usa o formato mais amigável &lt;a href=&#34;https://www.youtube.com/@TeseOnze&#34;&gt;https://www.youtube.com/@TeseOnze&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Então, quem quer acompanhar via RSS os vídeos de suas inscrições no YouTube precisa:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;obter uma lista dos IDs de todos os canais em que é inscrito;&lt;/li&gt;
&lt;li&gt;gerar uma lista das URLs dos &lt;em&gt;feeds&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;importar todos os &lt;em&gt;feeds&lt;/em&gt; da lista no agregador.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O formato usado no mundo RSS para importar/exportar listas de &lt;em&gt;feeds&lt;/em&gt; é o &lt;a href=&#34;http://opml.org/&#34;&gt;OPML&lt;/a&gt;, baseado em XML.&lt;/p&gt;
&lt;p&gt;Segue um exemplo de OPML:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-XML&#34; data-lang=&#34;XML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;ISO-8859-1&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;opml&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;mySubscriptions.opml&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dateCreated&amp;gt;&lt;/span&gt;Sat, 18 Jun 2005 12:11:52 GMT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dateCreated&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;outline&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yahoo! News: Technology&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;description=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Technology&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;htmlUrl=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://news.yahoo.com/news?tmpl=index&amp;amp;amp;cid=738&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;language=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;unknown&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yahoo! News: Technology&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rss&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RSS2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlUrl=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://rss.news.yahoo.com/rss/tech&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/opml&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O padrão OPML é quase autoexplicativo: é simplesmente um elemento &lt;code&gt;&amp;lt;opml&amp;gt;&lt;/code&gt; com 2 elementos obrigatórios: &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;outline&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Dentro do 1º vão metainformações do arquivo.&lt;/p&gt;
&lt;p&gt;Dentro do 2º vai a lista dos &lt;em&gt;feeds&lt;/em&gt; em si, cada um dentro de um &lt;code&gt;&amp;lt;outline&amp;gt;&lt;/code&gt;. Os &lt;code&gt;&amp;lt;outlines&amp;gt;&lt;/code&gt;s podem ser aninhados (caso se deseje colocar &lt;em&gt;feeds&lt;/em&gt; dentro de uma categoria, por exemplo) e claro que uma lista típica vai trazer mais de um &lt;em&gt;feed&lt;/em&gt;, mas a intenção aqui é só mostrar o formato. O atributo chave para a gente aqui é o &lt;code&gt;xmlUrl&lt;/code&gt;, que é o endereço do &lt;em&gt;feed&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Nós já sabemos o formato usado para importação de &lt;em&gt;feeds&lt;/em&gt; e como formar a URL de um &lt;em&gt;feed&lt;/em&gt; de um canal no YouTube a partir do seu ID.&lt;/p&gt;
&lt;p&gt;Só precisamos obter a lista dos IDs dos canais agora.&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;https://takeout.google.com/&#34;&gt;Google Takeout&lt;/a&gt; é uma forma de fazer download de todos os registros que a Google possui de um usuário. Basta não esquecer de marcar o YouTube que o arquivo resultante vai conter uma lista de inscrições em &lt;code&gt;Takeout/YouTube and YouTube Music/subscriptions/subscriptions.csv&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O formato é bem simples, é um CSV de 3 colunas:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Channel ID,Channel URL,Channel title
UC0fGGprihDIlQ3ykWvcb9hg,http://www.youtube.com/channel/UC0fGGprihDIlQ3ykWvcb9hg,Tese Onze
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Se você é como eu, pensou logo em fazer um &lt;em&gt;shell script&lt;/em&gt; que para cada linha do CSV:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;concatena &lt;code&gt;https://www.youtube.com/feeds/videos.xml?channel_id=&lt;/code&gt; com os valores da 1ª coluna;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;joga o valor resultante dentro de um &lt;code&gt;&amp;lt;outline&amp;gt;&lt;/code&gt;, numa propriedade &lt;code&gt;xmlURL&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Provavelmente funcionaria, mas decidi não &lt;a href=&#34;https://stackoverflow.com/questions/3034611/whats-so-bad-about-building-xml-with-string-concatenation&#34;&gt;correr&lt;/a&gt; com &lt;a href=&#34;https://news.ycombinator.com/item?id=16915823&#34;&gt;tesouras&lt;/a&gt; dessa vez e usei pacotes JavaScript próprios para processar &lt;a href=&#34;https://d3js.org/&#34;&gt;CSV&lt;/a&gt; e &lt;a href=&#34;https://github.com/scripting/opmlPackage&#34;&gt;OPML&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se quiser usar no seu navegador, acesse: &lt;a href=&#34;https://yt2opml.gmgall.net/&#34;&gt;https://yt2opml.gmgall.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tudo é 100% feito no lado do cliente. O &lt;a href=&#34;https://github.com/gmgall/YTtoOPML&#34;&gt;código&lt;/a&gt; é de um &lt;em&gt;backender&lt;/em&gt;, então as manipulações do DOM provavelmente poderiam ser mais elegantes, mas funciona.&lt;/p&gt;
&lt;p&gt;Com o arquivo OPML gerado, foi só importá-lo no FreshRSS. Uma possibilidade &lt;strong&gt;muito interessante&lt;/strong&gt; nele é a instalação de uma &lt;a href=&#34;https://github.com/kevinpapst/freshrss-youtube&#34;&gt;extensão&lt;/a&gt; que incorpora os vídeos dentro. Assim, não é necessário sair do agregador para assistir aos vídeos. Mostrei como fica no vídeo abaixo.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/FwTSpqo4Ucw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;FreshRSS com extensão pra embutir vídeos do YouTube ativada.&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Bem prático, não?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tchau, Twitter</title>
      <link>https://gmgall.net/blog/tchau-twitter/</link>
      <pubDate>Wed, 08 Feb 2023 21:46:17 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/tchau-twitter/</guid>
      <description>&lt;p&gt;Ok, talvez esse título seja um pouco &lt;em&gt;clickbait&lt;/em&gt;. Eu sou &lt;em&gt;junkie&lt;/em&gt; demais daquele site para abandoná-lo de uma hora para outra, mas acredito que seja uma boa para todo mundo deixá-lo para trás. Meu uso já diminuiu muito nos últimos tempos.&lt;/p&gt;
&lt;p&gt;TL;DR. Tenho usado pouco o Twitter. O uso está diminuindo a cada dia. Ficarei feliz em manter contato por &lt;a href=&#34;https://gmgall.net/contact&#34;&gt;outros meios&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Começo a escrever esse texto no momento em que um &lt;em&gt;script&lt;/em&gt; em Python que eu estava executando há algumas horas me devolveu o terminal. Era um apagador de tuites em massa que escrevi. Eu fazia uma limpa na minha conta de tempos em tempos.&lt;/p&gt;
&lt;p&gt;Uso o passado acima porque &lt;a href=&#34;https://twitter.com/TwitterDev/status/1621026986784337922&#34;&gt;em poucas horas será interrompido o acesso gratuito à API do Twitter&lt;/a&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Meu script usava a API. Eu provavelmente não conseguirei mais usá-lo. O anúncio da interrupção foi feito super em cima da hora. Muitos &lt;em&gt;bots&lt;/em&gt; e contas interessantes morrerão com essa medida. Pesquisadores que trabalhavam com tuites não conseguirão mais fazer sua pesquisa.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;screenshot_twitter_baixa_essa_porra.png&#34;
         alt=&#34;Print do tuite da conta @BaixaEssaPorra, anunciando que o bot será desativado com o fim da API gratuita.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;O bot de download de vídeos &amp;#34;Baixa Essa Porra&amp;#34; foi um dos afetados pelo fim do acesso gratuito à API.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A forma repentina com que a empresa cortou acesso à API foi para mim a gota d&amp;rsquo;água. A nova gerência realmente tem me deixado bastante desgostoso com aquela bodega. Tem muita coisa rolando que me incomoda. O dono está estragando seu novo brinquedo bem rápido.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.deadder.net/&#34;&gt;&lt;figure&gt;&lt;img src=&#34;de_addler_comic.webp&#34;
         alt=&#34;Cartum de Michael de Adder que mostra o comboio de Immortan Joe, do filme &amp;#34;Mad Max: Fury Road&amp;#34;, com o logo do Twitter na frente. O caminhão traz uma placa escrito &amp;#34;Under new management&amp;#34;.&#34; width=&#34;75%&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Tira de Michael de Adder. Logo se vê que ele é um cartunista gente boa. Melhor ver o comboio do Immortan Joe do que Musk e seus fãs chegando.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4 grandes motivos me fazem querer deixar o Twitter para trás:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;o site anda bem &amp;ldquo;bugado&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;anistia a umas figuras que não são flor que se cheire;&lt;/li&gt;
&lt;li&gt;uma &lt;em&gt;web&lt;/em&gt; centralizada não é minha visão de &lt;em&gt;web&lt;/em&gt; ideal;&lt;/li&gt;
&lt;li&gt;já não consigo usar o Twitter para manter contato com as pessoas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Abaixo falo um pouco mais de cada um.&lt;/p&gt;
&lt;h2 id=&#34;bugs-muitos-bugs&#34;&gt;Bugs, muitos bugs&lt;/h2&gt;
&lt;p&gt;Só nos últimos meses experimentei o seguinte:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;o encurtador de URLs do Twitter deixou de funcionar (as URLs &lt;a href=&#34;https://t.co&#34;&gt;https://t.co&lt;/a&gt; davam só 404);&lt;/li&gt;
&lt;li&gt;alguns tuites apareciam só na &lt;em&gt;timeline&lt;/em&gt; &amp;ldquo;para você&amp;rdquo; e outros só na &amp;ldquo;seguindo&amp;rdquo;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, o que me fazia frequentemente não ver tuites;&lt;/li&gt;
&lt;li&gt;tuites apareciam duplicados;&lt;/li&gt;
&lt;li&gt;tuites não eram feitos, iam direto para os rascunhos;&lt;/li&gt;
&lt;li&gt;notificações não chegavam ou chegavam com muito atraso.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;festa-estranha-com-gente-esquisita&#34;&gt;Festa estranha, com gente esquisita&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://knowyourmeme.com/memes/space-karen&#34;&gt;Space Karen&lt;/a&gt; é daqueles absolutistas da liberdade de expressão. Sabe aqueles? Que não se importam de estarem na &lt;a href=&#34;https://twitter.com/search?q=mesa%2010%20pessoas%20nazistas&amp;amp;src=typed_query&#34;&gt;proverbial mesa&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Desde que assumiu o comando, Elon deixou voltar para o Twitter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trump (não preciso detalhar, preciso?);&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/4LqZdkkBDas&#34;&gt;Jordan Peterson&lt;/a&gt; (uma espécie de Olavo de Carvalho gringo, só que melhor vestido e infelizmente ainda vivo);&lt;/li&gt;
&lt;li&gt;Kanye West (entrou numas piras antissemitas);&lt;/li&gt;
&lt;li&gt;Andrew Tate (&lt;a href=&#34;https://escrevalolaescreva.blogspot.com/2012/05/o-masculinismo-como-ele-e.html&#34;&gt;masculinista&lt;/a&gt; famoso recentemente &lt;a href=&#34;https://www.bbc.com/news/world-europe-64122628&#34;&gt;detido na Romênia&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;Marjorie Taylor Greene (deputada estadunidense de extrema direita que teve a conta limitada por falar &lt;a href=&#34;https://edition.cnn.com/2021/08/10/tech/twitter-marjorie-taylor-greene/index.html&#34;&gt;besteira sobre a pandemia&lt;/a&gt; e tinha &lt;a href=&#34;https://youtu.be/b2RdZRORfyY&#34;&gt;comerciais&lt;/a&gt; &lt;a href=&#34;https://youtu.be/y5f_sHriEto&#34;&gt;sensacionais&lt;/a&gt; na época da campanha).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tem mais gente nessa lista, mas já deu para entender o tipo de gente que recebeu anistia, né?&lt;/p&gt;
&lt;p&gt;Quais as probabilidades de denúncias por assédio, por exemplo, serem levadas a sério se esse é o tipo de pessoa que está sendo convidada a voltar? A moderação não era uma maravilha antes, fica claro que deve piorar bastante.&lt;/p&gt;
&lt;h2 id=&#34;não-quero-uma-web-centralizada&#34;&gt;Não quero uma &lt;em&gt;web&lt;/em&gt; centralizada&lt;/h2&gt;
&lt;p&gt;Se você já conversou comigo 5 minutos que seja sobre o assunto, já me ouviu dizer que a &lt;a href=&#34;https://thewebisfucked.com/&#34;&gt;&lt;em&gt;web&lt;/em&gt; moderna está fodida&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Na época dos sites pessoais no venerável &lt;a href=&#34;https://en.wikipedia.org/wiki/Yahoo!_GeoCities&#34;&gt;GeoCities&lt;/a&gt;&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; e &lt;a href=&#34;https://web.archive.org/web/20000407212320/http://www.hpg.com.br/&#34;&gt;outros serviços parecidos&lt;/a&gt;, cada um mantinha seu &amp;ldquo;canto na &lt;em&gt;web&lt;/em&gt;&amp;rdquo; e trafegava entre eles livremente. Era costume o dono de uma página &lt;em&gt;linkar&lt;/em&gt; outras que achasse interessante, existiam os &lt;a href=&#34;https://en.wikipedia.org/wiki/Webring&#34;&gt;webrings&lt;/a&gt; e os &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_directory&#34;&gt;diretórios&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ninguém era desencorajado a &lt;em&gt;linkar&lt;/em&gt; para outros sites, muito pelo contrário. Fazia parte da cultura internética. A &lt;em&gt;web&lt;/em&gt; se parecia com uma coleção de praças públicas com trânsito livre entre elas.&lt;/p&gt;
&lt;p&gt;Corta para 2022 e tivemos &lt;a href=&#34;https://fortune.com/2022/12/18/twitter-suspends-paul-graham-venture-capitalist-supportive-of-elon-musk-after-he-tweets-about-mastodon-link/&#34;&gt;usuários do Twitter sendo punidos por &lt;em&gt;linkarem&lt;/em&gt; para outra rede social&lt;/a&gt;. Hoje centralização e retenção de tráfego são os nomes do jogo. Se uma empresa deixa você sair dos limites do seu feudo internético, perde oportunidades de te mostrar anúncios ou de coletar dados sobre você (para que outras empresas possam te mostrar anúncios). A &lt;em&gt;web&lt;/em&gt; das praças públicas morreu, agora temos uma &lt;em&gt;web&lt;/em&gt; de condomínios fechados.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;twitter_policy.png&#34;
         alt=&#34;Print de um trecho da página de políticas de uso do Twitter. Ela diz que qualquer promoção de redes de terceiros está proibida.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;No feudo Twitter, nada de falar de outros feudos, hein?&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Essas questões são importantes para mim há muito tempo, mas estavam mais ou menos dormentes. A comodidade me fez colocá-las em segundo plano. O Twitter me dava a sensação de ser dos feudos menos piores para se estar preso, então fui ficando.&lt;/p&gt;
&lt;p&gt;Só que agora o senhor feudal é maluco. Relembrei da pior forma dos motivos pelos quais me importava com liberdade na &lt;em&gt;web&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Tomei algumas atitudes para voltar a ser um &lt;a href=&#34;https://www.merriam-webster.com/dictionary/netizen&#34;&gt;&lt;em&gt;netizen&lt;/em&gt;&lt;/a&gt; mais livre: voltei a usar RSS&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;, a manter um site meu&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt; e, no mundo das redes sociais, criei perfil numa rede social &lt;a href=&#34;https://fedi.tips/who-owns-the-fediverse-is-the-fediverse-owned-by-a-corporation-or-venture-capital-firm-can-it-be-bought-out-by-google-facebook-elon-musk/&#34;&gt;sem dono&lt;/a&gt;, &lt;a href=&#34;https://fedi.video/w/9dRFC6Ya11NCVeYKn8ZhiD&#34;&gt;federada&lt;/a&gt;. Sim, essa é a hora em que eu te convido a me seguir no Mastodon. Não seria um texto de &amp;ldquo;despedida&amp;rdquo; do Twitter sem isso. Estou em &lt;a href=&#34;https://bolha.us/@gmgall&#34;&gt;@gmgall@bolha.us&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;são-as-pessoas-que-importam&#34;&gt;São as pessoas que importam&amp;hellip;&lt;/h2&gt;
&lt;p&gt;&amp;hellip;e infelizmente o Twitter não presta mais para manter contato com elas. Nos últimos tempos, notificações não chegam ou chegam com atraso; se leio &lt;strong&gt;uma&lt;/strong&gt; DM, &lt;strong&gt;todas&lt;/strong&gt; as notificações somem e não vejo todo mundo que interagiu comigo.&lt;/p&gt;
&lt;p&gt;Apesar de todas as considerações dos itens anteriores, mantive minha conta porque só no Twitter arrumei &amp;ldquo;a minha galera&amp;rdquo;. Gente importante para mim, com quem me diverti e aprendi muito.&lt;/p&gt;
&lt;p&gt;Isso nunca aconteceu no Facebook e no Instagram. Foi bem fácil me livrar da minha conta nessas redes. Já deixei de usá-las há vários anos. Nem no Orkut, que tanta gente lembra com nostalgia, tive interações tão legais quanto no Twitter. &lt;strike&gt;Na real, cago pro Orkut. Vai ver é recalque pela escassez de corações e cubos de gelo.&lt;/strike&gt;
&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;orkut.jpeg&#34;
         alt=&#34;Print da legenda do Orkut. Cada perfil podia ser avaliado pelos outros em uma escala que variava de 1 a 3 corações, 1 a 3 cubos de gelo e 1 a 3 carinhas sorridentes.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;O início do fim da saúde mental de muitos adolescentes brasileiros da minha geração.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Se você está lendo esse texto, grandes são as probabilidades de me acompanhar lá no Twitter, então te encorajo a manter contato por um dos meios que listo aqui: &lt;a href=&#34;https://gmgall.net/contact&#34;&gt;https://gmgall.net/contact&lt;/a&gt;. &lt;strong&gt;Eu ficarei feliz com um contato, não hesite em fazê-lo&lt;/strong&gt;. 😊&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Aliás, acho que essa foi a menor polêmica do dia. Muita gente estava reclamando sobre limites de postagens e de &lt;em&gt;follows&lt;/em&gt; que passaram a ser aplicados sem aviso prévio. Já não estou acompanhando tanto para ter certeza do que foi, mas era algo nesse sentido.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Qual a dificuldade de ter uma &lt;em&gt;timeline&lt;/em&gt; única com postagens em ordem cronológica das contas que eu sigo?&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;O &lt;a href=&#34;https://archive.org&#34;&gt;Internet Archive&lt;/a&gt; fez um trabalho muito importante de arquivamento de parte dos sites hospedados lá.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;O &lt;a href=&#34;https://neocities.org/&#34;&gt;Neocities&lt;/a&gt; é como um sucessor espiritual do GeoCities. É um serviço bem bacana, dê uma olhada nele.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;
&lt;p&gt;Fiquei muito tempo órfão do Google Reader. Usei o Feedly por um tempo, mas não me adaptei bem. Hoje estou muito satisfeito com o &lt;a href=&#34;https://freshrss.org&#34;&gt;FreshRSS&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34;&gt;
&lt;p&gt;Todo mundo na &lt;em&gt;web&lt;/em&gt; deveria ter o &amp;ldquo;seu canto&amp;rdquo;. Um bom começo é um &lt;em&gt;blog&lt;/em&gt;. Faça a porra de um &lt;em&gt;blog&lt;/em&gt;: &lt;a href=&#34;https://startafuckingblog.com/&#34;&gt;https://startafuckingblog.com/&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Shortcodes no Hugo Inserem Quebras de Linha Indesejadas</title>
      <link>https://gmgall.net/blog/shortcodes-no-hugo-inserem-quebras-de-linha-indesejadas/</link>
      <pubDate>Wed, 08 Feb 2023 11:57:12 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/shortcodes-no-hugo-inserem-quebras-de-linha-indesejadas/</guid>
      <description>&lt;p&gt;Essa já &amp;ldquo;me pegou&amp;rdquo; algumas vezes e demorei um pouco para encontrar solução, então documento aqui.&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; insere quebras de linha após o conteúdo gerado pelos &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;shortcodes&lt;/a&gt; que podem causar a renderização do HTML de forma indesejada.&lt;/p&gt;
&lt;p&gt;Exemplo: suponha que no seu site você queira tratar das palavras sagradas protegidas pelos &lt;a href=&#34;https://youtu.be/0e2kaQqxmQ0&#34;&gt;Cavaleiros que Dizem Ni&lt;/a&gt;. Você quer usar um &lt;em&gt;snippet&lt;/em&gt; de código para inseri-las, afinal são sagradas e você não quer correr o risco de digitá-las errado.&lt;/p&gt;
&lt;p&gt;Então cria o seguinte &lt;em&gt;shortcode&lt;/em&gt; em &lt;code&gt;layouts/shortcodes/sacred_words.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ni&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;peng&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neee-won&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;upper&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;delimit&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; e &amp;#34;&lt;/span&gt; ) }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;E usa o &lt;em&gt;shortcode&lt;/em&gt; no meio do markdown em alguma página de conteúdo. Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Os Cavaleiros que Dizem &amp;#34;Ni&amp;#34; são os quardiões das palavras sagradas {{&amp;lt; &lt;span style=&#34;color:#f92672&#34;&gt;sacred_words&lt;/span&gt; &amp;gt;}}.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ao visualizar o HTML gerado para esse trecho, vê algo como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Os Cavaleiros que Dizem &amp;amp;ldquo;Ni&amp;amp;rdquo; são os quardiões das palavras sagradas 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NI, PENG E NEEE-WON
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Tem uma quebra de linha indesejada no final do conteúdo gerado pelo &lt;em&gt;shortcode&lt;/em&gt;.&lt;/strong&gt; O código do &lt;em&gt;shortcode&lt;/em&gt; não insere essa quebra, mas ela está lá. Isso faz esse trecho ser renderizado da seguinte forma pelos navegadores:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Os Cavaleiros que Dizem “Ni” são os quardiões das palavras sagradas NI, PENG E NEEE-WON .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Tem um espaço entre a última palavra e o ponto final da frase&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Encontrei &lt;strike&gt;as gambiarras&lt;/strike&gt;
 os &lt;em&gt;workarounds&lt;/em&gt; para resolver esse problema numa &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/1753&#34;&gt;issue do próprio projeto Hugo&lt;/a&gt;, mas parece que a discussão sobre mudar esse comportamento dos &lt;em&gt;shortcodes&lt;/em&gt; não andou muito. Resta-nos nos adaptar.&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;Uma das gambiarras&lt;/strike&gt;
Um dos recursos técnicos é truncar o arquivo do &lt;em&gt;shortcode&lt;/em&gt; com o comando &lt;code&gt;truncate -s -1 layouts/shortcodes/sacred_words.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Depois disso, o HTML gerado para o trecho que usa o &lt;em&gt;shortcode&lt;/em&gt; fica assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Os Cavaleiros que Dizem &amp;amp;ldquo;Ni&amp;amp;rdquo; são os quardiões das palavras sagradas 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NI, PENG E NEEE-WON.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;E é renderizado da seguinte forma:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Os Cavaleiros que Dizem “Ni” são os quardiões das palavras sagradas NI, PENG E NEEE-WON.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Vitória!&lt;/p&gt;
&lt;p&gt;Satisfeito, você decide que só falta uma coisa para o seu &lt;em&gt;shortcode&lt;/em&gt; ficar perfeito: ele precisa inserir código para gerar um alerta gritando &amp;ldquo;ni&amp;rdquo; a cada vez que a página é (re)carregada. Por sorte, pouco código precisa ser adicionado para isso. O &lt;em&gt;shortcode&lt;/em&gt; agora tem a seguinte implementação:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ni&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;peng&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neee-won&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;upper&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;delimit&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; e &amp;#34;&lt;/span&gt; ) }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NI&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;)&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dessa vez você está esperto e &lt;strong&gt;lembra de truncar o arquivo&lt;/strong&gt;. Quando vai ver a página gerada num navegador, o alerta aparece, mas&amp;hellip;&lt;/p&gt;
&lt;p&gt;O espaço entre a última palavra sagrada e o ponto final está lá de novo! Mesmo após usar o &lt;code&gt;truncate&lt;/code&gt;! O HTML foi gerado com uma quebra de linha indesejada novamente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Os Cavaleiros que Dizem &amp;amp;ldquo;Ni&amp;amp;rdquo; são os quardiões das palavras sagradas 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NI, PENG E NEEE-WON
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NI&amp;#39;&lt;/span&gt;)&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se o seu &lt;em&gt;shortcode&lt;/em&gt; vai inserir mais coisa do que a saída gerada pelos comandos da linguagem de &lt;em&gt;template&lt;/em&gt; do Go, como é o trecho &lt;code&gt;&amp;lt;script&amp;gt;alert(&#39;NI&#39;)&amp;lt;/script&amp;gt;.&amp;lt;/p&amp;gt;&lt;/code&gt; no exemplo acima, você precisa retirar aquela quebra antes do trecho também.&lt;/p&gt;
&lt;p&gt;Isso pode ser feito deixando o &lt;em&gt;shortcode&lt;/em&gt; assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ni&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;peng&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neee-won&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;upper&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;delimit&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; e &amp;#34;&lt;/span&gt; ) }}{{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NI&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;)&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Agora sim, as quebras de linha que fazem a página ser renderizada erradamente estão fora. O espaço antes do ponto final não aparece mais e o alerta ocorre.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A versão dos softwares envolvidos no momento em que escrevo esse texto são as seguintes:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ go version
go version go1.19.4 linux/amd64
$ hugo version
hugo v0.109.0+extended linux/amd64 BuildDate=unknown
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://gmgall.net/blog/hello-world/</link>
      <pubDate>Thu, 12 Jan 2023 13:45:38 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/hello-world/</guid>
      <description>&lt;p&gt;Eu já tentei manter um site pessoal na internet N vezes. Nunca foi &amp;ldquo;pra frente&amp;rdquo;. Essa é a tentativa N + 1.&lt;/p&gt;
&lt;p&gt;Não preciso ser convencido da importância da escrita, sei dos benefícios que posso tirar dela. Escrever nos ajuda a entender as coisas, robustece nosso pensamento. Existem coisas que parecem bem estruturadas na nossa cabeça até que tentemos escrever ou conversar com alguém sobre. Escrever é &lt;a href=&#34;https://en.wikipedia.org/wiki/Debugging&#34;&gt;&lt;em&gt;debugar&lt;/em&gt;&lt;/a&gt; a si mesmo.&lt;/p&gt;
&lt;p&gt;Depois que entendi isso, abandonei qualquer pretensão de originalidade, que, aliás, é &lt;a href=&#34;https://guzey.com/personal/why-have-a-blog/#but-i-dont-have-anything-original-to-say-and-i-would-be-just-repeating-things-said-elsewhere-on-the-internet&#34;&gt;superestimada&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ainda assim, a procrastinação seguia. Eu implicava com 2 coisas principalmente: a organização do conteúdo e a &lt;em&gt;stack&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;organização-do-conteúdo&#34;&gt;Organização do conteúdo&lt;/h2&gt;
&lt;p&gt;Ter um blog em que escrevesse tudo que eu quisesse, usando apenas tags para organizar o conteúdo, não me parecia ideal. E se alguém de TI entrasse no site buscando conteúdo técnico e tivesse que navegar por um monte de textos opinativos? E se alguma amiga de fora da área de tecnologia entrasse no site e visse um monte de textos sobre desenvolvimento de software?&lt;/p&gt;
&lt;p&gt;Quero poder escrever sobre tudo que me interessa, mas também não quero alienar uma potencial audiência apresentando tudo &amp;ldquo;junto e misturado&amp;rdquo;, numa forma difícil de navegar.&lt;/p&gt;
&lt;p&gt;Considerei sites separados para cada tipo de conteúdo, mas o trabalho extra necessário para manter mais de um site me demoveu dessa ideia. Fora que suscita a pergunta: qual critério eu deveria usar para colocar determinado conteúdo num site e não no outro? Os sites pessoais mais &lt;a href=&#34;https://aurelio.net/&#34;&gt;interessantes&lt;/a&gt; &lt;a href=&#34;https://epxx.co/&#34;&gt;que&lt;/a&gt; &lt;a href=&#34;https://thobias.org/&#34;&gt;conheço&lt;/a&gt; tratam de &lt;a href=&#34;https://epxx.co/artigos/index_pens.html&#34;&gt;tudo&lt;/a&gt; &lt;a href=&#34;https://aurelio.net/fvm/&#34;&gt;que &amp;ldquo;dá na telha&amp;rdquo;&lt;/a&gt; dos donos. O meu seria assim também.&lt;/p&gt;
&lt;p&gt;Foi remoendo as questões acima que decidi usar a organização com 2 &lt;a href=&#34;https://gohugo.io/content-management/taxonomies/&#34;&gt;taxonomias&lt;/a&gt; (&lt;strong&gt;categorias e tags&lt;/strong&gt;), que já é usada em muitos blogs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uma &lt;a href=&#34;https://gmgall.net/categories&#34;&gt;categoria&lt;/a&gt; é uma classificação mais ampla e dificilmente um post vai estar em mais de uma categoria. Para começar, terei 2 categorias: uma para posts &lt;a href=&#34;https://gmgall.net/categories/tech&#34;&gt;técnicos&lt;/a&gt; e outra para posts &lt;a href=&#34;https://gmgall.net/categories/non-tech&#34;&gt;não técnicos&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Uma &lt;a href=&#34;https://gmgall.net/tags&#34;&gt;tag&lt;/a&gt; é uma classificação mais estrita e frequentemente um post terá mais de uma tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Além disso, existem as seções de conteúdo separadas. Nelas cada página pode receber categorias e tags também, mas elas são apresentadas de forma diferente dos textos. A única seção separada hoje é a de &lt;a href=&#34;https://gmgall.net/books&#34;&gt;leituras&lt;/a&gt;. Pretendo que cada página sobre um livro mostre ao menos uma imagem da capa e informações do livro em destaque.&lt;/p&gt;
&lt;p&gt;Cada categoria, tag e seção separada terá seu próprio &lt;em&gt;feed&lt;/em&gt; RSS. Um potencial leitor pode assinar o &lt;em&gt;feed&lt;/em&gt; específico e acompanhar apenas o conteúdo de seu interesse.&lt;/p&gt;
&lt;h2 id=&#34;stack&#34;&gt;Stack&lt;/h2&gt;
&lt;p&gt;Depois de algumas tentativas de usar &lt;a href=&#34;https://en.wikipedia.org/wiki/Content_management_system&#34;&gt;CMS&lt;/a&gt;s, ficou claro que eu não queria ter o trabalho de instalar e manter atualizados os softwares de uma pilha &lt;a href=&#34;https://en.wikipedia.org/wiki/LAMP_(software_bundle)&#34;&gt;LAMP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Static_site_generator&#34;&gt;Geradores de sites estáticos&lt;/a&gt; seriam meu caminho. Li sobre as opções disponíveis e fiquei convencido de que o melhor &amp;ldquo;no mercado&amp;rdquo; é o &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Decidi usá-lo. Gostei do que vi nos primeiros usos, mas demorei um pouco até encontrar um &lt;a href=&#34;https://www.pragprog.com/titles/bhhugo/build-websites-with-hugo/&#34;&gt;livro que me ensinou decentemente&lt;/a&gt; sobre ele.&lt;/p&gt;
&lt;p&gt;Para hospedagem, estou usando &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para fazer o &lt;em&gt;build&lt;/em&gt; e o &lt;em&gt;deploy&lt;/em&gt;, estou usando &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;. Existem &lt;em&gt;actions&lt;/em&gt; prontas para &lt;a href=&#34;https://github.com/marketplace/actions/hugo-setup&#34;&gt;instalar o Hugo&lt;/a&gt; e &lt;a href=&#34;https://github.com/marketplace/actions/github-pages-action&#34;&gt;fazer o &lt;em&gt;deploy&lt;/em&gt; no GitHub Actions&lt;/a&gt;, então o &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt;&lt;/a&gt; fica relativamente simples.&lt;/p&gt;
&lt;p&gt;O primeiro lugar em que li sobre esse tipo de &lt;em&gt;workflow&lt;/em&gt; foi em &lt;a href=&#34;https://www.morling.dev&#34;&gt;morling.dev&lt;/a&gt;, no post &lt;a href=&#34;https://www.morling.dev/blog/automatically-deploying-hugo-website-via-github-actions/&#34;&gt;&lt;em&gt;Automatically Deploying a Hugo Website via GitHub Actions&lt;/em&gt;&lt;/a&gt;. Seguindo esse caminho, você fica com um repositório único que contém o código fonte do site (em um &lt;em&gt;branch&lt;/em&gt; principal) e os arquivos que efetivamente são servidos (em um &lt;em&gt;branch&lt;/em&gt; &lt;a href=&#34;https://dev.to/mcaci/how-to-create-an-orphan-branch-in-git-35ac&#34;&gt;órfão&lt;/a&gt; &lt;code&gt;gp-pages&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Outro padrão que vi sendo bastante usado é ter 2 repositórios: um só para o código fonte e outro só para os arquivos que serão servidos pelo GitHub Pages. Veja um exemplo em &lt;a href=&#34;https://ruddra.com/hugo-deploy-static-page-using-github-actions/&#34;&gt;&lt;em&gt;Hugo: Deploy Static Site using GitHub Actions&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Pensar nisso tudo acima antes mesmo de ter o que postar é complicar demais o que é simples, você deve estar pensando. O ideal seria simplesmente começar e ir ajustando o que fosse necessário pelo caminho.&lt;/p&gt;
&lt;p&gt;E você estaria certa. Procrastinei manter um site na web por muito mais tempo do que me orgulho. Estou com o domínio gmgall.net &amp;ldquo;parado&amp;rdquo; há vários anos.&lt;/p&gt;
&lt;p&gt;Protelei tanto por uma ansiedade de me expor que só consegui lidar melhor com &lt;a href=&#34;https://pt.wikipedia.org/wiki/Psicoterapia&#34;&gt;ajuda&lt;/a&gt;. Então deseje-me sorte e seja bem vinda, pessoa leitora! 😁&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando Suas Próprias Ações no fail2ban - Parte 3</title>
      <link>https://gmgall.net/blog/criando-suas-proprias-acoes-no-fail2ban-parte-3/</link>
      <pubDate>Thu, 04 Aug 2011 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/criando-suas-proprias-acoes-no-fail2ban-parte-3/</guid>
      <description>&lt;h2 id=&#34;estrutura-de-uma-ação&#34;&gt;Estrutura de uma ação&lt;/h2&gt;
&lt;p&gt;Cada ação é um arquivo no diretório &lt;code&gt;action.d&lt;/code&gt;. Esses arquivos seguem a seguinte estrutura:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Definition]

# Option:  actionstart
# Notes.:  comando executado ao iniciar o Fail2Ban.
# Values:  CMD
#
actionstart =


# Option:  actionstop
# Notes.:  comando executado ao encerrar o Fail2Ban
# Values:  CMD
#
actionstop =


# Option:  actioncheck
# Notes.:  comando executado antes de cada comando actionban
# Values:  CMD
#
actioncheck =


# Option:  actionban
# Notes.:  comando executado ao banir um IP. Observe que o comando
#          é executado com as permissões do usuário executando o Fail2Ban.
# Tags:    &amp;lt;ip&amp;gt;  IP address
#          &amp;lt;failures&amp;gt;  number of failures
#          &amp;lt;time&amp;gt;  unix timestamp of the ban time
# Values:  CMD
#
actionban = ipfw add deny tcp from &amp;lt;ip&amp;gt; to &amp;lt;localhost&amp;gt; &amp;lt;port&amp;gt;


# Option:  actionunban
# Notes.:  comando executado ao &amp;#34;desbanir&amp;#34; um IP. Observe que o comando
#          é executado com as permissões do usuário executando o Fail2Ban.
# Tags:    &amp;lt;ip&amp;gt;  IP address
#          &amp;lt;failures&amp;gt;  number of failures
#          &amp;lt;time&amp;gt;  unix timestamp of the ban time
# Values:  CMD
#
actionunban = ipfw delete `ipfw list | grep -i &amp;lt;ip&amp;gt; | awk &amp;#39;{print $1;}&amp;#39;`

[Init]

# Option:  port
# Notes.:  specifies port to monitor
# Values:  [ NUM | STRING ]
#
port = ssh

# Option:  localhost
# Notes.:  the local IP address of the network interface
# Values:  IP
#
localhost = 127.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O arquivo que usei de exemplo acima já vem com o pacote e configura uma ação que usa o ipfw para bloquear os IPs. Traduzi os comentários da seção &lt;code&gt;[Definition]&lt;/code&gt; para explicar o que cada entrada define.&lt;/p&gt;
&lt;p&gt;A seção &lt;code&gt;[Init]&lt;/code&gt; define &amp;ldquo;variáveis&amp;rdquo; que podem ser usadas ao longo do arquivo. Nesse exemplo, &lt;code&gt;port&lt;/code&gt; e &lt;code&gt;localhost&lt;/code&gt;, mas que variáveis definir é por conta do usuário. &lt;strong&gt;Lembrando que&lt;/strong&gt; &lt;code&gt;&amp;lt;ip&amp;gt;&lt;/code&gt; &lt;strong&gt;vira o IP/hostname casado no grupo&lt;/strong&gt; &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; &lt;strong&gt;dos filtros&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;definindo-uma-ação&#34;&gt;Definindo uma ação&lt;/h2&gt;
&lt;p&gt;Existem ações predefinidas que bloqueiam por &lt;code&gt;iptables&lt;/code&gt;, &lt;code&gt;ipfw&lt;/code&gt;, &lt;code&gt;shorewall&lt;/code&gt;, TCP wrappers, que avisam por e-mail a cada bloqueio&amp;hellip; Mas não existe nenhuma que avise via Gtalk. Vamos criar uma ação que faz isso.&lt;/p&gt;
&lt;p&gt;Usarei o programa &lt;a href=&#34;https://web.archive.org/web/20110827104139/http://sendxmpp.platon.sk/&#34;&gt;sendxmpp&lt;/a&gt; para definir uma ação que enviará uma mensagem para mim no Gtalk a cada evento. Como configurar o sendxmpp para o Gtalk &lt;a href=&#34;http://ubuntuforums.org/showpost.php?s=0ecf5b2a9c9a97fbfa5438c354dcfc2c&amp;amp;p=8876182&amp;amp;postcount=3&#34;&gt;pode ser visto aqui&lt;/a&gt;. Conheci o sendxmpp num &lt;a href=&#34;http://eriberto.pro.br/blog/2011/03/02/mensagens-jabber-via-linha-de-comando-ideal-para-servidores-de-rede/&#34;&gt;post&lt;/a&gt; do &lt;a href=&#34;http://eriberto.pro.br/blog/&#34;&gt;blog&lt;/a&gt; do &lt;a href=&#34;http://eriberto.pro.br/site/&#34;&gt;João Eriberto Mota Filho&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/eribertomota&#34;&gt;@eribertomota&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Vamos à listagem do arquivo &lt;code&gt;action.d/gtalk.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Definition]

actionstart = printf %%b &amp;#34;Hi,\n
              The jail &amp;lt;name&amp;gt; has been started successfully.\n
              Regards,\n
              Fail2Ban&amp;#34;|sendxmpp -t -u &amp;lt;from&amp;gt; -o gmail.com 

actionstop = printf %%b &amp;#34;Hi,\n
             The jail &amp;lt;name&amp;gt; has been stopped.\n
             Regards,\n
             Fail2Ban&amp;#34;|sendxmpp -t -u &amp;lt;from&amp;gt; -o gmail.com 

actioncheck =

actionban = printf %%b &amp;#34;Hi,\n
            The IP &amp;lt;ip&amp;gt; has just been banned by Fail2Ban after
            &amp;lt;failures&amp;gt; attempts against &amp;lt;name&amp;gt;.\n
            Regards,\n
            Fail2Ban&amp;#34;|sendxmpp -t -u &amp;lt;from&amp;gt; -o gmail.com &amp;lt;to&amp;gt;

actionunban =

[Init]

name = default

from =

to =
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Essa ação enviará uma mensagem para o usuário definido em &lt;code&gt;to&lt;/code&gt; tendo como remetente o usuário definido em &lt;code&gt;from&lt;/code&gt; ao iniciar, parar e ao bloquear um IP.&lt;/p&gt;
&lt;h2 id=&#34;ativando-sua-ação&#34;&gt;Ativando sua ação&lt;/h2&gt;
&lt;p&gt;As ações são definidas por &lt;em&gt;jail&lt;/em&gt; ou globalmente na seção &lt;code&gt;[DEFAULT]&lt;/code&gt; de &lt;code&gt;jail.local&lt;/code&gt;. Ações definidas nas &lt;em&gt;jails&lt;/em&gt; tem prioridade sobre as definidas globalmente.&lt;/p&gt;
&lt;p&gt;Observe o seguinte trecho de &lt;code&gt;jail.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ACTIONS
#

# Default banning action (e.g. iptables, iptables-new,
# iptables-multiport, shorewall, etc) It is used to define
# action_* variables. Can be overriden globally or per
# section within jail.local file
banaction = iptables-multiport

# email action. Since 0.8.1 upstream fail2ban uses sendmail
# MTA for the mailing. Change mta configuration parameter to mail
# if you want to revert to conventional &amp;#39;mail&amp;#39;.
mta = sendmail

# Default protocol
protocol = tcp

#
# Action shortcuts. To be used to define action parameter

# The simplest action to take: ban only
action_ = %(banaction)s[name=%(__name__)s, port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s]

# ban &amp;amp; send an e-mail with whois report to the destemail.
action_mw = %(banaction)s[name=%(__name__)s, port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s]
%(mta)s-whois[name=%(__name__)s, dest=&amp;#34;%(destemail)s&amp;#34;, protocol=&amp;#34;%(protocol)s]

# ban &amp;amp; send an e-mail with whois report and relevant log lines
# to the destemail.
action_mwl = %(banaction)s[name=%(__name__)s, port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s]
%(mta)s-whois-lines[name=%(__name__)s, dest=&amp;#34;%(destemail)s&amp;#34;, logpath=%(logpath)s]

# Choose default action. To change, just override value of &amp;#39;action&amp;#39; with the
# interpolation to the chosen action shortcut (e.g. action_mw, action_mwl, etc) in jail.local
# globally (section [DEFAULT]) or per specific section
action = %(action_)s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A variável &lt;code&gt;action&lt;/code&gt; define a ação globalmente. As outras variáveis definidas antes (&lt;code&gt;action_mvl&lt;/code&gt;, &lt;code&gt;action_mw&lt;/code&gt; e &lt;code&gt;action_&lt;/code&gt;) são atalhos úteis. Leia os comentários com atenção para entender como essas variáveis interagem.&lt;/p&gt;
&lt;p&gt;Repare que mais de uma ação pode ser setada por linha e que cada ação pode receber parâmetros entre colchetes. Esses parâmetros definem os valores das variáveis declaradas na seção &lt;code&gt;[Init]&lt;/code&gt;. Os atalhos &lt;code&gt;action_mvl&lt;/code&gt;, &lt;code&gt;action_mw&lt;/code&gt; e &lt;code&gt;action_&lt;/code&gt; são úteis por já ativarem ações e passarem parâmetros funcionais para tarefas rotineiras como banir e enviar um e-mail com informações úteis.&lt;/p&gt;
&lt;p&gt;Para definir nossa ação gtalk globalmente, basta fazer&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;action = %(action_)s
        gtalk[name=%(__name__)s, from=gmgall, to=gmgall]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;e recarregar as configurações do serviço:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/init.d/fail2ban reload
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Funciona!&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;screenshot.png&#34;
         alt=&#34;Janela de chat do mensageiro instantâneo Pidgin, mostrando mensagens enviadas pelo fail2ban.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Janela de chat do mensageiro instantâneo Pidgin, mostrando mensagens enviadas pelo fail2ban.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Criando Seus Próprios Filtros no fail2ban - Parte 2</title>
      <link>https://gmgall.net/blog/criando-seus-proprios-filtros-no-fail2ban-parte-2/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/criando-seus-proprios-filtros-no-fail2ban-parte-2/</guid>
      <description>&lt;p&gt;Se não existe um filtro pronto para o log que você deseja monitorar em &lt;code&gt;filter.d&lt;/code&gt;, será necessário criar seu próprio filtro. Mostrarei como fazer isso através do exemplo que descrevo abaixo:&lt;/p&gt;
&lt;h2 id=&#34;cenário-do-exemplo&#34;&gt;Cenário do exemplo&lt;/h2&gt;
&lt;p&gt;Mantenho um wiki &lt;a href=&#34;http://moinmo.in/&#34;&gt;moinmoin&lt;/a&gt; e desejo bloquear o acesso à ele pelos hosts que tentarem login por mais de 3 vezes sem sucesso. Vamos fazer um filtro para fazer esse bloqueio. O log do wiki é escrito em &lt;code&gt;/var/log/moinmoin.log&lt;/code&gt;. Segue trecho desse log:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2011-07-12 15:45:40,447 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 15:45:44,002 MoinMoin.auth WARNING moin: performing login action | request from 192.168.0.10
2011-07-12 15:45:44,003 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;GuilhermeGall&amp;#39; (not valid) | request from 192.168.0.10
2011-07-12 15:45:44,030 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 15:45:47,705 MoinMoin.auth WARNING moin: performing login action | request from 192.168.0.10
2011-07-12 15:45:47,706 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;GuilhermeGall&amp;#39; (not valid) | request from 192.168.0.10
2011-07-12 15:45:47,732 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 15:55:59,473 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 16:08:51,543 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-13 09:09:01,908 MoinMoin.auth WARNING moin: performing login action | request from 192.168.0.7
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não é difícil perceber que as linhas com &lt;code&gt;could not authenticate user u&#39;GuilhermeGall&#39; (not valid)&lt;/code&gt; representam as tentativas de login malsucedidas. Se desejamos bloquear os hosts de origem dessas tentativas temos que fazer a regex do filtro casar essas linhas e usar o IP que aparece nelas para executar nossa ação (por &lt;em&gt;default&lt;/em&gt;, bloquear via &lt;code&gt;iptables&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Antes de criar nosso filtro, vamos entender a estrutura de um filtro e como desenvolver nossas próprias regexes.&lt;/p&gt;
&lt;h2 id=&#34;estrutura-de-um-filtro&#34;&gt;Estrutura de um filtro&lt;/h2&gt;
&lt;p&gt;Um filtro é simplesmente um arquivo com uma entrada &lt;code&gt;failregex&lt;/code&gt;, que define as regexes que casam as linhas que representam as tentativas de login malsucedidas, e uma entrada &lt;code&gt;ignoreregex&lt;/code&gt;, que define regexes que casam com linhas que devem ser ignoradas. Outras entradas podem existir, como &lt;code&gt;before&lt;/code&gt; que faz um “import” de outro arquivo, mas &lt;code&gt;failregex&lt;/code&gt; e &lt;code&gt;ignoreregex&lt;/code&gt; são as essenciais e usadas na maioria dos casos.&lt;/p&gt;
&lt;p&gt;Se for definir mais de uma regex para &lt;code&gt;failregex&lt;/code&gt; ou &lt;code&gt;ignoreregex&lt;/code&gt;, coloque uma por linha. Exemplo do arquivo &lt;code&gt;filter.d/apache-auth.conf&lt;/code&gt; que já vem no pacote &lt;code&gt;fail2ban&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Definition]

# Option:  failregex
# Notes.:  regex to match the password failure messages in the logfile. The
#          host must be matched by a group named &amp;#34;host&amp;#34;. The tag &amp;#34;&amp;lt;HOST&amp;gt;&amp;#34; can
#          be used for standard IP/hostname matching and is only an alias for
#          (?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;[\w\-.^_]+)
# Values:  TEXT
#
failregex = [[]client &amp;lt;HOST&amp;gt;[]] user .* authentication failure
            [[]client &amp;lt;HOST&amp;gt;[]] user .* not found
            [[]client &amp;lt;HOST&amp;gt;[]] user .* password mismatch

# Option:  ignoreregex
# Notes.:  regex to ignore. If this regex matches, the line is ignored.
# Values:  TEXT
#
ignoreregex =
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Conforme pode ser lido nos comentários do arquivo acima, a tag &lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; deve aparecer dentro da regex na posição onde aparece o IP/hostname do host ofensor. Repare que mais de uma regex foi definida para &lt;code&gt;failregex&lt;/code&gt; – uma em cada linha – e que &lt;code&gt;ignoreregex&lt;/code&gt; pode ser vazio.&lt;/p&gt;
&lt;h2 id=&#34;desenvolvendo-suas-próprias-regexes&#34;&gt;Desenvolvendo suas próprias regexes&lt;/h2&gt;
&lt;p&gt;Para escrever suas próprias regexes para o &lt;code&gt;fail2ban&lt;/code&gt; é preciso ter em mente o seguinte:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Em toda linha de uma &lt;code&gt;failregex&lt;/code&gt;, a parte que casa com o IP/hostname deve estar envolta pela estrutura &lt;code&gt;(?P&amp;lt;host&amp;gt; ... )&lt;/code&gt;. Essa estrutura é uma extensão específica do Python que atribui o nome &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; ao que foi casado pelo grupo. A tag &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; é como você informa ao &lt;code&gt;fail2ban&lt;/code&gt; qual host estava tentando logar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Como conveniência, é possível usar &lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; nas suas regexes, conforme citei no tópico anterior. &lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; é um alias para &lt;code&gt;(?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;\S+)&lt;/code&gt; que casa um IP/hostname dentro de um grupo chamado &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;. Vide item anterior.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nas ações, a tag &lt;code&gt;&amp;lt;ip&amp;gt;&lt;/code&gt; será substituída pelo IP do host casado pela tag &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;, por isso sempre deve existir um grupo nomeado &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Para que uma linha de um log case com sua &lt;code&gt;failregex&lt;/code&gt;, ela deve casar em duas partes: o início da linha tem que casar com um padrão de &lt;em&gt;timestamp&lt;/em&gt; e o restante da linha deve casar com a regex definida em &lt;code&gt;failregex&lt;/code&gt;. Se sua &lt;code&gt;failregex&lt;/code&gt; possui a âncora &lt;code&gt;^&lt;/code&gt;, então a âncora refere-se ao início do restante da linha, após o &lt;em&gt;timestamp&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Por último, mas não menos importante, o comando &lt;code&gt;fail2ban-regex&lt;/code&gt; permite testar suas regexes antes de criar o filtro. Na realidade, como escrever suas próprias regexes pode envolver alguma – muita! – tentativa e erro no começo, eu diria que esse é o item mais importante. 🙂 Ele pode ser usado de duas maneiras:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fail2ban-regex /path/para/arquivo.log &amp;#39;^regex a ser testada$&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ou&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fail2ban-regex &amp;#39;linha exemplo de log&amp;#39; &amp;#39;^regex a ser testada$&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;definindo-o-filtro&#34;&gt;Definindo o filtro&lt;/h2&gt;
&lt;p&gt;A regex que casa com as linhas que representam as tentativas de login malsucedidas é:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não é do escopo desse artigo ensinar expressões regulares. Tem muito &lt;a href=&#34;https://aurelio.net/regex/&#34;&gt;material bom sobre isso&lt;/a&gt; por aí, mas resumindo a expressão acima:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MoinMoin\.auth&lt;/code&gt; casa &lt;code&gt;MoinMoin.auth&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DEBUG|INFO|WARNING|ERROR|CRITICAL)&lt;/code&gt; casa &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; ou &lt;code&gt;CRITICAL&lt;/code&gt;. Eu poderia ter casado apenas um dos níveis de severidade, mas ainda estou decidindo em qual nível reportarei as mensagens referentes à tentativas de login.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;moin: could not authenticate user&lt;/code&gt; casa &lt;code&gt;moin: could not authenticate user&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.*&lt;/code&gt; casa &lt;em&gt;qualquer caractere em qualquer quantidade&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;not valid\) \| request from&lt;/code&gt; casa &lt;code&gt;(not valid) | request from&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; casa o &lt;em&gt;IP/hostname&lt;/em&gt;. É a tal tag indicativa de onde está o IP/hostname que é substituída por &lt;code&gt;(?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;\S+)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$&lt;/code&gt; casa o &lt;em&gt;fim da linha&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Testando uma linha de exemplo do log com o &lt;code&gt;fail2ban-regex&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fail2ban-regex &amp;#39;2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;UserName&amp;#39; (not valid) | request from 192.168.0.27&amp;#39; &amp;#39;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$&amp;#39;

Running tests
=============

Use regex line : MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL)...
Use single line: 2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin...

Results
=======

Failregex
|- Regular expressions:
|  [1] MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$
|
`- Number of matches:
   [1] 1 match(es)

Ignoreregex
|- Regular expressions:
|
`- Number of matches:

Summary
=======

Addresses found:
[1]
    192.168.0.27 (Mon Jul 18 14:24:42 2011)

Date template hits:
0 hit(s): MONTH Day Hour:Minute:Second
0 hit(s): WEEKDAY MONTH Day Hour:Minute:Second Year
0 hit(s): WEEKDAY MONTH Day Hour:Minute:Second
0 hit(s): Year/Month/Day Hour:Minute:Second
0 hit(s): Day/Month/Year Hour:Minute:Second
0 hit(s): Day/Month/Year Hour:Minute:Second
0 hit(s): Day/MONTH/Year:Hour:Minute:Second
0 hit(s): Month/Day/Year:Hour:Minute:Second
2 hit(s): Year-Month-Day Hour:Minute:Second
0 hit(s): Day-MONTH-Year Hour:Minute:Second[.Millisecond]
0 hit(s): Day-Month-Year Hour:Minute:Second
0 hit(s): TAI64N
0 hit(s): Epoch
0 hit(s): ISO 8601
0 hit(s): Hour:Minute:Second
0 hit(s): 

Success, the total number of match is 1

However, look at the above section &amp;#39;Running tests&amp;#39; which could contain important
information.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Perceba que o comando mostrou a regex e o número de casamentos, além do IP encontrado abaixo de &amp;ldquo;Addresses found&amp;rdquo;, indicando que a regex está correta. O número de casamentos presumivelmente seria maior que 1, se o comando fosse executado contra um arquivo de log ao invés de apenas contra uma linha de exemplo.&lt;/p&gt;
&lt;p&gt;Vamos supor você tenha cometido um erro, como por exemplo não especificar um grupo chamado &lt;code&gt;host&lt;/code&gt; na sua regex:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fail2ban-regex &amp;#39;2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;UserName&amp;#39; (not valid) | request from 192.168.0.27&amp;#39; &amp;#39;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from$&amp;#39;

Running tests
=============

Use regex line : MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL)...
Use single line: 2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin...

No &amp;#39;host&amp;#39; group in &amp;#39;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from$&amp;#39;
Cannot remove regular expression. Index 0 is not valid

Results
=======

Failregex
|- Regular expressions:
|  [1] MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from$
|
`- Number of matches:
   [1] 0 match(es)

Ignoreregex
|- Regular expressions:
|
`- Number of matches:

Summary
=======

Sorry, no match

Look at the above section &amp;#39;Running tests&amp;#39; which could contain important
information.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Perceba que o &lt;code&gt;fail2ban-regex&lt;/code&gt; informa o erro &lt;code&gt;No &#39;host&#39; group in...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Como já temos a regex funcional, crie um arquivo com o nome do filtro em &lt;code&gt;filter.d&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cd /etc/fail2ban/
# cat filter.d/moinmoin.conf
[Definition]

# Option:  failregex
# Notes.:  regex to match the password failures messages in the logfile. The
#          host must be matched by a group named &amp;#34;host&amp;#34;. The tag &amp;#34;&amp;lt;HOST&amp;gt;&amp;#34; can
#          be used for standard IP/hostname matching and is only an alias for
#          (?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;[\w\-.^_]+)
# Values:  TEXT
#
failregex = MoinMoin.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$

# Option:  ignoreregex
# Notes.:  regex to ignore. If this regex matches, the line is ignored.
# Values:  TEXT
#
ignoreregex =
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Crie uma &lt;em&gt;jail&lt;/em&gt; que usa o filtro recém-criado em &lt;code&gt;jail.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[moinmoin]

enabled = true
port = 80
filter = moinmoin
logpath = /var/log/moinmoin.log
maxretry = 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A variável &lt;code&gt;filter&lt;/code&gt; define o nome do filtro, que é o nome do arquivo criado em &lt;code&gt;filter.d&lt;/code&gt; sem a extensão &lt;code&gt;.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Reinicie o &lt;code&gt;fail2ban&lt;/code&gt; para ativar a nova &lt;em&gt;jail&lt;/em&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/init.d/fail2ban restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;É interessante monitorar o log do próprio &lt;code&gt;fail2ban&lt;/code&gt;, que por padrão fica em &lt;code&gt;/var/log/fail2ban.log&lt;/code&gt;, para verificar se suas alterações foram aplicadas com sucesso:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# tail -f /var/log/fail2ban.log
2011-08-01 09:52:04,994 fail2ban.filter : INFO   Set findtime = 600
2011-08-01 09:52:04,994 fail2ban.actions: INFO   Set banTime = 600
2011-08-01 09:52:04,999 fail2ban.jail   : INFO   Creating new jail &amp;#39;ssh&amp;#39;
2011-08-01 09:52:04,999 fail2ban.jail   : INFO   Jail &amp;#39;ssh&amp;#39; uses poller
2011-08-01 09:52:05,000 fail2ban.filter : INFO   Added logfile = /var/log/auth.log
2011-08-01 09:52:05,001 fail2ban.filter : INFO   Set maxRetry = 3
2011-08-01 09:52:05,002 fail2ban.filter : INFO   Set findtime = 600
2011-08-01 09:52:05,002 fail2ban.actions: INFO   Set banTime = 600
2011-08-01 09:52:05,035 fail2ban.jail   : INFO   Jail &amp;#39;moinmoin&amp;#39; started
2011-08-01 09:52:05,039 fail2ban.jail   : INFO   Jail &amp;#39;ssh&amp;#39; started
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As duas últimas linhas nos mostra as &lt;em&gt;jails&lt;/em&gt; iniciadas. A &lt;code&gt;ssh&lt;/code&gt;, que já vem configurada, e a &lt;code&gt;moinmoin&lt;/code&gt;, que acabamos de configurar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introdução ao fail2ban - Parte 1</title>
      <link>https://gmgall.net/blog/introducao-ao-fail2ban-parte-1/</link>
      <pubDate>Fri, 29 Jul 2011 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/introducao-ao-fail2ban-parte-1/</guid>
      <description>&lt;p&gt;O fail2ban é um software que monitora os logs do sistema e em caso de X (sendo X configurável) tentativas de autenticação sem sucesso em diversos serviços toma uma atitude, que pode ser colocar o host ofensor em &lt;code&gt;/etc/hosts.deny&lt;/code&gt;, &amp;ldquo;dropar&amp;rdquo; seus pacotes via &lt;code&gt;iptables&lt;/code&gt; ou qualquer outra ação definida pelo usuário.&lt;/p&gt;
&lt;h2 id=&#34;instalação-do-fail2ban&#34;&gt;Instalação do fail2ban&lt;/h2&gt;
&lt;p&gt;Em máquinas Debian, a melhor maneira de instalar o &lt;code&gt;fail2ban&lt;/code&gt; é via &lt;code&gt;apt-get&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# apt-get update
# apt-get install fail2ban
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As configurações &lt;em&gt;default&lt;/em&gt; bloqueiam via &lt;code&gt;iptables&lt;/code&gt; por 10 minutos os hosts que tentarem sem sucesso login via ssh 6 vezes. O &lt;code&gt;fail2ban&lt;/code&gt; cria uma &lt;em&gt;chain&lt;/em&gt; com nome no padrão &lt;code&gt;fail2ban-serviço&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# iptables -L
Chain INPUT (policy ACCEPT)
target prot opt source destination
fail2ban-ssh tcp -- anywhere anywhere multiport dports ssh

Chain FORWARD (policy ACCEPT)
target prot opt source destination

Chain OUTPUT (policy ACCEPT)
target prot opt source destination

Chain fail2ban-ssh (1 references)
target prot opt source destination
RETURN all -- anywhere anywhere
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Lembrando que todo esse comportamento é configurável. O bloqueio pode ser feito via TCP-wrappers (&lt;code&gt;/etc/hosts.{allow,deny}&lt;/code&gt;), e muitos outros serviços são suportados.&lt;/p&gt;
&lt;h2 id=&#34;entendendo-os-arquivos-de-configuração&#34;&gt;Entendendo os arquivos de configuração&lt;/h2&gt;
&lt;p&gt;Alguns termos usados pelo &lt;code&gt;fail2ban&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;filter&lt;/strong&gt;: um filtro define uma regex que casa um padrão correspondente a uma tentativa de login mal sucedido nos arquivos de log;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;action&lt;/strong&gt;: uma ação define os comandos que são executados nos mais diversos eventos, como bloquear um host (ex: bloquear via TCP-wrappers ou &lt;code&gt;iptables&lt;/code&gt;), iniciar o &lt;code&gt;fail2ban&lt;/code&gt; (ex: criar as chains no firewall) e parar o &lt;code&gt;fail2ban&lt;/code&gt; (ex: remover as &lt;em&gt;chains&lt;/em&gt; criadas ao iniciar);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;jail&lt;/strong&gt;: uma &lt;em&gt;jail&lt;/em&gt; é uma combinação de um filtro com uma ou várias &lt;em&gt;actions&lt;/em&gt;. O &lt;code&gt;fail2ban&lt;/code&gt; pode lidar com diversas &lt;em&gt;jails&lt;/em&gt; ao mesmo tempo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Uma &lt;em&gt;jail&lt;/em&gt; é como dar a seguinte ordem ao &lt;code&gt;fail2ban&lt;/code&gt;: &amp;ldquo;bloqueie via &lt;code&gt;iptables&lt;/code&gt; por 10 minutos os hosts que aparecerem 3 vezes em &lt;code&gt;/var/log/auth.log&lt;/code&gt; com falha de autenticação&amp;rdquo;. Nesse exemplo, bloquear via &lt;code&gt;iptables&lt;/code&gt; é uma ação e a regex que casa a falha de autenticação é o filtro.&lt;/p&gt;
&lt;p&gt;Os arquivos de configuração ficam em &lt;code&gt;/etc/fail2ban&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cd /etc/fail2ban
# ls -l
total 17
drwxr-xr-x 2 root root 1024 Jun 28 14:30 action.d
-rw-r--r-- 1 root root 859 Feb 27 2008 fail2ban.conf
drwxr-xr-x 2 root root 1024 Jun 28 14:30 filter.d
-rw-r--r-- 1 root root 6683 Jun 28 2010 jail.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Os diretórios &lt;code&gt;action.d&lt;/code&gt; e &lt;code&gt;filter.d&lt;/code&gt; mantêm as configurações de ações e filtros, respectivamente. Os que vêm com o pacote já devem atender à maior parte das necessidades. O arquivo &lt;code&gt;fail2ban.conf&lt;/code&gt; contém configurações gerais do &lt;em&gt;daemon&lt;/em&gt; &lt;code&gt;fail2ban-server&lt;/code&gt;, como &lt;em&gt;path&lt;/em&gt; do arquivo de &lt;em&gt;log&lt;/em&gt; do &lt;code&gt;fail2ban&lt;/code&gt;, &lt;em&gt;path&lt;/em&gt; do arquivo socket usado para o cliente de linha de comando se comunicar com o &lt;em&gt;daemon&lt;/em&gt; etc.&lt;/p&gt;
&lt;p&gt;O arquivo &lt;code&gt;jail.conf&lt;/code&gt; é o mais importante, já que configura as &lt;em&gt;jails&lt;/em&gt;. No tópico abaixo será explicado como modificar uma &lt;em&gt;jail&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;mudando-as-configurações-default&#34;&gt;Mudando as configurações default&lt;/h2&gt;
&lt;p&gt;Na maior parte do tempo, os filtros e ações que vêm com o pacote atendem às necessidades, bastando usá-los nas suas &lt;em&gt;jails&lt;/em&gt;. A única &lt;em&gt;jail&lt;/em&gt; que vem ativada por padrão é a que bloqueia os hosts que tentarem logar mais de 6 vezes via SSH. Como exemplo, será mostrado como alterar o número de tentativas antes do bloqueio de 6 para 3.&lt;/p&gt;
&lt;p&gt;Primeiramente crie uma cópia do arquivo &lt;code&gt;jail.conf&lt;/code&gt; chamada &lt;code&gt;jail.local&lt;/code&gt; e faça as suas modificações nesse arquivo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cp jail.conf jail.local
# vim jail.local
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O trecho abaixo configura uma &lt;em&gt;jail&lt;/em&gt; chamada &lt;code&gt;ssh&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ssh]

enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 6
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Mude para:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ssh]

enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Faça o &lt;code&gt;fail2ban&lt;/code&gt; reler os arquivos de configuração:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/init.d/fail2ban reload
Reloading authentication failure monitor: fail2ban.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não faça as alterações diretamente em &lt;code&gt;jail.conf&lt;/code&gt;. Apesar de funcionar, o arquivo pode ser sobrescrito por atualizações no pacote &lt;code&gt;fail2ban&lt;/code&gt;. O &lt;code&gt;fail2ban&lt;/code&gt; aplica as regras primeiro do &lt;code&gt;jail.conf&lt;/code&gt; depois do &lt;code&gt;jail.local&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Daemon em Python</title>
      <link>https://gmgall.net/blog/daemon-em-python/</link>
      <pubDate>Sun, 24 May 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/daemon-em-python/</guid>
      <description>&lt;p&gt;Já usei mais de uma vez o código abaixo para criar pequenos &lt;a href=&#34;http://en.wikipedia.org/wiki/Daemon_(computer_software)&#34;&gt;daemons&lt;/a&gt; para Linux. Achei &lt;a href=&#34;https://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/&#34;&gt;aqui&lt;/a&gt; e como ele foi &lt;a href=&#34;https://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/#c6&#34;&gt;liberado em domínio público&lt;/a&gt;, use como melhor convir.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; atexit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; signal &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SIGTERM 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Daemon&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    A generic daemon class.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Usage: subclass the Daemon class and override the run() method
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, pidfile, stdin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;, stdout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;, stderr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stdin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stdout
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stderr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pidfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;daemonize&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        do the UNIX double-fork magic, see Stevens&amp;#39; &amp;#34;Advanced
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Programming in the UNIX Environment&amp;#34; for details (ISBN 0201563177)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        http://www.erlenstar.demon.co.uk/unix/faq_2.html#SEC16
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fork()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# exit first parent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OSError&lt;/span&gt;, e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fork #1 failed: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;errno, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strerror))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# decouple from parent environment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chdir(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setsid()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;umask(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# do second fork&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fork()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# exit from second parent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OSError&lt;/span&gt;, e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fork #2 failed: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;errno, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strerror))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# redirect standard file descriptors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        si &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        so &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dup2(si&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno(), sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dup2(so&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno(), sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dup2(se&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno(), sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# write pidfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        atexit&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delpid)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getpid())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; pid)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;delpid&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Start the daemon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Check for a pidfile to see if the daemon already runs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pid:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pidfile &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; already exist. Daemon already running?&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(message &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Start the daemon&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;daemonize()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stop&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Stop the daemon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Get the pid from the pidfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; pid:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pidfile &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; does not exist. Daemon not running?&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(message &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# not an error in a restart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Try killing the daemon process&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kill(pid, SIGTERM)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OSError&lt;/span&gt;, err:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(err)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; err&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No such process&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                print str(err)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;restart&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Restart the daemon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        You should override this method when you subclass Daemon. It will be called after the process has been
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        daemonized by start() or restart().
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Resolvi adicionar a funcionalidade de verificar o status do processo também, daí adicionei o seguinte método à classe acima:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        procfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/proc/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/status&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; pid, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        procfile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;there is not a process with the PID specified in &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TypeError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pidfile &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; does not exist&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;the process with the PID &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; is running&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; pid)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Não ficou muito bonito, mas funciona. Lembrando o que já está comentado no &lt;a href=&#34;http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python&#34;&gt;código original&lt;/a&gt;: para usar a classe acima para &amp;ldquo;daemonizar&amp;rdquo; seu programa, crie uma classe filha de &lt;code&gt;Daemon&lt;/code&gt; e sobrescreva o método &lt;code&gt;run()&lt;/code&gt;. Ele será chamado após o processo de &amp;ldquo;daemonização&amp;rdquo; por &lt;code&gt;start()&lt;/code&gt; e &lt;code&gt;restart()&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sequência Look and Say em Python</title>
      <link>https://gmgall.net/blog/sequencia-look-and-say-em-python/</link>
      <pubDate>Wed, 11 Mar 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/sequencia-look-and-say-em-python/</guid>
      <description>&lt;p&gt;Tenho brincado ultimamente com os desafios do &lt;a href=&#34;http://www.pythonchallenge.com/&#34;&gt;Python Challenge&lt;/a&gt;. São bem interessantes para quem quer aprender Python na prática. Estou resolvendo o nível 11 e já precisei &lt;a href=&#34;https://web.archive.org/web/20090309064253/http://www.pythonware.com/products/pil/&#34;&gt;processar imagens&lt;/a&gt;, descompactar dados comprimidos com &lt;a href=&#34;https://docs.python.org/3/library/zipfile.html&#34;&gt;zip&lt;/a&gt; e &lt;a href=&#34;https://docs.python.org/3/library/bz2.html&#34;&gt;bz2&lt;/a&gt;, &lt;a href=&#34;https://docs.python.org/3/library/pickle.html&#34;&gt;serializar objetos&lt;/a&gt;, &lt;a href=&#34;https://docs.python.org/3/library/urllib.html&#34;&gt;acessar recursos via URL&lt;/a&gt;, &lt;a href=&#34;https://docs.python.org/3/library/re.html&#34;&gt;usar expressões regulares&lt;/a&gt; e algumas tarefas que não exigiam necessariamente um módulo.&lt;/p&gt;
&lt;p&gt;O último nível que resolvi tinha como resposta o &lt;a href=&#34;https://web.archive.org/web/20111111070626/http://oeis.org/A005341&#34;&gt;comprimento de um elemento específico&lt;/a&gt; de uma &lt;a href=&#34;https://web.archive.org/web/20090303175131/http://www.research.att.com/~njas/sequences/&#34;&gt;sequência de inteiros&lt;/a&gt; conhecida como &lt;a href=&#34;https://web.archive.org/web/20090304154846/http://www.research.att.com/~njas/sequences/A005150&#34;&gt;&lt;em&gt;look and say&lt;/em&gt;&lt;/a&gt; (olhe e descreva). Achei diversas implementações da geração da sequência pela web, nenhuma delas me pareceu &lt;em&gt;pythonica&lt;/em&gt; ou legível o suficiente. Resolvi juntar algumas das idéias que vi nessas implementações com os conhecimentos que obtive recentemente com a leitura de um material sobre &lt;a href=&#34;https://docs.python.org/dev/howto/functional.html&#34;&gt;programação funcional em Python&lt;/a&gt; e criei uma função que retorna uma lista com os elementos da sequência. A minha solução não é a mais eficiente possível (&lt;a href=&#34;http://www.fantascienza.net/leonardo/so/briciole_python1/&#34;&gt;essa página&lt;/a&gt; contém uma implementação alegadamente otimizada para velocidade), mas acho que é elegante e mostra alguns aspectos interessantes da linguagem. Segue o código:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;look_and_say&lt;/span&gt;(first, elements):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; itertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; groupby
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    seq &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [str(first)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt;(number):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k,g &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; groupby(number):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ret&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append( str(len(list(g))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; k )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(ret)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; xrange(elements):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        seq&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(say(seq[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; seq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O argumento &lt;code&gt;first&lt;/code&gt; de &lt;code&gt;look_and_say&lt;/code&gt; recebe o primeiro elemento da lista e &lt;code&gt;elements&lt;/code&gt; quantos elementos depois do primeiro devem ser gerados. Exemplo de uso:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; look_and_say(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;21&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;111221&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;312211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;13112221&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1113213211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;31131211131221&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;13211311123113112211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11131221133112132113212221&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; look_and_say(&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;55&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;25&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1215&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11121115&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;31123115&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dentre os aspectos que gostaria de destacar estão a possibilidade de importar partes de módulos e definir funções dentro de funções, o uso de listas para &lt;a href=&#34;https://web.archive.org/web/20090324052548/http://codare.net/2006/09/17/python-concatenacao-eficiente-de-strings/&#34;&gt;concatenar strings com eficiência&lt;/a&gt; e o uso de &lt;a href=&#34;https://docs.python.org/dev/howto/functional.html#grouping-elements&#34;&gt;itertools.groupby&lt;/a&gt; que faz um agrupamento semelhante ao do comando &lt;code&gt;uniq&lt;/code&gt; do Unix, juntando elementos iguais consecutivos em um &lt;a href=&#34;https://docs.python.org/dev/howto/functional.html#iterators&#34;&gt;&lt;em&gt;iterator&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para quem quiser uma abordagem matemática da sequência, o &lt;a href=&#34;https://mathworld.wolfram.com/&#34;&gt;Wolfram Mathworld&lt;/a&gt; tem uma &lt;a href=&#34;https://mathworld.wolfram.com/LookandSaySequence.html&#34;&gt;página sobre ela&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metaclasses em Python</title>
      <link>https://gmgall.net/blog/metaclasses-em-python/</link>
      <pubDate>Sat, 21 Feb 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/metaclasses-em-python/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;
&lt;p&gt;Li dois textos interessantes no &lt;a href=&#34;http://kodumaro.blogspot.com/&#34;&gt;Kodumaro&lt;/a&gt; recentemente: um sobre &lt;a href=&#34;http://kodumaro.blogspot.com/2009/01/propriedades.html&#34;&gt;propriedades e acessores&lt;/a&gt; e outro sobre o &lt;a href=&#34;http://kodumaro.blogspot.com/2009/01/s-ingleton.html&#34;&gt;design pattern &lt;em&gt;singleton&lt;/em&gt;&lt;/a&gt;. Ambos citavam as metaclasses, um conceito novo para mim e, pelo que andei conversando, novo para muitos de meus colegas de faculdade e trabalho. O seguinte texto é resultado de minha tentativa de explicar o que são metaclasses de uma forma simples de ser assimilada por pessoas que começaram a estudar Python há pouco tempo como eu e portanto não pode ser considerado como um guia definitivo e sem erros sobre o assunto. Qualquer sugestão ou comentário é bem vindo.&lt;/p&gt;
&lt;h2 id=&#34;revisando-orientação-a-objetos-e-definindo-metaclasses&#34;&gt;Revisando Orientação a Objetos e definindo metaclasses&lt;/h2&gt;
&lt;p&gt;Em uma linguagem de programação orientada a objetos, você pode definir classes que combinam dados (atributos) e métodos (comportamentos) que atuam sobre esses dados. Pode-se afirmar que ao definir uma classe se está definindo um domínio.&lt;/p&gt;
&lt;p&gt;As classes geralmente atuam como modelos para a criação de instâncias de classe, que apesar de compartilharem uma mesma &amp;ldquo;forma&amp;rdquo;, possuem dados diferentes. Uma instância &lt;code&gt;real&lt;/code&gt; e outra &lt;code&gt;peso&lt;/code&gt; de uma mesma classe &lt;code&gt;Moeda&lt;/code&gt; podem possuir um atributo &lt;code&gt;cotacao&lt;/code&gt;, mas cada instância terá seu próprio valor para esse atributo.&lt;/p&gt;
&lt;p&gt;Em Python, tudo é objeto e tudo tem um tipo. Não existe diferença real entre uma classe e um tipo, especialmente depois da unificação de classes e tipos iniciada no Python 2.2. Ao definir uma classe, portanto, o programador está criando um novo tipo de dados. Como tudo é objeto, as classes também o são e possuem uma classe, um tipo. A classe de uma classe é chamada de metaclasse. O tipo &lt;em&gt;default&lt;/em&gt; de uma classe é &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Moeda&lt;/span&gt;(object):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(Moeda)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Moeda
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__main__&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Moeda&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ao chamar &lt;code&gt;type()&lt;/code&gt; com apenas um argumento, obtém-se o tipo do objeto. Observe que o tipo da &lt;strong&gt;classe&lt;/strong&gt; &lt;code&gt;Moeda&lt;/code&gt; é &lt;code&gt;type&lt;/code&gt;. Afirmar que o tipo de uma classe é &lt;code&gt;type&lt;/code&gt; é o mesmo que afirmar que a sua metaclasse é &lt;code&gt;type&lt;/code&gt;. O exemplo acima comprovou que as classes realmente são um objeto com um tipo.&lt;/p&gt;
&lt;p&gt;Os conceitos apresentados até aqui são um tanto abstratos para quem aprendeu orientação a objetos em linguagens como Java e C# e para os novatos em Python. No tópico seguinte, apresento a implementação de uma classe e de uma metaclasse com dicionários, como se Python não tivesse suporte sintático para OO. Apesar de ninguém querer programar assim na prática o exemplo é extremamente útil para entender como os objetos funcionam em Python.&lt;/p&gt;
&lt;h2 id=&#34;implementando-classes-com-dicionários&#34;&gt;Implementando classes com dicionários&lt;/h2&gt;
&lt;p&gt;O código abaixo foi originalmente postado no blog de Pedro Werneck em um post que explicava o &lt;a href=&#34;https://web.archive.org/web/20110812155307/http://diaspar.blogspot.com/2008/11/o-porqu-do-self-explcito-ser-que-agora.html&#34;&gt;porquê do &lt;code&gt;self&lt;/code&gt; explícito&lt;/a&gt;. Apesar de explicar metaclasses não ser o objetivo principal do texto, achei bastante útil para entender como o suporte a orientação a objetos foi implementado em Python. Isso acaba levando ao entendimento de vários conceitos interessantes (entre eles metaclasses) da linguagem e a uma apreciação ainda maior de sua simplicidade e consistência.&lt;/p&gt;
&lt;p&gt;No post original, o código evoluiu aos poucos até chegar ao ponto em que está aqui. Para um entendimento pleno, &lt;a href=&#34;https://web.archive.org/web/20110812155307/http://diaspar.blogspot.com/2008/11/o-porqu-do-self-explcito-ser-que-agora.html&#34;&gt;leia o post original&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A primeira parte define uma função &lt;code&gt;newClass&lt;/code&gt; que recebe um nome de classe e um dicionário com seus atributos e retorna um dicionário que faz o papel das &amp;ldquo;classes&amp;rdquo; desse programa.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# precisaremos usar isso logo adiante...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; functools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; partial
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### Agora já podemos pensar nela como a classe &amp;#39;Class&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newClass&lt;/span&gt;(nome, atributos):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;:nome} &lt;span style=&#34;color:#75715e&#34;&gt;# cria o dicionário para a classe somente com seu nome&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k, v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; atributos&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# aqui se um método for o newNome, ele tem de receber a mesma&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# alteração e passar a receber &amp;#39;cls&amp;#39; como primeiro argumento&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;new&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;nome:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; partial(v, cls)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# e atribuímos tudo normalmente&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cls[k] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; cls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Em seguida, é definido uma &amp;ldquo;classe&amp;rdquo; &lt;code&gt;Pessoa&lt;/code&gt; com os atributos &lt;code&gt;nome&lt;/code&gt;, &lt;code&gt;nascimento&lt;/code&gt; e um método &lt;code&gt;idade&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### Classe Pessoa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# construtor, corresponde ao __new__ de Python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newPessoa&lt;/span&gt;(cls, nome, nascimento): &lt;span style=&#34;color:#75715e&#34;&gt;# agora a classe mesmo vem aqui&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {} &lt;span style=&#34;color:#75715e&#34;&gt;# a nova instância&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;classe&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cls &lt;span style=&#34;color:#75715e&#34;&gt;# a instância tem de saber de que classe é, e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                         &lt;span style=&#34;color:#75715e&#34;&gt;# agora pode saber dinamicamente&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Agora a instância vai criar os métodos embrulhando as chamadas&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# para as funções originais em uma nova, já se incluindo nela&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k, v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cls&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Se for função...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; callable(v):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# é, então vamos embrulhar...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            metodo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; partial(v, inst)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            inst[k] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; metodo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;init&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;cls[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;]](nome, nascimento)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; inst
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# inicializador, corresponde ao __init__ de Python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initPessoa&lt;/span&gt;(inst, nome, nascimento):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nome
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nascimento&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nascimento
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# assim como fazemos normalmente no __init__, aqui não precisamos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# nos preocupar&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;idade&lt;/span&gt;(inst, hoje):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hd, hm, ha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hoje
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    nd, nm, na &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nascimento&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ha &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; na
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Com as funções que se tornarão os métodos da classe &lt;code&gt;Pessoa&lt;/code&gt; definidos, falta a última parte da definição da classe que é criar o objeto que representa a classe. Esse objeto é retornado pela função &lt;code&gt;newClass&lt;/code&gt; definida no início do código.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# e agora initPessoa() tem de entrar aqui também&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pessoa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newClass(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pessoa&amp;#39;&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newPessoa&amp;#39;&lt;/span&gt;:newPessoa,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;initPessoa&amp;#39;&lt;/span&gt;:initPessoa,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;:idade})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### Fim da definição de classe&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A seguir, cria-se duas instâncias de &lt;code&gt;Pessoa&lt;/code&gt; para testar a implementação.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hank &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pessoa[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newPessoa&amp;#39;&lt;/span&gt;](&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hank Moody&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1967&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print hank[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;]((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fante &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pessoa[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newPessoa&amp;#39;&lt;/span&gt;](&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;John Fante&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1909&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print fante[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;]((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nesse exemplo, a função &lt;code&gt;newClass&lt;/code&gt; faz o papel de uma metaclasse, pois é ela que é chamada para criar a classe. É interessante notar que não existe diferença real entre o funcionamento de &lt;code&gt;newClass&lt;/code&gt; e &lt;code&gt;newPessoa&lt;/code&gt;. Ambas são funções que retornam instâncias, as instâncias retornadas por &lt;code&gt;newClass&lt;/code&gt; são &amp;ldquo;classes&amp;rdquo; e as instâncias retornadas por &lt;code&gt;newPessoa&lt;/code&gt; são objetos do tipo &lt;code&gt;Pessoa&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O autor termina o texto usando as funções de inicialização e cálculo de idade com a metaclasse padrão de Python, &lt;code&gt;type&lt;/code&gt;. Ela recebe uma string que será o nome da nova classe, uma tupla de classes base e um dicionário representando o &lt;em&gt;namespace&lt;/em&gt; da classe. Esse dicionário contém o que você normalmente define como o corpo de uma instrução &lt;code&gt;class&lt;/code&gt;. A única coisa que tem que mudar é o acesso aos atributos, que antes estavam sendo feitos como chaves de dicionários e agora devem usar a sintaxe de atributos normais.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initPessoa&lt;/span&gt;(inst, nome, nascimento):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inst&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nome
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inst&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nascimento &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nascimento
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;idade&lt;/span&gt;(inst, hoje):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hd, hm, ha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hoje
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        nd, nm, na &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inst&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nascimento
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ha &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; na
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pessoa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; type(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pessoa&amp;#39;&lt;/span&gt;, (), {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__init__&amp;#39;&lt;/span&gt;:initPessoa,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;:idade})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Representação de Pessoa como string: &amp;#34;&lt;/span&gt;,Pessoa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tipo de Pessoa (sua metaclasse): &amp;#34;&lt;/span&gt;,type(Pessoa)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Imprimindo a idade de uma instância de Pessoa para teste: &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hank &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pessoa(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hank Moody&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1967&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print hank&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;idade((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Resumindo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Em Python tudo é objeto, inclusive classes e instâncias. Não existe diferença real entre elas.&lt;/li&gt;
&lt;li&gt;Criar uma classe é criar um novo tipo.&lt;/li&gt;
&lt;li&gt;A classe de uma classe é chamada de metaclasse. As instâncias de metaclasses são classes.&lt;/li&gt;
&lt;li&gt;A metaclasse &lt;em&gt;default&lt;/em&gt; é &lt;code&gt;type&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Não existe diferença real entre métodos e funções. Os métodos são apenas funções com &lt;em&gt;namespaces&lt;/em&gt; específicos (suas classes).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;criando-e-definindo-metaclasses&#34;&gt;Criando e definindo metaclasses&lt;/h2&gt;
&lt;p&gt;Para definir sua própria metaclasse, basta criar uma classe que herda da metaclasse &lt;code&gt;type&lt;/code&gt;. O método inicializador recebe os mesmos argumentos que o método inicializador de &lt;code&gt;type&lt;/code&gt;: uma string que será o nome da classe, uma tupla de classes bases e um dicionário representando o &lt;em&gt;namespace&lt;/em&gt; da classe.&lt;/p&gt;
&lt;p&gt;Segue um &lt;a href=&#34;https://web.archive.org/web/20090215011047/http://www.ibm.com/developerworks/linux/library/l-pymeta.html&#34;&gt;exemplo ligeiramente modificado&lt;/a&gt; de um artigo do &lt;a href=&#34;https://web.archive.org/web/20090221162632/http://www.ibm.com/developerworks/&#34;&gt;IBM developerWorks&lt;/a&gt;. Primeiramente, vamos definir uma nova metaclasse:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ChattyType&lt;/span&gt;(type):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __new__(cls, name, bases, dct):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Alocando memória para classe&amp;#34;&lt;/span&gt;, name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       dct[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;usa_metaclasse&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; type&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__new__(cls, name, bases, dct)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(cls, name, bases, dct):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Inicializando (configurando) classe&amp;#34;&lt;/span&gt;, name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       super(ChattyType, cls)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__init__(name, bases, dct)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Essa metaclasse sobrescreve o método &lt;code&gt;__new__&lt;/code&gt; que efetivamente é o construtor e retorna uma nova instância de classe (nesse exemplo específico, a instância retornada será uma classe por estarmos escrevendo uma &lt;strong&gt;meta&lt;/strong&gt;classe) e o método &lt;code&gt;__init__&lt;/code&gt; que é o inicializador da instância e não retorna nada. É tentador chamar o &lt;code&gt;__init__&lt;/code&gt; de construtor, mas o trabalho de criação de instâncias é do &lt;code&gt;__new__&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O código acima criou um novo tipo que imprime uma mensagem quando está sendo criado e outra quando está sendo inicializado. Definiu-se também que todas as instâncias do novo tipo terão um atributo &lt;code&gt;usa_metaclasse&lt;/code&gt; com o valor inicial &lt;code&gt;True&lt;/code&gt;. Essa mudança foi feita adicionando uma chave ao dicionário que representa o &lt;em&gt;namespace&lt;/em&gt;  da classe (&lt;code&gt;dct&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Com a metaclasse definida, já é possível criar classes a partir dela chamando-a como chama-se &lt;code&gt;type&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; X&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ChattyType(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;, (object,), {})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Alocando memória para classe X
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Inicializando (configurando) classe X
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Instanciar classes manualmente como feito acima, não é um procedimento muito comum. Segue como Python &lt;a href=&#34;https://www.python.org/download/releases/2.2.3/descrintro/#metaclasses&#34;&gt;determina a metaclasse&lt;/a&gt; de uma determinada classe:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Se o dicionário que representa o &lt;em&gt;namespace&lt;/em&gt; da classe contiver uma chave &lt;code&gt;__metaclass__&lt;/code&gt;, o seu valor é usado.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Senão, se existe pelo menos uma classe base, sua metaclasse é usada.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Senão, se existe uma variável global &lt;code&gt;__metaclass__&lt;/code&gt;, seu valor é usado.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Senão, &lt;code&gt;types.ClassType&lt;/code&gt; é usado.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A criação da classe &lt;code&gt;X&lt;/code&gt; feita no exemplo acima comumente seria feita assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;X&lt;/span&gt;(object):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    __metaclass__&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ChattyType
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Alocando memória para classe X
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Inicializando (configurando) classe X
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A instanciação de &lt;code&gt;ChattyType&lt;/code&gt;, feita explicitamente no primeiro exemplo, agora é feita pelo interpretador Python no final da instrução &lt;code&gt;class&lt;/code&gt;. Note que a instrução &lt;code&gt;class&lt;/code&gt; é simplesmente &lt;a href=&#34;https://en.wikipedia.org/wiki/Syntactic_sugar&#34;&gt;açúcar sintático&lt;/a&gt; para a instanciação de classes através de suas metaclasses. Os programadores que não fazem uso de metaclasses acabam não percebendo isso, já que simplesmente criam suas classes usando &lt;code&gt;class&lt;/code&gt; e Python simplesmente as instancia chamando &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Continuando o exemplo, podemos confirmar que o tipo da classe é a metaclasse:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(X)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__main__&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ChattyType&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__main__&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;X&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(X) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; type(type(y))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para concluir, segue algumas dicas na hora de usar metaclasses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A modificação do dicionário que representa o &lt;em&gt;namespace&lt;/em&gt; da classe deve ser feita em &lt;code&gt;__new__&lt;/code&gt;, como no exemplo. Se na definição de &lt;code&gt;ChattyType&lt;/code&gt;, &lt;code&gt;dct[&#39;usa_metaclasse&#39;]=True&lt;/code&gt; fosse executado em &lt;code&gt;__init__&lt;/code&gt;, a alteração não teria efeito. Considere o uso de &lt;a href=&#34;https://docs.python.org/3/library/functions.html#setattr&#34;&gt;setattr&lt;/a&gt; nesses casos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sempre herde de &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__new__&lt;/code&gt; é o construtor e deve retornar uma nova instância.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Erros em metaclasses costumam aparecer durante &lt;code&gt;import&lt;/code&gt;s e definições de classes que usem metaclasses diferentes de &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;alguns-exemplos&#34;&gt;Alguns exemplos&lt;/h2&gt;
&lt;p&gt;Metaclasses são usadas na maior parte do tempo para alterar o comportamento de criação e inicialização de classes. Na maioria dos casos, os usuários finais são outros programadores. Frameworks e ferramentas de mapeamento objeto-relacional são exemplos de softwares que usam metaclasses.&lt;/p&gt;
&lt;p&gt;Alguns usos para as metaclasses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20101122212629/http://www.python.org.br/wiki/UnificandoTiposClasses&#34;&gt;Criar propriedades automaticamente&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://kodumaro.blogspot.com/2009/01/s-ingleton.html&#34;&gt;Usar o design pattern singleton de forma transparente&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://everything2.com/title/metaclass&#34;&gt;Monitorar todas as chamadas a métodos de uma classe&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20090405120043/http://effbot.org/zone/metaclass-plugins.htm&#34;&gt;Fazer plugins se registrarem automaticamente em um registro comum&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verificar diversos aspectos de uma classe para garantir que a classe tenha os métodos e atributos necessários para o correto funcionamento do sistema. Isso é interessante se a aplicação pode ser estendida por plugins desenvolvidos por terceiros.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O importante é que a classe só é realmente criada na chamada final a &lt;code&gt;type&lt;/code&gt; na metaclasse. Você é livre para modificar o dicionário de atributos de acordo com as suas necessidades antes disso, portanto existem muito mais possibilidades de uso para as metaclasses do que as apresentadas aqui.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Here Strings, Redirecionamentos e o builtin time</title>
      <link>https://gmgall.net/blog/here-strings-redirecionamentos-e-o-builtin-time/</link>
      <pubDate>Wed, 28 Jan 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/here-strings-redirecionamentos-e-o-builtin-time/</guid>
      <description>&lt;p&gt;Estou fazendo um comparativo entre &lt;code&gt;gzip&lt;/code&gt; e &lt;code&gt;bzip2&lt;/code&gt; em seus diferentes modos de compressão (-1 a -9) e para automatizar o processo fiz um script bash que usa alguns recursos bastante interessantes, mas às vezes negligenciados, por isso vou falar sobre eles aqui.&lt;/p&gt;
&lt;p&gt;O script basicamente compacta um determinado arquivo com o &lt;code&gt;bzip2&lt;/code&gt; e o &lt;code&gt;gzip&lt;/code&gt;, cada um deles usando todos os modos de compressão, mede o tempo que o compactador ficou na CPU e escreve os resultados em um arquivo de saída. O comando para compactar o arquivo é montado dinamicamente usando dois loops aninhados. Um deles, o mais externo, itera sobre a lista de modos de compressão (-1 a -9) e o outro, o mais interno, itera sobre os compactadores. No final, a linha que realmente faz a compactação e mede o tempo gasto é&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TIMEC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;bc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; time eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$CMDC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Onde &lt;code&gt;TIMEC&lt;/code&gt; recebe o tempo de CPU gasto pelo comando de compactação e &lt;code&gt;$CMDC&lt;/code&gt; contém o comando de compactação. Um valor que essa variável pode assumir durante a execução é &lt;code&gt;gzip -c -2 arquivo&amp;gt;arquivo.gz&lt;/code&gt;, por exemplo.&lt;/p&gt;
&lt;p&gt;Feita essa introdução, o primeiro recurso interessante que eu gostaria de apresentar é o &lt;em&gt;here strings&lt;/em&gt;. O funcionamento dele é simples. Dado um comando como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1+1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;a string &lt;code&gt;1+1&lt;/code&gt; será usada para alimentar a entrada padrão de &lt;code&gt;bc&lt;/code&gt;. Isso substitui a forma tradicional&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1+1&amp;#39;&lt;/span&gt; | bc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;que faz a mesma coisa, mas força um &lt;a href=&#34;https://en.wikipedia.org/wiki/Fork_(system_call)&#34;&gt;fork&lt;/a&gt; para isso, sendo mais ineficiente.&lt;/p&gt;
&lt;p&gt;Na linha do script que citei no início do post, o &lt;code&gt;bc&lt;/code&gt; vai receber o tempo gasto em modo usuário e o tempo gasto em modo kernel separados por um sinal de adição, fazendo portanto &lt;code&gt;TIMEC&lt;/code&gt; receber a soma desses valores. Aqui chegamos no segundo recurso que gostaria de citar nesse post. O builtin &lt;code&gt;time&lt;/code&gt; do bash (não confundir com o comando externo &lt;code&gt;time&lt;/code&gt;), pode ter sua saída formatada através do conteúdo da variável &lt;code&gt;TIMEFORMAT&lt;/code&gt;. Para fazer a saída do &lt;code&gt;time&lt;/code&gt; ficar no formato de uma soma, simplesmente atribuí o valor &lt;code&gt;%U+%S&lt;/code&gt; à &lt;code&gt;TIMEFORMAT&lt;/code&gt;. O &lt;code&gt;%U&lt;/code&gt; representa o tempo gasto em modo de usuário e o &lt;code&gt;%S&lt;/code&gt; o tempo gasto em modo kernel.&lt;/p&gt;
&lt;p&gt;Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ time df
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sist. Arq.           1K-blocos      Usad Dispon.   Uso% Montado em
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/hdc3             &lt;span style=&#34;color:#ae81ff&#34;&gt;37491624&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32393072&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3194048&lt;/span&gt;  92% /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmpfs                   &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;   0% /dev/shm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m0.061s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    0m0.020s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m0.016s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ TIMEFORMAT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;%U+%S &lt;span style=&#34;color:#75715e&#34;&gt;# Formatando a saída de time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ time df
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sist. Arq.           1K-blocos      Usad Dispon.   Uso% Montado em
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/hdc3             &lt;span style=&#34;color:#ae81ff&#34;&gt;37491624&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32393072&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3194048&lt;/span&gt;  92% /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmpfs                   &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;   0% /dev/shm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0.020+0.008
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Com isso, só fica faltando uma última coisa para mostrar: como redirecionar a saída do builtin &lt;code&gt;time&lt;/code&gt;. A primeira coisa importante a ter em mente, é que os tempos medidos em si são jogados na &lt;code&gt;stderr&lt;/code&gt;, enquanto que a &lt;code&gt;stdout&lt;/code&gt; é usada para a saída do comando cujo tempo de execução é medido. Dito isso uma primeira tentativa de redirecionar a saída do &lt;code&gt;time&lt;/code&gt; para um arquivo por exemplo, seria fazer simplesmente fazer algo como &lt;code&gt;time comando 2&amp;gt; arquivo&lt;/code&gt;, mas isso não funciona. O que é redirecionado para arquivo nesse caso é a saída de erros de comando, não a do time, que continua imprimindo na tela. Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ time ls naoexiste 2&amp;gt;saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m0.041s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    0m0.036s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m0.004s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls: impossível acessar naoexiste: Arquivo ou diretório não encontrado
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A saída para isso é executar o &lt;code&gt;time&lt;/code&gt; dentro de um bloco (em uma subshell também funciona, mas é ineficiente) e redirecionar a saída de erros desse bloco. Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; time ls naoexiste 2&amp;gt;/dev/null; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 2&amp;gt;saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m0.056s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    0m0.028s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m0.004s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Perceba que dentro do bloco eu redirecionei a saída de erros de &lt;code&gt;ls naoexiste&lt;/code&gt; para &lt;code&gt;/dev/null&lt;/code&gt;, para que ela não se misturasse com a saída do &lt;code&gt;time&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Com isso já temos toda a teoria para entender a linha que citei no início do post. Vamos desmembrá-la e revisar o que apresentei nesse post.&lt;/p&gt;
&lt;h2 id=&#34;revisando&#34;&gt;Revisando&lt;/h2&gt;
&lt;p&gt;Na linha&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TIMEC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;bc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; time eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$CMDC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;TIMEC&lt;/code&gt; vai receber a soma, feita pela calculadora &lt;code&gt;bc&lt;/code&gt;, dos tempos calculados pelo builtin &lt;code&gt;time&lt;/code&gt; do bash. A saída desse comando foi formatada de acordo com a variável &lt;code&gt;TIMEFORMAT&lt;/code&gt; para formar uma string com uma soma do tempo gasto em modo kernel com o tempo gasto em modo de usuário (&lt;code&gt;%U+%S&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Dentro da subshell cujo resultado alimenta a entrada padrão do &lt;code&gt;bc&lt;/code&gt; o &lt;code&gt;time&lt;/code&gt; precisou ser executado dentro de um bloco, para ser possível capturar o seu resultado, que vai para &lt;code&gt;stderr&lt;/code&gt;. A &lt;code&gt;stdout&lt;/code&gt; é usada para a saída do comando cujo tempo de execução é medido pelo &lt;code&gt;time&lt;/code&gt;. A &lt;code&gt;stderr&lt;/code&gt; do bloco inteiro foi conectado a &lt;code&gt;stdout&lt;/code&gt;, sendo assim devidamente retornada pela subshell e usada para alimentar a entrada padrão da &lt;code&gt;bc&lt;/code&gt; via &lt;em&gt;here strings&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;É isso. Quaisquer comentários são bem vindos.&lt;/p&gt;
&lt;h2 id=&#34;referências&#34;&gt;Referências&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mywiki.wooledge.org/BashFAQ/032&#34;&gt;BashFaq: How can I redirect the output of &amp;rsquo;time&amp;rsquo; to a variable or file?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tldp.org/LDP/abs/html/io-redirection.html&#34;&gt;Advanced Bash-Scripting Guide: I/O Redirection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jneves.wordpress.com/2008/03/05/hello-world/&#34;&gt;Papo de Botequim: Tira Gosto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/1/bash&#34;&gt;Manpage do Bash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
