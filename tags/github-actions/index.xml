<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github-actions on gmgall.net</title>
    <link>https://gmgall.net/tags/github-actions/</link>
    <description>Recent content in github-actions on gmgall.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Fri, 01 Aug 2025 23:42:27 -0300</lastBuildDate><atom:link href="https://gmgall.net/tags/github-actions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Workflows do GitHub Actions Indefinidamente Como &#34;Queued&#34;</title>
      <link>https://gmgall.net/blog/workflows-do-github-actions-indefinidamente-como-queued/</link>
      <pubDate>Fri, 01 Aug 2025 23:42:27 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/workflows-do-github-actions-indefinidamente-como-queued/</guid>
      <description>&lt;p&gt;O &lt;em&gt;workflow&lt;/em&gt; que faz o &lt;em&gt;build&lt;/em&gt; dessa p√°gina estava ficando com status &lt;code&gt;queued&lt;/code&gt; indefinidamente toda vez que era executado. Absolutamente nada era exibido nos logs.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&#34;https://github.com/actions/runner-images&#34;&gt;imagem&lt;/a&gt; que eu estava usando (&lt;code&gt;ubuntu-20.04&lt;/code&gt;) foi &lt;a href=&#34;https://github.blog/changelog/2025-01-15-github-actions-ubuntu-20-runner-image-brownout-dates-and-other-breaking-changes/&#34;&gt;depreciada&lt;/a&gt;. Ap√≥s trocar para a imagem &lt;code&gt;ubuntu-latest&lt;/code&gt;, o &lt;em&gt;workflow&lt;/em&gt; executou at√© o final sem problemas.&lt;/p&gt;
&lt;p&gt;√â esquisito uma coisa assim falhar silenciosamente? Demais, especialmente considerando que o GitHub tamb√©m &lt;a href=&#34;https://docs.github.com/en/billing/concepts/product-billing/github-actions&#34;&gt;cobra por esse servi√ßo&lt;/a&gt;, mas foi o que rolou comigo.ü§∑‚Äç‚ôÇÔ∏è&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automatizando Blogroll Com OPML</title>
      <link>https://gmgall.net/blog/automatizando-blogroll-com-opml/</link>
      <pubDate>Wed, 24 Jan 2024 20:51:04 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/automatizando-blogroll-com-opml/</guid>
      <description>&lt;p&gt;TL;DR&lt;/p&gt;
&lt;p&gt;Gero o meu &lt;a href=&#34;https://gmgall.net/blogroll/&#34;&gt;blogroll&lt;/a&gt; a partir de um OPML gerado pelo meu agregador RSS. S√£o 4 etapas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Gerar o OPML no agregador.&lt;/li&gt;
&lt;li&gt;Filtrar para manter apenas as categorias desejadas no OPML.&lt;/li&gt;
&lt;li&gt;Escrever um &lt;em&gt;shortcode&lt;/em&gt; do Hugo que renderiza o &lt;em&gt;blogroll&lt;/em&gt; a partir do OPML.&lt;/li&gt;
&lt;li&gt;Baixar o arquivo OPML para os diret√≥rios corretos do Hugo antes de gerar o site.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Mais detalhes abaixo.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;H√° uma &lt;a href=&#34;https://liaamancio.com.br/2024/01/07/blogroll-como-no-tempo-da-internet-arte-internet-moleque/&#34;&gt;tend√™ncia&lt;/a&gt; &lt;a href=&#34;https://www.lireo.com/bringing-back-the-blogroll/&#34;&gt;recente&lt;/a&gt; &lt;a href=&#34;https://blog.cadusilva.com/blogroll&#34;&gt;interessante&lt;/a&gt; em sites pessoais e blogs: o ressurgimento dos &lt;em&gt;blogrolls&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Acho uma ideia excelente, uma forma de &lt;a href=&#34;https://tomcritchlow.com/2022/04/21/new-rss/&#34;&gt;aumentar a √°rea de superf√≠cie do &lt;em&gt;blogging&lt;/em&gt;&lt;/a&gt;, de fazer as pessoas descobrirem mais conte√∫do em sites pessoais.&lt;/p&gt;
&lt;p&gt;Fiz um &lt;a href=&#34;https://gmgall.net/blogroll/&#34;&gt;blogroll para chamar de meu tamb√©m&lt;/a&gt;, mas a forma como gero o meu n√£o √© manual. Como leio a Indie Web principalmente por &lt;a href=&#34;https://gmgall.net/tags/rss/&#34;&gt;RSS&lt;/a&gt;, pensei em oferecer tamb√©m um link para um arquivo &lt;a href=&#34;http://opml.org/&#34;&gt;OPML&lt;/a&gt; com os &lt;em&gt;feeds&lt;/em&gt; dos sites no &lt;em&gt;blogroll&lt;/em&gt; para que fosse poss√≠vel subscri√ß√£o em todos os sites de uma vez s√≥.&lt;/p&gt;
&lt;p&gt;Penso que essa possibilidade √© uma boa para quem est√° conhecendo RSS s√≥ agora ou perdeu o h√°bito de acompanhar as atualiza√ß√µes dos sites por um agregador (ol√°, vi√∫vas do Google Reader, tudo bem por a√≠? üëã).&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;1¬∫ passo&lt;/strong&gt; para gerar o &lt;em&gt;blogroll&lt;/em&gt; seria exportar meus &lt;em&gt;feeds&lt;/em&gt; num arquivo OPML. Uso o &lt;a href=&#34;https://freshrss.org/&#34;&gt;FreshRSS&lt;/a&gt;, que tem uma &lt;a href=&#34;https://github.com/FreshRSS/FreshRSS/tree/edge/cli&#34;&gt;ferramenta de linha de comando&lt;/a&gt; chamada &lt;code&gt;export-opml-for-user.php&lt;/code&gt; para isso.&lt;/p&gt;
&lt;p&gt;Eu poderia usar o arquivo OPML que ela gera diretamente, mas preciso dar uma limpada legal nos &lt;em&gt;feeds&lt;/em&gt; em que estou inscrito. Tem muitos sites sem atualiza√ß√£o h√° anos e &lt;em&gt;feeds&lt;/em&gt; quebrados ali. Pensei em s√≥ manter no OPML algumas categorias e fazer uma curadoria mais cuidadosa dessas que vou manter. Ent√£o o &lt;strong&gt;2¬∫ passo&lt;/strong&gt; √© filtrar esse arquivo OPML que o FreshRSS gera.&lt;/p&gt;
&lt;p&gt;Isso √© relativamente f√°cil com de fazer em &lt;a href=&#34;https://docs.python.org/3/library/xml.etree.elementtree.html&#34;&gt;Python&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; ET
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;categories &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; category &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; body&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;outline&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; category&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; categories:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        body&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(category)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;buffer, encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;, xml_declaration&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O script acima l√™ OPML da &lt;code&gt;stdin&lt;/code&gt; e escreve na &lt;code&gt;stdout&lt;/code&gt; o mesmo OPML com apenas as categorias passadas como argumentos.&lt;/p&gt;
&lt;p&gt;Ent√£o, supondo que o script acima esteja num arquivo chamado &lt;code&gt;filter_opml.py&lt;/code&gt;, o comando abaixo grava em &lt;code&gt;blogroll.xml&lt;/code&gt; um arquivo OPML s√≥ com as categorias &lt;code&gt;Fediverso lus√≥fono&lt;/code&gt; e &lt;code&gt;ctrl-c.club&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./export-opml-for-user.php --user gmgall | python filter_opml.py &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Fediverso lus√≥fono&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ctrl-c.club&amp;#39;&lt;/span&gt; &amp;gt; blogroll.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tendo esse arquivo dispon√≠vel, √© &amp;ldquo;f√°cil&amp;rdquo; consumi-lo no &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Ele permite guardar arquivos no diret√≥rio &lt;code&gt;data&lt;/code&gt; que ter√£o seus dados expostos nos templates, ent√£o √© &amp;ldquo;s√≥&amp;rdquo; quest√£o de copiar meu arquivo OPML para &lt;code&gt;data&lt;/code&gt; e consumi-los com algo como &lt;code&gt;{{ $body := .Site.Data.blogroll.body }}&lt;/code&gt;, certo?&lt;/p&gt;
&lt;p&gt;Sim, mas n√£o achei intuitivo fazer isso. Saiu, mas teve alguma tentativa e erro envolvidas. A &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/0eaaa8fee37068bfc8ecfb760f770ecc9a7af22a&#34;&gt;mensagem de commit&lt;/a&gt; na implementa√ß√£o dessa funcionalidade cita casos simples, em que se recupera o &lt;strong&gt;conte√∫do&lt;/strong&gt; de tags XML. O padr√£o OPML traz as informa√ß√µes quase todas como &lt;strong&gt;atributos&lt;/strong&gt;. Voc√™ precisa usar a &lt;a href=&#34;https://gohugo.io/functions/index-function/&#34;&gt;fun√ß√£o &lt;code&gt;index&lt;/code&gt; do Hugo&lt;/a&gt; para acessar os atributos e eles viram chaves com nomes iniciados por &lt;code&gt;-&lt;/code&gt; nos templates. Recomendo ler o que o &lt;a href=&#34;https://brainbaking.com/post/2022/01/generating-a-blogroll-with-opml-in-hugo/#hugo-and-xml-parsing&#34;&gt;Wouter Groeneveld escreveu sobre&lt;/a&gt;. Ap√≥s brigar um pouco com isso, saiu o &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;&lt;em&gt;shortcode&lt;/em&gt;&lt;/a&gt; abaixo, o &lt;strong&gt;3¬∫ passo&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;Site&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;blogroll&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;outline&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-text&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h2&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt; }}&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h2&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;outline&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_text&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-text&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_description&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-description&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_htmlUrl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-htmlUrl&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_xmlUrl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-xmlUrl&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $feed_htmlUrl }}&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_text&lt;/span&gt; }}&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&amp;gt; &amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $feed_xmlUrl }}&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;alt&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;O logo do RSS.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/img/rss.svg&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;12&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;12&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;display: inline&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&amp;gt; {{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_description&lt;/span&gt; }}&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ &lt;span style=&#34;color:#a6e22e&#34;&gt;end&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;end&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esse &lt;em&gt;shortcode&lt;/em&gt; quebra nos casos em que uma categoria tem um √∫nico &lt;em&gt;feed&lt;/em&gt; ou caso &lt;code&gt;body&lt;/code&gt; possua uma √∫nica categoria. Vi quem preferisse &lt;a href=&#34;https://nikdoof.com/posts/2022/automating-a-blogroll-in-hugo/#the-script&#34;&gt;transformar o OPML em JSON antes de process√°-lo&lt;/a&gt; com o Hugo. Tendo enfrentado esses probleminhas, entendo a motiva√ß√£o.&lt;/p&gt;
&lt;p&gt;Chamei esse &lt;em&gt;shortcode&lt;/em&gt; de &lt;code&gt;blogroll&lt;/code&gt; e isso me permite renderiz√°-lo em qualquer arquivo de conte√∫do desse site com &lt;code&gt;{{&amp;lt; blogroll &amp;gt;}}&lt;/code&gt;. Vou renderiz√°-lo entre 2 linhas horizontais abaixo:&lt;/p&gt;
&lt;hr&gt;


  &lt;h2&gt;ctrl-c.club&lt;/h2&gt;
  &lt;ul&gt;
      &lt;li&gt;&lt;a href=&#34;https://ctrl-c.club/~chiptune/blog/&#34;&gt;~chiptune posts on ctrl-c.club&lt;/a&gt; &lt;a href=&#34;https://ctrl-c.club/~gmgall/feeds/chiptune.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; chiptune&amp;#39;s blog&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://ctrl-c.club/~FikaMedHasse/blog.html&#34;&gt;~FikaMedHasse posts on ctrl-c.club&lt;/a&gt; &lt;a href=&#34;https://ctrl-c.club/~gmgall/feeds/FikaMedHasse.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Blog!&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://ctrl-c.club/~gome/journal/&#34;&gt;~gome posts on ctrl-c.club&lt;/a&gt; &lt;a href=&#34;https://ctrl-c.club/~gmgall/feeds/gome.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; gome ‚Äî journal&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://ctrl-c.club/~lettuce/&#34;&gt;~lettuce posts on ctrl-c.club&lt;/a&gt; &lt;a href=&#34;https://ctrl-c.club/~gmgall/feeds/lettuce.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; /home/lettuce/public_html/index.html&lt;/li&gt;
    
  &lt;/ul&gt;

  &lt;h2&gt;Fediverso lus√≥fono&lt;/h2&gt;
  &lt;ul&gt;
      &lt;li&gt;&lt;a href=&#34;https://lori.bearblog.dev/&#34;&gt;blog da Lori&lt;/a&gt; &lt;a href=&#34;https://lori.bearblog.dev/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; √†s vezes eu empolgo e saio despejando palavras....&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://blog.cadusilva.com/&#34;&gt;Blog do Cadu Silva&lt;/a&gt; &lt;a href=&#34;https://blog.cadu.cc/feed&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Site pessoal de Cadu Silva. Aqui voc√™ encontra especialmente textos sobre tecnologia.&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://blog.dunossauro.com/&#34;&gt;Blog do Dunossauro&lt;/a&gt; &lt;a href=&#34;https://blog.dunossauro.com/feed.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Blog do Dunossauro&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://www.brunoarine.com/posts/&#34;&gt;Blog on Bruno Arine&lt;/a&gt; &lt;a href=&#34;https://brunoarine.com/blog/index.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Recent content in Blog on Bruno Arine&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://contraditoria.noblogs.org/&#34;&gt;Contradit√≥ri(A)&lt;/a&gt; &lt;a href=&#34;https://contraditoria.noblogs.org/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; &lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://crieaporradeum.blog/&#34;&gt;Crie a Porra de um Blog&lt;/a&gt; &lt;a href=&#34;https://crieaporradeum.blog/index.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Recent content on Crie a Porra de um Blog&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://escrevescreve.wordpress.com/&#34;&gt;escrevescreve ‚Äì cecilia giannetti&lt;/a&gt; &lt;a href=&#34;https://gmgall.github.io/feeds/escrevescreve.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; cecilia giannetti&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://blog.ayom.media/felipe-siles/&#34;&gt;Felipe Siles&lt;/a&gt; &lt;a href=&#34;https://blog.ayom.media/felipe-siles/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Espero que seja √∫til&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;http://helio.loureiro.eng.br/index.php&#34;&gt;Home - helio.loureiro.eng.br&lt;/a&gt; &lt;a href=&#34;http://helio.loureiro.eng.br/index.php?format=feed&amp;amp;type=rss&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Helio Loureiro - site pessoal, blog, informa√ß√µes, scripts, unix, linux, receitas t√©cnicas, python, cyberativismo e outros&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://kiff.blog/&#34;&gt;Kiff&lt;/a&gt; &lt;a href=&#34;https://kiff.blog/rss&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; No more empty sketchbooks. Gallery of drawings and sketches produced during 2021, in an attempt to be daily studies.&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://kiff.bearblog.dev/&#34;&gt;Kiff&lt;/a&gt; &lt;a href=&#34;https://kiff.bearblog.dev/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Sou designer e desenho, pinto e bordo (entre outras manualidades) nas horas vagas, mas nada escritora. 

Fotografia, ilustra√ß√£o, filmes, s√©ries, livros,...&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://liaamancio.com.br/&#34;&gt;Lia Amancio&lt;/a&gt; &lt;a href=&#34;https://liaamancio.com.br/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Desde 2001 servindo conte√∫do de qualidade na internet.&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://www.memedecarbono.com.br/&#34;&gt;Meme de Carbono&lt;/a&gt; &lt;a href=&#34;https://www.memedecarbono.com.br/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Os √°tomos e ideias que constroem a consci√™ncia&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://odd.bearblog.dev/&#34;&gt;ODD BLOG&lt;/a&gt; &lt;a href=&#34;https://odd.bearblog.dev/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Oi, eu sou o DD, e este √© o meu blog pessoal, onde pretendo expor algumas de minhas ideias e ideais. Para encontrar os meus textos, clique no bot√£o &amp;#34;Blog&amp;#34; al...&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://sol2070.in/&#34;&gt;sol2070&lt;/a&gt; &lt;a href=&#34;https://sol2070.in/feed/notes.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;hr&gt;
&lt;p&gt;Falta s√≥ baixar o arquivo OPML para o diret√≥rio &lt;code&gt;data&lt;/code&gt; (para que os dados fiquem dispon√≠veis para o &lt;em&gt;shortcode&lt;/em&gt; &lt;code&gt;blogroll&lt;/code&gt;) e para o diret√≥rio &lt;code&gt;static&lt;/code&gt; (para que ele fique dispon√≠vel para download) a cada gera√ß√£o do site. Como uso &lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt;, o &lt;strong&gt;4¬∫ passo&lt;/strong&gt; √© adicionar uma etapa no &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;workflow de gera√ß√£o desse site&lt;/a&gt; que coloca o arquivo nesses diret√≥rios.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Download OPML for blogroll&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    wget &amp;#39;${{ secrets.OPML_URL }}&amp;#39; -O data/blogroll.xml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    cp data/blogroll.xml static/blogroll.xml&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Isso √© tudo.&lt;/p&gt;
&lt;p&gt;E a√≠? Voc√™ tem um &lt;em&gt;blogroll&lt;/em&gt;? J√° pensou em oferecer um OPML para facilitar a inscri√ß√£o em todos os &lt;em&gt;feeds&lt;/em&gt; de uma vez s√≥?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Pages e Nomes de Diret√≥rio Iniciados com Underline</title>
      <link>https://gmgall.net/blog/github-pages-underline/</link>
      <pubDate>Wed, 07 Jun 2023 19:25:06 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/github-pages-underline/</guid>
      <description>&lt;p&gt;Levei mais tempo para descobrir isso do que me orgulharia em compartilhar, ent√£o escrevo aqui para n√£o esquecer.&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; trata diret√≥rios com nomes iniciados por &lt;code&gt;_&lt;/code&gt; (&lt;em&gt;underline&lt;/em&gt;) de forma especial &lt;strong&gt;mesmo se voc√™ estiver usando GitHub Actions para gerar os arquivos est√°ticos com outras ferramentas&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Isso ocorre porque o &lt;a href=&#34;https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/about-github-pages-and-jekyll&#34;&gt;GitHub Pages pode gerar e servir um site feito com Jekyll&lt;/a&gt; se voc√™ quiser e para o &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, diret√≥rios com nomes iniciados por &lt;code&gt;_&lt;/code&gt; s√£o especiais.&lt;/p&gt;
&lt;p&gt;Aparentemente o Jekyll est√° envolvido mesmo quando configuramos o Pages para servir os arquivos de um &lt;em&gt;branch&lt;/em&gt; separado e escrevemos nosso pr√≥prio &lt;em&gt;workflow&lt;/em&gt; no &lt;a href=&#34;https://github.com/features/actions&#34;&gt;Actions&lt;/a&gt; para escrever nesse &lt;em&gt;branch&lt;/em&gt;. Achei pouco intuitivo e outras pessoas que conversaram comigo sobre o assunto concordaram, mas √© assim que o Pages funciona.&lt;/p&gt;
&lt;p&gt;Um site que eu estava tentando servir tinha uma estrutura de arquivos parecida com a seguinte:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;about
css
doc
‚îú‚îÄ‚îÄ index.html
‚îú‚îÄ‚îÄ _static
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ basic.css
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ doctools.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ documentation_options.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ file.png
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ graphviz.css
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ language_data.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ minus.png
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ plus.png
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ pygments.css
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ scripts
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bootstrap.js
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bootstrap.js.LICENSE.txt
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bootstrap.js.map
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ pydata-sphinx-theme.js
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ pydata-sphinx-theme.js.map
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ searchtools.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ sphinx_highlight.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ styles
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bootstrap.css
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ pydata-sphinx-theme.css
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ theme.css
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ switcher.json
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ webpack-macros.html
‚îî‚îÄ‚îÄ tutorial
    ‚îú‚îÄ‚îÄ graphs.html
    ‚îú‚îÄ‚îÄ index.html
    ‚îú‚îÄ‚îÄ plotting_customization.html
    ‚îî‚îÄ‚îÄ quantum_walk_models.html
example.html
features
gethelp
getstarted
images
index.html
index.xml
js
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O arquivo &lt;code&gt;doc/index.html&lt;/code&gt; carregava v√°rios recursos de &lt;code&gt;doc/_static/&lt;/code&gt;. S√≥ a requisi√ß√£o para o arquivo &lt;code&gt;doc/index.html&lt;/code&gt; era conclu√≠da com sucesso. Para as requisi√ß√µes de todos os arquivos em &lt;code&gt;doc/_static&lt;/code&gt; eu recebia um erro 404 como resposta, &lt;strong&gt;mesmo que os arquivos estivessem l√°&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Para que esses arquivos passassem a ser servidos normalmente, precisei criar um arquivo oculto de nome &lt;code&gt;.nojekyll&lt;/code&gt; na &lt;strong&gt;raiz do site&lt;/strong&gt;. A estrutura ficou mais ou menos a seguinte:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;about
css
doc
‚îú‚îÄ‚îÄ index.html
‚îú‚îÄ‚îÄ _static
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ basic.css
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ doctools.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ documentation_options.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ file.png
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ graphviz.css
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ language_data.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ minus.png
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ plus.png
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ pygments.css
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ scripts
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bootstrap.js
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bootstrap.js.LICENSE.txt
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bootstrap.js.map
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ pydata-sphinx-theme.js
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ pydata-sphinx-theme.js.map
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ searchtools.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ sphinx_highlight.js
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ styles
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ bootstrap.css
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ pydata-sphinx-theme.css
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ theme.css
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ switcher.json
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ webpack-macros.html
‚îî‚îÄ‚îÄ tutorial
    ‚îú‚îÄ‚îÄ graphs.html
    ‚îú‚îÄ‚îÄ index.html
    ‚îú‚îÄ‚îÄ plotting_customization.html
    ‚îî‚îÄ‚îÄ quantum_walk_models.html
example.html
features
gethelp
getstarted
images
index.html
index.xml
js
.nojekyll
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Depois da cria√ß√£o desse arquivo, todas as requisi√ß√µes eram conclu√≠das normalmente.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gerando Feeds Com GitHub Actions e os Servindo Com GitHub Pages</title>
      <link>https://gmgall.net/blog/gerando-feeds-com-github-actions-e-os-servindo-com-github-pages/</link>
      <pubDate>Sun, 16 Apr 2023 14:01:34 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/gerando-feeds-com-github-actions-e-os-servindo-com-github-pages/</guid>
      <description>&lt;p&gt;Terminei o &lt;a href=&#34;https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/&#34;&gt;post anterior&lt;/a&gt; sobre o &lt;a href=&#34;https://github.com/ittner/newslinkrss&#34;&gt;newslinkrss&lt;/a&gt; falando o seguinte:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Com o comando que gera o &lt;em&gt;feed&lt;/em&gt; pronto, podemos remover a op√ß√£o &lt;code&gt;--log&lt;/code&gt;. Para assinarmos o &lt;em&gt;feed&lt;/em&gt; criado podemos agendar a execu√ß√£o peri√≥dica do &lt;code&gt;newslinkrss&lt;/code&gt; via &lt;code&gt;cron&lt;/code&gt; e assinarmos o &lt;em&gt;feed&lt;/em&gt; resultante ou ent√£o indicarmos no nosso agregador RSS que a origem √© um comando.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Isso cobre 2 de 3 possibilidades de consumo dos &lt;em&gt;feeds&lt;/em&gt; criados. S√£o elas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;arquivo local;&lt;/li&gt;
&lt;li&gt;comando e&lt;/li&gt;
&lt;li&gt;URL.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A 1¬™ possibilidade, a de agendar o &lt;code&gt;newslinkrss&lt;/code&gt; para escrever periodicamente um &lt;em&gt;feed&lt;/em&gt; em &lt;code&gt;/path/para/o/feed.xml&lt;/code&gt; e depois informar ao agregador que a origem do &lt;em&gt;feed&lt;/em&gt; √© um arquivo, n√£o √© vi√°vel caso o nosso agregador RSS seja um servi√ßo &lt;em&gt;web&lt;/em&gt; como o &lt;a href=&#34;https://feedly.com/&#34;&gt;Feedly&lt;/a&gt;. Ele naturalmente n√£o tem acesso ao nosso sistema de arquivos local.&lt;/p&gt;
&lt;p&gt;A 2¬™ possibilidade, a de informar que a origem do &lt;em&gt;feed&lt;/em&gt; √© um comando, √© interessante por n√£o nos obrigar a agendar a execu√ß√£o peri√≥dica do &lt;code&gt;newslinkrss&lt;/code&gt;, mas n√£o s√£o todos os agregadores que possuem essa funcionalidade.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;liferea.png&#34;
         alt=&#34;Tela de cadastro do agregador RSS Liferea mostrando 3 fontes poss√≠veis para o feed: URL, comando e arquivo local.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Tela de cadastro de feed no agregador Liferea. N√£o s√£o todos que permitem usar um comando como fonte.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Resta a √∫ltima possibilidade: gerar os &lt;em&gt;feeds&lt;/em&gt;, servi-los na &lt;em&gt;web&lt;/em&gt; e informar no agregador que a origem √© a URL dos &lt;em&gt;feeds&lt;/em&gt; gerados. Isso vai funcionar em agregadores &lt;em&gt;web&lt;/em&gt;, &lt;em&gt;mobile&lt;/em&gt; ou &lt;em&gt;desktop&lt;/em&gt; e vai permitir que outras pessoas tamb√©m cadastrem o &lt;em&gt;feed&lt;/em&gt; que voc√™ criou. √â a possibilidade mais vers√°til porque estaremos fazendo o trabalho que o dono do site &lt;strong&gt;deveria ter feito, mas n√£o fez&lt;/strong&gt;: servir um &lt;em&gt;feed&lt;/em&gt; para o site acess√≠vel a qualquer um na &lt;em&gt;web&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A desvantagem dessa abordagem √© que nem todo mundo vai ter um servidor &lt;em&gt;web&lt;/em&gt; acess√≠vel na internet e configurar um s√≥ para servir &lt;em&gt;feeds&lt;/em&gt; de sites de terceiros pode ser trabalho demais. Seria √≥timo uma alternativa mais simples e sugiro uma que depende apenas de termos uma conta no &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;: gerar os &lt;em&gt;feeds&lt;/em&gt; com &lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt; e servi-los via &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O &amp;ldquo;estalo&amp;rdquo; veio ao pensar no &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt; que uso para publicar meu site&lt;/a&gt;. Se tenho um &lt;em&gt;workflow&lt;/em&gt; que executa o &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; e faz o &lt;em&gt;deploy&lt;/em&gt; dos arquivos HTML/CSS/JS/etc. gerados por ele no GitHub Pages, seria quest√£o de pouca adapta√ß√£o ter um &lt;em&gt;workflow&lt;/em&gt; que executa o &lt;code&gt;newslinkrss&lt;/code&gt; e faz o &lt;em&gt;deploy&lt;/em&gt; dos arquivos XML gerados.&lt;/p&gt;
&lt;p&gt;Funcionou praticamente na 1¬™ tentativa. O &lt;a href=&#34;https://github.com/gmgall/feeds&#34;&gt;reposit√≥rio&lt;/a&gt; com o &lt;a href=&#34;https://github.com/gmgall/feeds/blob/main/generate_feeds.sh&#34;&gt;script que gera os &lt;em&gt;feeds&lt;/em&gt;&lt;/a&gt; e o &lt;a href=&#34;https://github.com/gmgall/feeds/blob/main/.github/workflows/feeds.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt; que executa o script e faz o &lt;em&gt;deploy&lt;/em&gt;&lt;/a&gt; dos arquivos √© p√∫blico. O script &lt;code&gt;generate_feeds.sh&lt;/code&gt; √© s√≥ um script Bash com uma sucess√£o de chamadas ao &lt;code&gt;newslinkrss&lt;/code&gt;. Os arquivos gerados em s√£o escritos em &lt;code&gt;./feeds&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O arquivo &lt;code&gt;.github/workflows/feeds.yml&lt;/code&gt; descreve um &lt;em&gt;workflow&lt;/em&gt; do GitHub Actions que prepara o ambiente, executa o script &lt;code&gt;generate_feeds.sh&lt;/code&gt; e faz o &lt;em&gt;deploy&lt;/em&gt; dos arquivos em &lt;code&gt;./feeds&lt;/code&gt; no GitHub Pages. Vou descrever o que cada trecho do arquivo faz sem muito detalhamento porque acho que √© praticamente autoexplicativo. Vou me deter no processo de configura√ß√£o do Pages e das chaves no final, por ser as maiores &amp;ldquo;pegadinhas&amp;rdquo; do processo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Generate and deploy feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;schedule&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# Run workflow automatically&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;cron&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0 * * * *&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Runs every hour, on the hour&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;workflow_dispatch&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O trecho acima nomeia o &lt;em&gt;workflow&lt;/em&gt; e define que ele ser√° executado em 2 situa√ß√µes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Periodicamente, a cada 1h. A sintaxe usada √© a do &lt;code&gt;cron&lt;/code&gt;. Se precisar de ajuda com ela, veja o assistente &lt;a href=&#34;https://crontab.guru/&#34;&gt;crontab guru&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ao se clicar no bot√£o &lt;strong&gt;Run workflow&lt;/strong&gt; na p√°gina das &lt;em&gt;Actions&lt;/em&gt; do reposit√≥rio no GitHub. N√£o √© estritamente necess√°rio, mas √© interessante enquanto voc√™ estiver testando. Imagine precisar esperar uma hora pela pr√≥xima execu√ß√£o do &lt;em&gt;workflow&lt;/em&gt; s√≥ para descobrir se alguma altera√ß√£o funcionou como previsto?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;build-deploy&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aqui √© definido que a m√°quina virtual (o &lt;em&gt;runner&lt;/em&gt;) em que os passos seguintes ser√£o executados usar√° a √∫ltima vers√£o dispon√≠vel do Ubuntu Linux.&lt;/p&gt;
&lt;p&gt;Tamb√©m executa o primeiro passo: fazer &lt;em&gt;checkout&lt;/em&gt; do reposit√≥rio. O &lt;em&gt;runner&lt;/em&gt; vai precisar usar o script &lt;code&gt;generate_feeds.sh&lt;/code&gt;. Essa &lt;em&gt;action&lt;/em&gt; torna o script dispon√≠vel no &lt;em&gt;runner&lt;/em&gt;. √â como se estiv√©ssemos fazendo &lt;code&gt;git clone&lt;/code&gt; no &lt;em&gt;runner&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Instala Python 3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/setup-python@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;python-version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3.9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Instala newslinkrss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;pip3 install newslinkrss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima instalamos o Python e o &lt;code&gt;newslinkrss&lt;/code&gt; via &lt;code&gt;pip&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Cria diret√≥rio que receber√° os feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mkdir feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima criamos o diret√≥rio &lt;code&gt;feeds&lt;/code&gt;. Lembram que &lt;code&gt;generate_feeds.sh&lt;/code&gt; escreve sempre no diret√≥rio &lt;code&gt;feeds&lt;/code&gt;? Com esse passo, criamos esse diret√≥rio no &lt;em&gt;runner&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Executa newslinkrss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bash generate_feeds.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima executamos o script &lt;code&gt;generate_feeds.sh&lt;/code&gt;. O script est√° dispon√≠vel no &lt;em&gt;runner&lt;/em&gt; porque o 1¬∫ passo que fizemos foi um &lt;em&gt;checkout&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;ACTIONS_DEPLOY_KEY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gh-pages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_DIR&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima √© feito o &lt;em&gt;deploy&lt;/em&gt; com a &lt;em&gt;action&lt;/em&gt; &lt;a href=&#34;https://github.com/peaceiris/actions-gh-pages&#34;&gt;&lt;code&gt;peaceiris/actions-gh-pages&lt;/code&gt;&lt;/a&gt;. Essa √© a parte final do &lt;em&gt;workflow&lt;/em&gt; e a que eu acho que merece um pouco mais de aten√ß√£o &lt;strong&gt;porque demanda configura√ß√µes em outros locais&lt;/strong&gt;. Vou falar de cada vari√°vel abaixo de &lt;code&gt;env:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PUBLISH_DIR&lt;/code&gt; define o diret√≥rio cujo conte√∫do ser√° servido via GitHub Pages. Os &lt;em&gt;feeds&lt;/em&gt; s√£o escritos em &lt;code&gt;./feeds&lt;/code&gt; no &lt;em&gt;runner&lt;/em&gt; pelo script &lt;code&gt;generate_feeds.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PUBLISH_BRANCH&lt;/code&gt; define o nome do &lt;em&gt;branch&lt;/em&gt; no nosso reposit√≥rio que ter√° os arquivos servidos via GitHub Pages. Ele ser√° um branch √≥rf√£o do reposit√≥rio. N√£o ter√° o script &lt;code&gt;generate_feeds.sh&lt;/code&gt;, o &lt;code&gt;README.md&lt;/code&gt;, o arquivo YAML que descreve o &lt;em&gt;workflow&lt;/em&gt; ou qualquer outra coisa que n√£o sejam os arquivos servidos via GitHub Pages. Aqui estamos definindo o &lt;em&gt;branch&lt;/em&gt; &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Certifique-se de que as configura√ß√µes do seu reposit√≥rio em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Pages&lt;/em&gt; estejam como na imagem abaixo: definindo que a origem √© um &lt;em&gt;branch&lt;/em&gt; de nome &lt;code&gt;gh-pages&lt;/code&gt;. No momento em que escrevo esse post, a URL para acessar essa configura√ß√£o √© &lt;a href=&#34;https://github.com/USER/REPO/settings/pages&#34;&gt;https://github.com/USER/REPO/settings/pages&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;pages_config.png&#34;
         alt=&#34;Configura√ß√µes do GitHub Pages para um reposit√≥rio no GitHub. As configura√ß√µes mostram que o branch de origem √© gh-pages.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Configura√ß√µes do GitHub Pages.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;ACTIONS_DEPLOY_KEY&lt;/code&gt; define um &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets&#34;&gt;&lt;em&gt;segredo criptografado&lt;/em&gt;&lt;/a&gt; de mesmo nome com a &lt;strong&gt;parte privada&lt;/strong&gt; de um par de chaves que ser√° usada para o &lt;a href=&#34;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/managing-deploy-keys&#34;&gt;&lt;em&gt;deploy&lt;/em&gt;&lt;/a&gt;. Os segredos s√£o configurados em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Secrets and variables&lt;/em&gt;. No momento em que escrevo esse post, a URL √© &lt;a href=&#34;https://github.com/USER/REPO/settings/secrets/actions&#34;&gt;https://github.com/USER/REPO/settings/secrets/actions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;parte p√∫blica&lt;/strong&gt; deve ser configurada em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Deploy keys&lt;/em&gt;. No momento em que escrevo esse post, a URL para essa configura√ß√£o √© &lt;a href=&#34;https://github.com/USER/REPO/settings/keys&#34;&gt;https://github.com/USER/REPO/settings/keys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A l√≥gica √© an√°loga a configurar login numa m√°quina remota via SSH com um par de chaves. A sua m√°quina local fica com a parte privada. A m√°quina remota fica com a parte p√∫blica.&lt;/p&gt;
&lt;p&gt;O reposit√≥rio tem uma chave p√∫blica configurada para que apenas &lt;strong&gt;as m√°quinas com a parte privada correspondente&lt;/strong&gt; possam fazer &lt;em&gt;deploy&lt;/em&gt; nele. Essa parte privada √© usada pelos &lt;em&gt;runners&lt;/em&gt; do GitHub Actions. Eles nada mais s√£o que m√°quinas virtuais ef√™meras, ent√£o n√£o podemos logar nelas uma √∫nica vez e configurar a chave privada como far√≠amos em uma m√°quina qualquer que controlamos. A parte privada fica acess√≠vel aos &lt;em&gt;runners&lt;/em&gt; por meio dos &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets&#34;&gt;segredos&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Como configuramos ambas as partes nas configura√ß√µes de um mesmo reposit√≥rio, pode ficar confuso o papel de cada parte. Espero as linhas acima tenham ajudado a elucidar o papel de cada uma. Mostro como fazer na pr√°tica abaixo.&lt;/p&gt;
&lt;h2 id=&#34;configurando-as-chaves&#34;&gt;Configurando as chaves&lt;/h2&gt;
&lt;h3 id=&#34;criando-as-chaves&#34;&gt;Criando as chaves&lt;/h3&gt;
&lt;p&gt;A cria√ß√£o do par de chaves pode ser feita com um comando como o seguinte:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa -b &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;git config user.email&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -f gh-pages -N &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2 arquivos ser√£o criados por esse comando: &lt;code&gt;gh-pages&lt;/code&gt; e &lt;code&gt;gh-pages.pub&lt;/code&gt;, as chaves privada e p√∫blica, respectivamente.&lt;/p&gt;
&lt;h3 id=&#34;adicionando-a-chave-p√∫blica-como-deploy-key&#34;&gt;Adicionando a chave p√∫blica como &lt;em&gt;deploy key&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Acesse &lt;a href=&#34;https://github.com/USER/REPO/settings/keys&#34;&gt;https://github.com/USER/REPO/settings/keys&lt;/a&gt;, clique em &lt;em&gt;Add deploy key&lt;/em&gt; e cole a &lt;strong&gt;parte p√∫blica&lt;/strong&gt;. Lembre-se de marcar a caixa &lt;em&gt;Allow write access&lt;/em&gt; e clique em &lt;em&gt;Add key&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As configura√ß√µes em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Deploy keys&lt;/em&gt; devem ficar parecidas √†s da figura abaixo.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;deploy_keys.png&#34;
         alt=&#34;Configura√ß√µes das deploy keys num reposit√≥rio do GitHub ap√≥s a configura√ß√£o de uma chave.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Configura√ß√µes das deploy keys.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;adicionando-a-chave-privada-como-segredo&#34;&gt;Adicionando a chave privada como segredo&lt;/h3&gt;
&lt;p&gt;Acesse &lt;a href=&#34;https://github.com/USER/REPO/settings/secrets/actions&#34;&gt;https://github.com/USER/REPO/settings/secrets/actions&lt;/a&gt;, clique no bot√£o verde &lt;em&gt;New repository secret&lt;/em&gt;, use &lt;code&gt;ACTIONS_DEPLOY_KEY&lt;/code&gt; como nome, cole a &lt;strong&gt;parte privada&lt;/strong&gt; no campo &lt;em&gt;Secret&lt;/em&gt; e clique em &lt;em&gt;Add secret&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As configura√ß√µes em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Secrets and variables&lt;/em&gt; &amp;gt; &lt;em&gt;Actions&lt;/em&gt; devem ficar parecidas √†s da figura abaixo.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;secrets.png&#34;
         alt=&#34;Configura√ß√µes dos segredos criptografados num reposit√≥rio do GitHub ap√≥s a inser√ß√£o de um segredo chamado &amp;#34;ACTIONS_DEPLOY_KEY&amp;#34;.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Configura√ß√µes dos segredos num reposit√≥rio ap√≥s a inser√ß√£o de um segredo chamado ACTIONS_DEPLOY_KEY.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Com o &lt;em&gt;workflow&lt;/em&gt; funcionando, os &lt;em&gt;feeds&lt;/em&gt; estar√£o dispon√≠veis numa URL como &lt;a href=&#34;https://USER.github.io/REPO/FILE.xml&#34;&gt;https://USER.github.io/REPO/FILE.xml&lt;/a&gt;. No caso do &lt;em&gt;feed&lt;/em&gt; de exemplo que fiz para o &lt;a href=&#34;https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/&#34;&gt;post anterior&lt;/a&gt;, a URL √© &lt;a href=&#34;https://gmgall.github.io/feeds/gmgall_untappd.xml&#34;&gt;https://gmgall.github.io/feeds/gmgall_untappd.xml&lt;/a&gt; (&lt;code&gt;feeds&lt;/code&gt; √© o &lt;a href=&#34;https://github.com/gmgall/feeds&#34;&gt;nome do reposit√≥rio&lt;/a&gt; e &lt;code&gt;gmgall_untappd.xml&lt;/code&gt; √© o &lt;a href=&#34;https://github.com/gmgall/feeds/blob/464ddf704a3ee2d46bbc40220331b0bb27d4e767/generate_feeds.sh#L20&#34;&gt;nome do arquivo gerado pelo script&lt;/a&gt; &lt;code&gt;generate_feeds.sh&lt;/code&gt;).&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Usa o GitHub Actions para algo parecido? Pensou em outra forma de servir os &lt;em&gt;feeds&lt;/em&gt;? Seria √≥timo conversar sobre isso. Entre com &lt;a href=&#34;https://gmgall.net/contact/&#34;&gt;contato&lt;/a&gt; se quiser trocar ideia.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://gmgall.net/blog/hello-world/</link>
      <pubDate>Thu, 12 Jan 2023 13:45:38 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/hello-world/</guid>
      <description>&lt;p&gt;Eu j√° tentei manter um site pessoal na internet N vezes. Nunca foi &amp;ldquo;pra frente&amp;rdquo;. Essa √© a tentativa N + 1.&lt;/p&gt;
&lt;p&gt;N√£o preciso ser convencido da import√¢ncia da escrita, sei dos benef√≠cios que posso tirar dela. Escrever nos ajuda a entender as coisas, robustece nosso pensamento. Existem coisas que parecem bem estruturadas na nossa cabe√ßa at√© que tentemos escrever ou conversar com algu√©m sobre. Escrever √© &lt;a href=&#34;https://en.wikipedia.org/wiki/Debugging&#34;&gt;&lt;em&gt;debugar&lt;/em&gt;&lt;/a&gt; a si mesmo.&lt;/p&gt;
&lt;p&gt;Depois que entendi isso, abandonei qualquer pretens√£o de originalidade, que, ali√°s, √© &lt;a href=&#34;https://guzey.com/personal/why-have-a-blog/#but-i-dont-have-anything-original-to-say-and-i-would-be-just-repeating-things-said-elsewhere-on-the-internet&#34;&gt;superestimada&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ainda assim, a procrastina√ß√£o seguia. Eu implicava com 2 coisas principalmente: a organiza√ß√£o do conte√∫do e a &lt;em&gt;stack&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;organiza√ß√£o-do-conte√∫do&#34;&gt;Organiza√ß√£o do conte√∫do&lt;/h2&gt;
&lt;p&gt;Ter um blog em que escrevesse tudo que eu quisesse, usando apenas tags para organizar o conte√∫do, n√£o me parecia ideal. E se algu√©m de TI entrasse no site buscando conte√∫do t√©cnico e tivesse que navegar por um monte de textos opinativos? E se alguma amiga de fora da √°rea de tecnologia entrasse no site e visse um monte de textos sobre desenvolvimento de software?&lt;/p&gt;
&lt;p&gt;Quero poder escrever sobre tudo que me interessa, mas tamb√©m n√£o quero alienar uma potencial audi√™ncia apresentando tudo &amp;ldquo;junto e misturado&amp;rdquo;, numa forma dif√≠cil de navegar.&lt;/p&gt;
&lt;p&gt;Considerei sites separados para cada tipo de conte√∫do, mas o trabalho extra necess√°rio para manter mais de um site me demoveu dessa ideia. Fora que suscita a pergunta: qual crit√©rio eu deveria usar para colocar determinado conte√∫do num site e n√£o no outro? Os sites pessoais mais &lt;a href=&#34;https://aurelio.net/&#34;&gt;interessantes&lt;/a&gt; &lt;a href=&#34;https://epxx.co/&#34;&gt;que&lt;/a&gt; &lt;a href=&#34;https://thobias.org/&#34;&gt;conhe√ßo&lt;/a&gt; tratam de &lt;a href=&#34;https://epxx.co/artigos/index_pens.html&#34;&gt;tudo&lt;/a&gt; &lt;a href=&#34;https://aurelio.net/fvm/&#34;&gt;que &amp;ldquo;d√° na telha&amp;rdquo;&lt;/a&gt; dos donos. O meu seria assim tamb√©m.&lt;/p&gt;
&lt;p&gt;Foi remoendo as quest√µes acima que decidi usar a organiza√ß√£o com 2 &lt;a href=&#34;https://gohugo.io/content-management/taxonomies/&#34;&gt;taxonomias&lt;/a&gt; (&lt;strong&gt;categorias e tags&lt;/strong&gt;), que j√° √© usada em muitos blogs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uma &lt;a href=&#34;https://gmgall.net/categories&#34;&gt;categoria&lt;/a&gt; √© uma classifica√ß√£o mais ampla e dificilmente um post vai estar em mais de uma categoria. Para come√ßar, terei 2 categorias: uma para posts &lt;a href=&#34;https://gmgall.net/categories/tech&#34;&gt;t√©cnicos&lt;/a&gt; e outra para posts &lt;a href=&#34;https://gmgall.net/categories/non-tech&#34;&gt;n√£o t√©cnicos&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Uma &lt;a href=&#34;https://gmgall.net/tags&#34;&gt;tag&lt;/a&gt; √© uma classifica√ß√£o mais estrita e frequentemente um post ter√° mais de uma tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Al√©m disso, existem as se√ß√µes de conte√∫do separadas. Nelas cada p√°gina pode receber categorias e tags tamb√©m, mas elas s√£o apresentadas de forma diferente dos textos. A √∫nica se√ß√£o separada hoje √© a de &lt;a href=&#34;https://gmgall.net/books&#34;&gt;leituras&lt;/a&gt;. Pretendo que cada p√°gina sobre um livro mostre ao menos uma imagem da capa e informa√ß√µes do livro em destaque.&lt;/p&gt;
&lt;p&gt;Cada categoria, tag e se√ß√£o separada ter√° seu pr√≥prio &lt;em&gt;feed&lt;/em&gt; RSS. Um potencial leitor pode assinar o &lt;em&gt;feed&lt;/em&gt; espec√≠fico e acompanhar apenas o conte√∫do de seu interesse.&lt;/p&gt;
&lt;h2 id=&#34;stack&#34;&gt;Stack&lt;/h2&gt;
&lt;p&gt;Depois de algumas tentativas de usar &lt;a href=&#34;https://en.wikipedia.org/wiki/Content_management_system&#34;&gt;CMS&lt;/a&gt;s, ficou claro que eu n√£o queria ter o trabalho de instalar e manter atualizados os softwares de uma pilha &lt;a href=&#34;https://en.wikipedia.org/wiki/LAMP_(software_bundle)&#34;&gt;LAMP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Static_site_generator&#34;&gt;Geradores de sites est√°ticos&lt;/a&gt; seriam meu caminho. Li sobre as op√ß√µes dispon√≠veis e fiquei convencido de que o melhor &amp;ldquo;no mercado&amp;rdquo; √© o &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Decidi us√°-lo. Gostei do que vi nos primeiros usos, mas demorei um pouco at√© encontrar um &lt;a href=&#34;https://www.pragprog.com/titles/bhhugo/build-websites-with-hugo/&#34;&gt;livro que me ensinou decentemente&lt;/a&gt; sobre ele.&lt;/p&gt;
&lt;p&gt;Para hospedagem, estou usando &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para fazer o &lt;em&gt;build&lt;/em&gt; e o &lt;em&gt;deploy&lt;/em&gt;, estou usando &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;. Existem &lt;em&gt;actions&lt;/em&gt; prontas para &lt;a href=&#34;https://github.com/marketplace/actions/hugo-setup&#34;&gt;instalar o Hugo&lt;/a&gt; e &lt;a href=&#34;https://github.com/marketplace/actions/github-pages-action&#34;&gt;fazer o &lt;em&gt;deploy&lt;/em&gt; no GitHub Actions&lt;/a&gt;, ent√£o o &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt;&lt;/a&gt; fica relativamente simples.&lt;/p&gt;
&lt;p&gt;O primeiro lugar em que li sobre esse tipo de &lt;em&gt;workflow&lt;/em&gt; foi em &lt;a href=&#34;https://www.morling.dev&#34;&gt;morling.dev&lt;/a&gt;, no post &lt;a href=&#34;https://www.morling.dev/blog/automatically-deploying-hugo-website-via-github-actions/&#34;&gt;&lt;em&gt;Automatically Deploying a Hugo Website via GitHub Actions&lt;/em&gt;&lt;/a&gt;. Seguindo esse caminho, voc√™ fica com um reposit√≥rio √∫nico que cont√©m o c√≥digo fonte do site (em um &lt;em&gt;branch&lt;/em&gt; principal) e os arquivos que efetivamente s√£o servidos (em um &lt;em&gt;branch&lt;/em&gt; &lt;a href=&#34;https://dev.to/mcaci/how-to-create-an-orphan-branch-in-git-35ac&#34;&gt;√≥rf√£o&lt;/a&gt; &lt;code&gt;gp-pages&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Outro padr√£o que vi sendo bastante usado √© ter 2 reposit√≥rios: um s√≥ para o c√≥digo fonte e outro s√≥ para os arquivos que ser√£o servidos pelo GitHub Pages. Veja um exemplo em &lt;a href=&#34;https://ruddra.com/hugo-deploy-static-page-using-github-actions/&#34;&gt;&lt;em&gt;Hugo: Deploy Static Site using GitHub Actions&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Pensar nisso tudo acima antes mesmo de ter o que postar √© complicar demais o que √© simples, voc√™ deve estar pensando. O ideal seria simplesmente come√ßar e ir ajustando o que fosse necess√°rio pelo caminho.&lt;/p&gt;
&lt;p&gt;E voc√™ estaria certa. Procrastinei manter um site na web por muito mais tempo do que me orgulho. Estou com o dom√≠nio gmgall.net &amp;ldquo;parado&amp;rdquo; h√° v√°rios anos.&lt;/p&gt;
&lt;p&gt;Protelei tanto por uma ansiedade de me expor que s√≥ consegui lidar melhor com &lt;a href=&#34;https://pt.wikipedia.org/wiki/Psicoterapia&#34;&gt;ajuda&lt;/a&gt;. Ent√£o deseje-me sorte e seja bem vinda, pessoa leitora! üòÅ&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
