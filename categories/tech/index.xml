<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech on gmgall.net</title>
    <link>https://gmgall.net/categories/tech/</link>
    <description>Recent content in tech on gmgall.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Thu, 27 Mar 2025 14:00:16 -0300</lastBuildDate><atom:link href="https://gmgall.net/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tornando Arquivos de Vídeo Enviáveis Pelo WhatsApp Web</title>
      <link>https://gmgall.net/blog/arquivos-de-video-enviaveis-pelo-whatsapp-web/</link>
      <pubDate>Thu, 27 Mar 2025 14:00:16 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/arquivos-de-video-enviaveis-pelo-whatsapp-web/</guid>
      <description>&lt;p&gt;Outro dia, outra sequência de opções do &lt;code&gt;ffmpeg&lt;/code&gt; que coloco aqui para ficar mais fácil de achar&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Hoje tentei enviar um arquivo de vídeo numa conversa no WhatsApp Web e recebi o erro &lt;code&gt;1 arquivo que você tentou adicionar não é compatível&lt;/code&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;erro_whatsapp_web.png&#34;
         alt=&#34;Erro &amp;#39;1 arquivo que você tentou adicionar não é compatível&amp;#39; reportado no canto inferior esquerdo do WhatsApp Web. Ele apareceu após uma tentativa de envio de um arquivo de vídeo numa conversa.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Erro reportado pelo WhatsApp Web na tentativa de enviar um arquivo de vídeo&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;O arquivo estava codificado com &lt;a href=&#34;https://en.wikipedia.org/wiki/VP9&#34;&gt;VP9&lt;/a&gt; e o WhatsApp Web não se dá bem com esse codec no momento em que escrevo esse post.&lt;/p&gt;
&lt;p&gt;Uma combinação de &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Video_Coding&#34;&gt;H264&lt;/a&gt; e &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Audio_Coding&#34;&gt;AAC&lt;/a&gt; funciona. Para recodificar o vídeo com esses codecs, usei o comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffmpeg -i input.mp4 -vcodec libx264 -acodec aac output.mp4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Acho que o blog de todo usuário do &lt;code&gt;ffmpeg&lt;/code&gt; tem postagens dessas, né?&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Erro &#34;Can Not Open External File&#34; ao Tentar Abrir Legendas Com mpv</title>
      <link>https://gmgall.net/blog/can-not-open-external-file-mpv/</link>
      <pubDate>Sun, 23 Mar 2025 22:06:39 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/can-not-open-external-file-mpv/</guid>
      <description>&lt;p&gt;Hoje, ao tentar reproduzir um arquivo de vídeo com legendas externas no formato &lt;a href=&#34;https://docs.fileformat.com/video/srt/&#34;&gt;SRT&lt;/a&gt; com o player &lt;code&gt;mpv&lt;/code&gt;, recebi um erro como o que aparece abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mpv --sub-file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;legenda.srt video.mp4 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Can not open external file legenda.srt.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Video --vid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;h264 1920x1036 24.000fps&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Audio --aid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; --alang&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;spa &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ac3 6ch 48000Hz&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Audio --aid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; --alang&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;spa &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;aac 2ch 48000Hz&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AO: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;pipewire&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 48000Hz 5.1&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;side&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 6ch floatp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VO: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;gpu&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 1920x1036 yuv420p
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AV: 00:00:06 / 02:00:10 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0%&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; A-V:  0.000 ct: -0.083
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Exiting... &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Quit&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O arquivo estava no &lt;em&gt;path&lt;/em&gt; certo, outras legendas funcionavam normalmente e eu tinha permissão de leitura em &lt;code&gt;legenda.srt&lt;/code&gt;. Ainda assim, o enigmático &lt;code&gt;Can not open external file&lt;/code&gt; seguia aparecendo.&lt;/p&gt;
&lt;p&gt;Parando para comparar legendas que &lt;strong&gt;não&lt;/strong&gt; abriam no &lt;code&gt;mpv&lt;/code&gt;&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ head legenda1.srt &lt;span style=&#34;color:#75715e&#34;&gt;# Não abre no mpv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:00.000 --&amp;gt; 00:00:09.259
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blablabla
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ head legenda2.srt &lt;span style=&#34;color:#75715e&#34;&gt;# Não abre no mpv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00:00:05:150 --&amp;gt; 00:00:10,050
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blablabla
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;hellip;com legendas que abriam&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ head legenda3.srt &lt;span style=&#34;color:#75715e&#34;&gt;# ABRE no mpv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00:00:42,058 --&amp;gt; 00:00:46,277
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blablabla
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ficou claro um padrão: sempre que a legenda &lt;strong&gt;não&lt;/strong&gt; começava com um contador numérico de legendas iniciado por 1, o mpv reclamava &lt;code&gt;Can not open external file&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Alterei manualmente o arquivo de legendas que eu estava tentando abrir originalmente para começar por 1 e o &lt;code&gt;mpv&lt;/code&gt; conseguiu abri-lo sem erros.&lt;/p&gt;
&lt;p&gt;Outros players devem ser mais lenientes com o formato SRT do que o &lt;code&gt;mpv&lt;/code&gt;, por isso existem tantos arquivos que não seguem exatamente o &lt;a href=&#34;https://en.wikipedia.org/wiki/SubRip#Format&#34;&gt;formato&lt;/a&gt; por aí.&lt;/p&gt;
&lt;p&gt;Parece que esse é um &lt;a href=&#34;https://github.com/mpv-player/mpv/issues/3820&#34;&gt;problema&lt;/a&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;a href=&#34;https://github.com/iina/iina/issues/3073&#34;&gt;conhecido&lt;/a&gt; há um tempinho, mas a mensagem de erro não ajuda nem um pouco.&lt;/p&gt;
&lt;p&gt;Versões dos softwares envolvidos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mpv --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mpv 0.38.0 Copyright © 2000-2024 mpv/MPlayer/mplayer2 projects
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; built on Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2024&lt;/span&gt; 20:52:23
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libplacebo version: v6.338.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FFmpeg version: 6.1.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FFmpeg library versions:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   libavutil       58.2.100 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;runtime 58.29.100&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   libavcodec      60.3.100 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;runtime 60.31.102&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   libavformat     60.3.100 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;runtime 60.16.100&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   libswscale      7.1.100 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;runtime 7.5.100&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   libavfilter     9.3.100 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;runtime 9.12.100&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   libswresample   4.10.100 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;runtime 4.12.100&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Quem exatamente tem um problema? O software que é tolerante com pequenos desvios do formato ou o que segue o formato estritamente, mesmo que com isso deixe de abrir um monte de arquivos disponíveis?&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Convertendo Áudios para o Telegram</title>
      <link>https://gmgall.net/blog/convertendo-audios-para-o-telegram/</link>
      <pubDate>Wed, 26 Feb 2025 16:40:34 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/convertendo-audios-para-o-telegram/</guid>
      <description>&lt;p&gt;Arquivos de áudio no Telegram podem aparecer para o destinatário de 2 formas:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;audios_telegram.jpg&#34;
         alt=&#34;Um mesmo áudio foi enviado pelo mensageiro Telegram. Cada um aparece de uma forma para o destinatário. A diferença é o formato.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Áudios no Telegram&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Na primeira forma (áudio de cima na imagem acima), aparece o nome do arquivo e alguns metadados (como artista), além de um &lt;strong&gt;⋮&lt;/strong&gt; no topo que faz abrir um menu com opções como &lt;em&gt;Responder&lt;/em&gt;, &lt;em&gt;Salvar nas Músicas&lt;/em&gt;, &lt;em&gt;Compartilhar&lt;/em&gt; etc.&lt;/p&gt;
&lt;p&gt;Na segunda forma (áudio de baixo na imagem acima), aparece apenas o botão de play. Aparece como se fosse um áudio gravado pelo próprio microfone do smartphone.&lt;/p&gt;
&lt;p&gt;Pelo que testei, a diferença é o container e o codec. Para converter com &lt;code&gt;ffmpeg&lt;/code&gt; um arquivo de áudio &lt;code&gt;sample.mp3&lt;/code&gt;, que aparece da 1ª forma, para um arquivo &lt;code&gt;sample.ogg&lt;/code&gt;, que aparece da 2ª forma, use um comando como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sample.mp3 aparece da 1ª forma&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sample.ogg aparece da 2ª forma&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffmpeg -i sample.mp3 -c:a libopus sample.ogg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se desejar extrair o áudio de um arquivo de vídeo &lt;code&gt;input.mp4&lt;/code&gt; para um arquivo de áudio &lt;code&gt;output.ogg&lt;/code&gt; (que aparece da 2ª forma no Telegram), use um comando como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffmpeg -i input.mp4 -vn -c:a libopus output.ogg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Testei com as seguintes versões de softwares:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Telegram Desktop: 5.3.2&lt;/li&gt;
&lt;li&gt;Telegram Android: 11.7.3&lt;/li&gt;
&lt;li&gt;ffmpeg: 6.1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como referência dos usos mais comuns do &lt;code&gt;ffmpeg&lt;/code&gt; recomendo o site &lt;a href=&#34;https://amiaopensource.github.io/ffmprovisr/&#34;&gt;ffmprovisr&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linguagens Declarativas e o Nosso Cérebro</title>
      <link>https://gmgall.net/blog/linguagens-declarativas-e-o-nosso-cerebro/</link>
      <pubDate>Mon, 03 Feb 2025 11:53:02 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/linguagens-declarativas-e-o-nosso-cerebro/</guid>
      <description>&lt;p&gt;Recebi o meme abaixo num grupo daquele mensageiro instantâneo praticamente impossível de se livrar se você mora no Brasil.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;meme.jpeg&#34;
         alt=&#34;Uma pessoa desesperada com uma query SQL que inadvertidamente apagou todas as linhas de uma tabela ao invés das 2 pretendidas.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Ops... Deveria ter iniciado uma transação.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A imagem mostra uma pessoa desesperada com o resultado de um comando SQL. A intenção era apagar as linhas nas quais a coluna &lt;code&gt;id&lt;/code&gt; tivesse o valor &lt;code&gt;23&lt;/code&gt; ou o valor &lt;code&gt;22&lt;/code&gt;, mas ela apagou todas as 224 linhas da tabela. O prompt que aparece no meme é o seguinte:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;delete&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; drby &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Query OK, &lt;span style=&#34;color:#ae81ff&#34;&gt;224&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;rows&lt;/span&gt; affected (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt; sec)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; drby;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Empty &lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt; sec)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A pessoa, sem querer, escreveu uma condição que sempre é verdadeira após a cláusula &lt;code&gt;WHERE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ok, qual é o seu ponto, Guilherme?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Então, meu ponto é que eu tive a sensação de ter demorado um segundinho a mais para captar o que rolou ali. Parece que levei mais tempo do que levaria se eu tivesse lido &lt;code&gt;if (id == 23 or 22)&lt;/code&gt; num código fonte numa linguagem de programação imperativa qualquer.&lt;/p&gt;
&lt;p&gt;Isso me lembrou de 2 situações em que me pediram para ter atenção com o tipo de bug acima:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uma aula em vídeo recente de revisão de SQL para concursos. O próprio professor também se confundiu com uma questão que comentava em certo ponto.&lt;/li&gt;
&lt;li&gt;Longínquas aulas de banco de dados da faculdade.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bom, se é um ponto de ênfase ao ensinar SQL, gerou meme e eu mesmo achei que demorei mais do que &amp;ldquo;deveria&amp;rdquo;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; para entender, suponho que seja mais fácil de cometer esse erro em SQL do que é numa linguagem imperativa qualquer.&lt;/p&gt;
&lt;p&gt;Eu, pelo menos, nunca vi memes sobre isso, nem lembro disso ter sido ênfase em aulas de programação. Entendemos muito cedo que a maior parte das linguagens avaliaria &lt;code&gt;22&lt;/code&gt; como verdadeiro e deixamos de cometer o erro.&lt;/p&gt;
&lt;p&gt;Isso me botou para conjecturar sobre o motivo disso. Meu chute é que em linguagens imperativas não acontece tanto porque a gente liga um modo de &amp;ldquo;dar a mão pro interpretador/compilador e ensiná-lo&amp;rdquo; na nossa cabeça.&lt;/p&gt;
&lt;p&gt;A gente desliga esse modo ao usar uma linguagem declarativa porque passa a &amp;ldquo;falar&amp;rdquo; com o computador como se estivesse falando com uma pessoa. Tendemos a nos aproximar de uma linguagem natural.&lt;/p&gt;
&lt;p&gt;Falar para um amigo &amp;ldquo;me trás da estante os livros com capa vermelha ou verde&amp;rdquo; é uma construção possível quando não estamos preocupados em &lt;strong&gt;como&lt;/strong&gt; nosso amigo vai pegar os livros. Só descrevemos o resultado desejado assim como só descrevemos características das linhas que queremos numa query SQL. A gente não está pensando que primeiro tem que ir num índice, que pode existir uma B-tree por trás, nada disso.&lt;/p&gt;
&lt;p&gt;A sensação de vocês é a mesma (a de que é mais fácil cometer esse tipo de erro em linguagens declarativas)? Faz sentido esse texto? Existe algum material interessante que fale sobre como nosso cérebro funciona usando linguagens de um paradigma vs os outros? Algum tipo de comparação da taxa de bugs por paradigmas?&lt;/p&gt;
&lt;p&gt;Parece que há uma interseção bacana entre linguística, computação e psicologia aí. Gostaria de saber mais sobre. 🙂&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Atualização&lt;/strong&gt;: A &lt;a href=&#34;https://ursal.zone/@gmgall/113941072347867957&#34;&gt;conversa na Federação&lt;/a&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; sobre esse texto fez eu me tocar de que falei do todo (linguagens declarativas) quando deveria falar de apenas uma parte (SQL). O efeito que eu descrevo acima não está associado ao paradigma em si e sim com o quanto uma &lt;em&gt;query&lt;/em&gt; se parece com uma frase em linguagem natural. Existem linguagens declarativas com bastante &amp;ldquo;cara de código&amp;rdquo; e não percebo a mesma coisa nelas. Um exemplo que deram foi QML.&lt;/p&gt;
&lt;p&gt;Independentemente desse detalhe, sigo achando um efeito interessante e gostaria de ler mais sobre isso.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Não use &amp;ldquo;deveria&amp;rdquo; para se pressionar. Faz mal para a cachola: &lt;a href=&#34;https://youtu.be/PeF-mIrYIIU&#34;&gt;https://youtu.be/PeF-mIrYIIU&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20250220210550/https://social.subversida.de/@cochise/statuses/01JKC81RSCCQY79E6ZW9RX4MT3&#34;&gt;Arquivo 1&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://archive.ph/yfphw&#34;&gt;Arquivo 2&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Free Software Advent 2024</title>
      <link>https://gmgall.net/blog/free-software-advent-2024/</link>
      <pubDate>Wed, 01 Jan 2025 22:24:39 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/free-software-advent-2024/</guid>
      <description>&lt;p&gt;Na tag &lt;code&gt;#FreeSoftwareAdvent&lt;/code&gt; lá na Federação&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; se indica um software livre por dia no mês de dezembro. Eu participei indicando alguns e os listo abaixo. Isso vai servir tanto para colocar esse conteúdo num local mais permanente (eu excluo minhas postagens no Mastodon periodicamente) quanto para tirar a poeira do site.&lt;/p&gt;
&lt;p&gt;Um excelente 2025 para todos que me leem aqui!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;aegis&#34;&gt;Aegis&lt;/h2&gt;
&lt;p&gt;Um autenticador. Alternativa livre aos Google Authenticator e LastPass Authenticator da vida. Seus tokens ficam encriptados. Backups automáticos, mas só se você configurar ativamente.&lt;/p&gt;
&lt;p&gt;Plataforma: Android. Licença: GPLv3&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://getaegis.app/&#34;&gt;https://getaegis.app/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;newslinkrss&#34;&gt;newslinkrss&lt;/h2&gt;
&lt;p&gt;Cria feeds RSS para sites que não oferecem um.&lt;/p&gt;
&lt;p&gt;É um scraper de propósito específico. Pela linha de comando, você invoca o newslinkrss contra um site com listas de artigos e pode usar seletores CSS, XPath e regex em flags específicas para pegar os diferentes componentes de um feed (data de publicação, título de artigo, corpo de artigo, autor etc.).&lt;/p&gt;
&lt;p&gt;Muito poderoso e versátil.&lt;/p&gt;
&lt;p&gt;Plataforma: Só usei no Linux, mas deve funcionar em outros SOs, é feito em Python. Licença: GPLv3&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ittner/newslinkrss&#34;&gt;https://github.com/ittner/newslinkrss&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;simplescreenrecorder&#34;&gt;SimpleScreenRecorder&lt;/h2&gt;
&lt;p&gt;Faz o que está no nome: grava sua tela para um arquivo de vídeo de forma simples.&lt;/p&gt;
&lt;p&gt;Você tem um assistente que te pergunta se você quer gravar a tela inteira ou um pedaço dela, se deseja gravar áudio e qual o formato do vídeo.&lt;/p&gt;
&lt;p&gt;Plataforma: Linux (está no repositório de várias distros). Licença: GPLv3&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.maartenbaert.be/simplescreenrecorder/&#34;&gt;https://www.maartenbaert.be/simplescreenrecorder/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;joplin&#34;&gt;Joplin&lt;/h2&gt;
&lt;p&gt;Um aplicativo de notas. Suporta Markdown, não te obriga a usar um editor WYSIWYG (mas se quiser, pode). Sincroniza entre vários dispositivos com um mecanismo de sua escolha (Dropbox, Nextcloud etc.). Tem suporte à criptografia.&lt;/p&gt;
&lt;p&gt;Em resumo, o Evernote se não fosse um produto insuportável de usar.&lt;/p&gt;
&lt;p&gt;Plataforma: Linux, macOS, Windows, Android e iOS. Licença: AGPLv3&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://joplinapp.org/&#34;&gt;https://joplinapp.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;funções-zz&#34;&gt;Funções ZZ&lt;/h2&gt;
&lt;p&gt;Uma coletânea de quase 200 programinhas de linha de comando.&lt;/p&gt;
&lt;p&gt;Tem função para cálculo de horas, geração de CPF, conversão para números romanos, geração de senhas, cálculo de porcentagens, consulta a Selic&amp;hellip; É coisa para caramba. Se prefere a objetividade da linha de comando, vale a pena uma olhada.&lt;/p&gt;
&lt;p&gt;Contribuí com umas 3 funções. :-)&lt;/p&gt;
&lt;p&gt;Plataforma: Linux, BSD, Cygwin, Mac OS X, entre outros. Licença: GPLv2&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://funcoeszz.net/&#34;&gt;https://funcoeszz.net/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;localsend&#34;&gt;LocalSend&lt;/h2&gt;
&lt;p&gt;Envio de arquivos entre 2 dispositivos numa rede local.&lt;/p&gt;
&lt;p&gt;Nada de subir arquivos para nuvens (a.k.a. computadores de outras pessoas) em outro país só para transferir um arquivo do seu PC para o seu celular.&lt;/p&gt;
&lt;p&gt;Abra o LocalSend, os dispositivos são encontrados automaticamente. Selecione os arquivos a serem enviados numa ponta, aceite na outra. Pronto.&lt;/p&gt;
&lt;p&gt;Plataforma: Linux, Windows, macOS, Android e iOS. Licença: Apache License 2.0&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://localsend.org/pt-BR&#34;&gt;https://localsend.org/pt-BR&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ddrescue&#34;&gt;ddrescue&lt;/h2&gt;
&lt;p&gt;Uma ferramenta de recuperação de dados. Permite clonar uma partição ou disco para um arquivo ou outra partição/disco.&lt;/p&gt;
&lt;p&gt;Tenta mais de uma leitura em caso de erros na leitura de um bloco. Segue tentando os demais blocos mesmo em caso de erros.&lt;/p&gt;
&lt;p&gt;Plataforma: Unix e seus amigos. Licença: GPLv2&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/ddrescue/&#34;&gt;https://www.gnu.org/software/ddrescue/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;anki&#34;&gt;Anki&lt;/h2&gt;
&lt;p&gt;Um programa para aprendizagem via flashcards. Gerencia a &lt;a href=&#34;https://pt.wikipedia.org/wiki/Curva_do_esquecimento&#34;&gt;curva de esquecimento&lt;/a&gt; para você por meio da técnica de repetição espaçada. Você classifica o quão fácil foi lembrar do conteúdo de um cartão e o programa define a data da próxima revisão.&lt;/p&gt;
&lt;p&gt;Existe a possibilidade de sincronizar com um serviço web (que também permite a revisão dos cartões), mas o uso é completamente opcional. Em nenhum momento o software te obriga a criar conta.&lt;/p&gt;
&lt;p&gt;Plataforma: Linux, macOS, Windows, Android, iOS e web.&lt;/p&gt;
&lt;p&gt;Licença:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no desktop (AGPLv3)&lt;/li&gt;
&lt;li&gt;no Android (GPLv3)&lt;/li&gt;
&lt;li&gt;no iOS (sei lá, mas custa 25 USD na loja)&lt;/li&gt;
&lt;li&gt;na web (O serviço oficial é de uso gratuito, mas não livre. Há uma alternativa livre para quem quiser fazer self hosting.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://apps.ankiweb.net/&#34;&gt;https://apps.ankiweb.net/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;freshrss&#34;&gt;FreshRSS&lt;/h2&gt;
&lt;p&gt;Um agregador RSS.&lt;/p&gt;
&lt;p&gt;Plataforma: pode ser hospedado num servidor Linux ou Windows com Apache 2.4+, nginx ou lighttpd. Licença: AGPLv3&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://freshrss.org/&#34;&gt;https://freshrss.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;yt-dlp&#34;&gt;yt-dlp&lt;/h2&gt;
&lt;p&gt;Um programa para download de áudio e vídeo com suporte a centenas de sites. O mais famoso é o YouTube.&lt;/p&gt;
&lt;p&gt;Para o YT, basta chamá-lo com o comando&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ yt-dlp &amp;#39;https://youtu.be/123456789AB&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Tem muito mais opções, esse é o uso básico.&lt;/p&gt;
&lt;p&gt;Plataforma: Linux, macOS, Windows. Licença: Unlicense License.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;https://github.com/yt-dlp/yt-dlp&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;newpipe&#34;&gt;NewPipe&lt;/h2&gt;
&lt;p&gt;Um cliente para o YouTube sem anúncios, sem Shorts e com funcionalidade de download dos vídeos.&lt;/p&gt;
&lt;p&gt;As únicas desvantagens que percebi é que me parece que a atualização do feed de inscrições demora um pouco mais que no app oficial e a ausência de algoritmo (diz-se que ele erra muito, mas no meu caso também acerta algumas vezes).&lt;/p&gt;
&lt;p&gt;Plataforma: Android. Licença: GPLv3&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://newpipe.net/&#34;&gt;https://newpipe.net/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;keepassxc&#34;&gt;KeePassXC&lt;/h2&gt;
&lt;p&gt;Gerenciador de senhas. Direto ao ponto, gera e armazena senhas seguras para você. Não tenta fazer você criar conta num serviço de sincronização na nuvem nem nada. Escreve um arquivo criptografado, se você quiser colocar num Dropbox da vida, é com você. Se quiser ter uma cópia só do arquivo sem backup nenhum, é com você também.&lt;/p&gt;
&lt;p&gt;Plataforma: Linux, macOS, Windows. Licença: GPLv3&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://keepassxc.org/&#34;&gt;https://keepassxc.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;hugo&#34;&gt;Hugo&lt;/h2&gt;
&lt;p&gt;Um gerador de sites estáticos. Existem centenas de geradores, só sosseguei num deles depois de conhecer o Hugo.&lt;/p&gt;
&lt;p&gt;É bem poderoso, pode ser confuso tentar entender tudo dele de uma vez só.&lt;/p&gt;
&lt;p&gt;Recomendo fazer um site que começa simples e vai ficando mais complexo aos poucos. Essa é a abordagem do livro &amp;ldquo;&lt;a href=&#34;https://www.gmgall.net/books/build-websites-with-hugo/&#34;&gt;Build Websites With Hugo&lt;/a&gt;&amp;rdquo; que me ensinou a maior parte do que sei do software.&lt;/p&gt;
&lt;p&gt;Plataforma: Linux, BSD, macOS e Windows. Licença: Apache 2.0&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;https://gohugo.io/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;httpie&#34;&gt;httpie&lt;/h2&gt;
&lt;p&gt;Cliente HTTP para linha de comando.&lt;/p&gt;
&lt;p&gt;O curl é um baixa software, mas pode ser chato usá-lo para testar APIs REST. Eu uso principalmente o httpie para isso.&lt;/p&gt;
&lt;p&gt;Na imagem há um gif mostrando como as respostas aparecem. Tirei do github do projeto.&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://raw.githubusercontent.com/httpie/cli/master/docs/httpie-animation.gif&#34; alt=&#34;Uso do httpie no terminal. É feito uma requisição GET e uma PUT.&#34; /&gt;
&lt;/figure&gt;


&lt;/p&gt;
&lt;p&gt;Plataforma: Linux, BSD, macOS, Windows. Licença: BSD 3&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://httpie.io/docs/cli/&#34;&gt;https://httpie.io/docs/cli/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;monolith&#34;&gt;monolith&lt;/h2&gt;
&lt;p&gt;Salve páginas web num único arquivo HTML.&lt;/p&gt;
&lt;p&gt;Use&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ monolith &amp;#39;http://example.com&amp;#39; -o arquivo.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;e tenha em &lt;code&gt;arquivo.html&lt;/code&gt; tudo que um browser precisa para renderizar a página.&lt;/p&gt;
&lt;p&gt;CSS, imagens e JS estarão embutidos em &lt;code&gt;arquivo.html&lt;/code&gt;, facilitando salvar e compartilhar uma página.&lt;/p&gt;
&lt;p&gt;Plataforma: Linux, BSD, Windows. Licença: CC0 1.0&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Y2Z/monolith&#34;&gt;https://github.com/Y2Z/monolith&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;vsv&#34;&gt;vsv&lt;/h2&gt;
&lt;p&gt;Um gerenciador de serviços para o Void Linux (teoricamente funciona em qualquer distro que usa &lt;a href=&#34;https://smarden.org/runit/&#34;&gt;runit&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Permite uma visão única de que serviços estão ativos. se normalmente eles bootam ativados, qual PID etc.&lt;/p&gt;
&lt;p&gt;A saída é colorida e bem formatada.&lt;/p&gt;
&lt;p&gt;Plataforma: Linux. Licença: MIT&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bahamas10/vsv&#34;&gt;https://github.com/bahamas10/vsv&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Acho que vou passar a usar &amp;ldquo;Federação&amp;rdquo; no lugar de &amp;ldquo;&lt;a href=&#34;https://fedi.tips/what-is-mastodon-what-is-the-fediverse/&#34;&gt;Fediverso&lt;/a&gt;&amp;rdquo;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Windows 95 no QEMU</title>
      <link>https://gmgall.net/blog/windows-95-qemu/</link>
      <pubDate>Wed, 21 Aug 2024 20:38:14 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/windows-95-qemu/</guid>
      <description>&lt;p&gt;Quem acompanhou minha &lt;a href=&#34;https://www.collinsdictionary.com/dictionary/english/down-memory-lane&#34;&gt;viagem estrada da saudade abaixo&lt;/a&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; com a &lt;a href=&#34;https://gmgall.net/blog/nao-olho-mais-para-as-estrelas/&#34;&gt;Enciclopédia do Espaço e do Universo&lt;/a&gt; viu algumas capturas de tela de um programa Windows de 16 bits.&lt;/p&gt;
&lt;p&gt;Ele não funcionou no &lt;a href=&#34;https://www.winehq.org/&#34;&gt;Wine&lt;/a&gt; ou no &lt;a href=&#34;https://www.dosbox.com/&#34;&gt;DOSBox&lt;/a&gt;. Nenhum Windows moderno executa mais esses programas&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;. Precisei partir para emular uma instalação completa do Windows 95. Decidi fazer com o &lt;a href=&#34;https://www.qemu.org/&#34;&gt;QEMU&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Há &lt;a href=&#34;https://wiki.qemu.org/Documentation/GuestOperatingSystems/Windows95&#34;&gt;mais&lt;/a&gt; de um &lt;a href=&#34;https://computernewb.com/wiki/QEMU/Guests/Windows_95&#34;&gt;guia&lt;/a&gt; de como fazer essa instalação na &lt;em&gt;web&lt;/em&gt;, mas na minha experiência nenhum deles funcionou exatamente como descrito. Foi um processo que demandou uma boa quantidade de tentativa e erro. Testei muitas &lt;em&gt;flags&lt;/em&gt; do comando &lt;code&gt;qemu-system-i386&lt;/code&gt; e muitos &lt;em&gt;drivers&lt;/em&gt; no sistema convidado diferentes.&lt;/p&gt;
&lt;p&gt;Não vou nem fingir que isso é um tutorial porque eu não imaginava que seria necessário futucar&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; tanto na instalação quando comecei. Não anotei meus passos de forma muito organizada. Abaixo vou meramente listar algumas coisas que acho úteis ter em mente caso eu decida repetir uma instalação dessas. Se for útil para mais alguém, excelente.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;win95_version.png&#34;
         alt=&#34;Janela &amp;#34;Propriedades Sistema&amp;#34; do Windows 95. Ela mostra a versão do Windows, do IE, o Processador e a quantidade de memória RAM instalada.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;A versão do Windows 95 que instalei.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;fat-16-ou-32&#34;&gt;FAT 16 ou 32?&lt;/h2&gt;
&lt;p&gt;Cuidado ao formatar a partição que vai receber o sistema. O Windows 95 não suporta FAT 32 em todas as versões lançadas. A que eu instalei, 4.00.950, não suporta.&lt;/p&gt;
&lt;h2 id=&#34;cpus-modernas-podem-operar-numa-frequência-alta-demais-para-o-windows-95&#34;&gt;CPUs modernas podem operar numa frequência alta demais para o Windows 95&lt;/h2&gt;
&lt;p&gt;Se o Windows travar em todo &lt;em&gt;boot&lt;/em&gt; pós-instalação, pode ser que a frequência de operação do seu processador seja elevada demais para ele. Há um &lt;a href=&#34;https://archive.org/details/fix-95-cpu-v3-final&#34;&gt;&lt;em&gt;patch&lt;/em&gt; para isso no Internet Archive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O erro se não me engano é &lt;code&gt;Windows Protection Error. You need to restart your computer.&lt;/code&gt;. No meu caso acho que estava localizado, recebi um &lt;code&gt;Erro de Proteção do Windows&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;o-cd-do-windows-95-não-é-bootável&#34;&gt;O CD do Windows 95 não é &lt;em&gt;bootável&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;É necessário primeiro &lt;em&gt;bootar&lt;/em&gt; via disquete no MS-DOS, &lt;strong&gt;depois&lt;/strong&gt; executar &lt;code&gt;D:\SETUP.EXE&lt;/code&gt; ou &lt;code&gt;D:\INSTALAR.EXE&lt;/code&gt;, supondo que &lt;code&gt;D:&lt;/code&gt; seja sua unidade de CD-ROM.&lt;/p&gt;
&lt;p&gt;Uma imagem de disquete está disponível &lt;a href=&#34;https://winworldpc.com/product/microsoft-windows-boot-disk/95-osr2x&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Um menu será apresentado ao &lt;em&gt;bootar&lt;/em&gt; com esse disquete. Tive sucesso em iniciar uma instalação com a 1ª opção.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;win95_boot_floppy.png&#34;
         alt=&#34;Janela do QEMU mostrando o menu apresentado pelo disquete de boot. Há 5 opções. As 4 primeiras carregam diferentes drivers de unidade CD-ROM. A última é &amp;#34;No CDROM support&amp;#34;. Consegui fazer funcionar usando a opção 1.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Menu apresentado pelo disquete de boot.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;sound-blaster-16-produz-áudio-picotado&#34;&gt;Sound Blaster 16 produz áudio &amp;ldquo;picotado&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;Ambas as wikis que referenciei acima recomendam usar a Sound Blaster 16 como placa de áudio da máquina virtual. Não tive sucesso com ela. Ela instalou, mas o som saía como no vídeo abaixo.&lt;/p&gt;
&lt;video width=&#34;720&#34; height=&#34;480&#34; controls title=&#34;Áudio falhando na máquina virtual com placa Sound Blaster 16.&#34; aria-label=&#34;Vídeo com captura de tela de um desktop XFCE. Do lado esquerdo aparece um emulador de terminal com um comando que executa uma máquina virtual QEMU. Do lado direito, há a tela da máquina virtual em si. Dentro da máquina virtual, o cursor vai no menu Iniciar, depois em Documentos. Um arquivo de áudio é selecionado. O player abre e o som é reproduzido, mas não perfeitamente.&#34;&gt;
&lt;source src=&#34;qemu_win95_audio_fail.mp4&#34; type=&#34;video/mp4&#34;&gt;&lt;/source&gt;
&lt;/video&gt;
&lt;p&gt;A &lt;strong&gt;Realtek AC97&lt;/strong&gt; produziu áudio limpo, mas não era detectada imediatamente. Leia o ponto abaixo.&lt;/p&gt;
&lt;h2 id=&#34;instalar-o-pci-bus-fez-muitos-dispositivos-serem-detectados-automaticamente&#34;&gt;Instalar o &lt;code&gt;PCI bus&lt;/code&gt; fez muitos dispositivos serem detectados automaticamente&lt;/h2&gt;
&lt;p&gt;Essa foi uma dica que colocou muita coisa para funcionar. Infelizmente estava num &lt;a href=&#34;https://youtu.be/dt67xEXoqRY&#34;&gt;vídeo&lt;/a&gt; e não num texto, foi mais difícil de achar. Coisas da &lt;a href=&#34;https://thewebisfucked.com/&#34;&gt;&lt;em&gt;web&lt;/em&gt; moderna&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O trecho com o &amp;ldquo;pulo do gato&amp;rdquo; está abaixo:&lt;/p&gt;
&lt;video width=&#34;720&#34; height=&#34;480&#34; controls title=&#34;Instalação do &amp;#34;PCI bus&amp;#34; numa máquina virtual com Windows 98.&#34; aria-label=&#34;Trecho de vídeo que ensina como instalar o driver do &amp;#34;PCI bus&amp;#34; numa máquina virtual com Windows 98. O processo funcionou igual no 95 para mim. Há uma descrição textual do que é feito abaixo desse vídeo.&#34;&gt;
&lt;source src=&#34;pci_bus.mp4&#34; type=&#34;video/mp4&#34;&gt;&lt;/source&gt;
&lt;/video&gt;
&lt;p&gt;Textualmente: clique com o botão direito em &lt;code&gt;Meu Computador&lt;/code&gt;. Na janela que vai se abrir, clique na aba &lt;code&gt;Gerenciador de Dispositivos&lt;/code&gt;. Em &lt;code&gt;Dispositivos do sistema&lt;/code&gt;, o dispositivo &lt;code&gt;BIOS Plug and Play&lt;/code&gt; estará marcado com uma exclamação amarela. Dê um duplo clique sobre ele e na aba &lt;code&gt;Driver&lt;/code&gt; clique no botão &lt;code&gt;Atualizar driver&lt;/code&gt;. No assistente que vai abrir, selecione que deseja escolher o &lt;em&gt;driver&lt;/em&gt; de uma lista. Marque que quer exibir todos os &lt;em&gt;drivers&lt;/em&gt; e escolha o &lt;em&gt;driver&lt;/em&gt; &lt;code&gt;PCI bus&lt;/code&gt;. Siga com o assistente de instalação de &lt;em&gt;drivers&lt;/em&gt; até o final do processo. Aceite a reinicialização do computador. Após reiniciar, vários dispositivos serão detectados automaticamente.&lt;/p&gt;
&lt;h2 id=&#34;verificar-o-endereço-ip&#34;&gt;Verificar o endereço IP&lt;/h2&gt;
&lt;p&gt;O programa que mostra o endereço IP, a máscara de sub-rede e o &lt;em&gt;gateway&lt;/em&gt; padrão no Windows 95 é o &lt;code&gt;winipcfg&lt;/code&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;winipcfg.png&#34;
         alt=&#34;Programa winipcfg do Windows 95. É uma pequena janela com o endereço MAC da placa de rede, o endereço IP da interface, a máscara de sub-rede e o gateway padrão. Abaixo dessas informações há os botões &amp;#34;OK&amp;#34;, &amp;#34;Liberar&amp;#34;, &amp;#34;Renovar&amp;#34;, &amp;#34;Liberar tudo&amp;#34;, &amp;#34;Renovar tudo&amp;#34; e &amp;#34;Mais informações&amp;#34;.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Programa winipcfg do Windows 95.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;solucionar-erro-após-desinstalação-de-cliente-novell-netware&#34;&gt;Solucionar erro após desinstalação de cliente Novell NetWare&lt;/h2&gt;
&lt;p&gt;Após desinstalar o cliente Novell NetWare, é possível que você receba um erro como &lt;code&gt;The NetWare-compatible shell is not available&lt;/code&gt; antes de cada login. A solução para isso está detalhada &lt;a href=&#34;https://kb.iu.edu/d/acyl&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;a-linha-de-comando-do-qemu&#34;&gt;A linha de comando do QEMU&lt;/h2&gt;
&lt;p&gt;Com a instalação finalmente funcional, executo a máquina virtual com o seguinte comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;qemu-system-i386 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-netdev user,id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mynet0 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-device pcnet,netdev&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mynet0 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-hda ~/win95.qcow2 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-m &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-cpu pentium &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-cdrom Win95PTBR_201902/Win95_PTBR.iso &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-boot c &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-device cirrus-vga &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-device ac97,id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;snd1 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-audio pipewire,id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;snd1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;win95.qcow2&lt;/code&gt; é um arquivo de imagem de disco criado com o comando &lt;code&gt;qemu-img&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;drivers-úteis&#34;&gt;Drivers úteis&lt;/h2&gt;
&lt;p&gt;2 listas de &lt;em&gt;drivers&lt;/em&gt; que funcionam bem com os dispositivos virtuais que o QEMU oferece ao Windows 95 convidado:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.claunia.com/qemu/drivers/index.html&#34;&gt;Drivers 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drive.google.com/file/d/1ERRWMfL6DTSbShBa0NS1xWTKJ-mNjnCf/&#34;&gt;Drivers 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Peço perdão por essa tortura do vernáculo.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Creio que a versão mais &amp;ldquo;moderna&amp;rdquo; capaz de executar programas de 16 bits é o XP.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Quase usei um &lt;em&gt;tinkering&lt;/em&gt; aqui, mas prometi que não teria mais tortura nesse texto.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Estruturas de Dados e Algoritmos Com JavaScript</title>
      <link>https://gmgall.net/books/estruturas-de-dados-e-algoritmos-com-js/</link>
      <pubDate>Thu, 15 Aug 2024 11:16:57 -0300</pubDate>
      
      <guid>https://gmgall.net/books/estruturas-de-dados-e-algoritmos-com-js/</guid>
      <description>&lt;p&gt;Esse livro estava ainda embalado numa prateleira aqui. Como trata de assuntos fundamentais da Ciência da Computação que queria revisar e que caem sempre em &lt;a href=&#34;https://gmgall.net/blog/fiz-um-concurso-e-olha-no-que-deu/&#34;&gt;concursos&lt;/a&gt;, resolvi passá-lo à frente da lista de leituras.&lt;/p&gt;
&lt;p&gt;Acho que não tem muito mistério no que um livro sobre estruturas de dados e algoritmos trata. A dúvida fica mais no quão abrangente ele decide ser. A lista de capítulos dá uma ideia:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Capítulo 1 ■ JavaScript – uma visão geral rápida
Capítulo 2 ■ Visão geral sobre ECMAScript e TypeScript
Capítulo 3 ■ Arrays
Capítulo 4 ■ Pilhas
Capítulo 5 ■ Filas e deques
Capítulo 6 ■ Listas ligadas
Capítulo 7 ■ Conjuntos
Capítulo 8 ■ Dicionários e hashes
Capítulo 9 ■ Recursão
Capítulo 10 ■ Árvores
Capítulo 11 ■ Heap binário e heap sort
Capítulo 12 ■ Grafos
Capítulo 13 ■ Algoritmos de ordenação e de busca
Capítulo 14 ■ Designs de algoritmos e técnicas
Capítulo 15 ■ Complexidade de algoritmos
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Se desejar ver o &lt;a href=&#34;https://s3.novatec.com.br/sumarios/sumario-9788575226933.pdf&#34;&gt;sumário mais detalhado em PDF&lt;/a&gt;, ele está disponível no site da editora.&lt;/p&gt;
&lt;p&gt;Mais interessante do que falar do que é abordado, é falar de &lt;strong&gt;como&lt;/strong&gt; é abordado. Eu gostei bastante de como a autora decidiu explicar os assuntos.&lt;/p&gt;
&lt;p&gt;Por exemplo, no capítulo sobre listas encadeadas há a seguinte figura:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;lista-ligada.jpg&#34;
         alt=&#34;Imagem que representa a adição de um elemento numa lista ligada. Cada elemento é um retângulo dividido em 2 seções. Uma maior, no lado esquerdo, com o valor do elemento em si e outra menor, no lado direito com um ponteiro para o próximo elemento. O ponteiro é uma seta apontando da seção direita do retângulo para o próximo retângulo. A imagem mostra uma lista já existente, com 4 elementos e as manipulações de ponteiros necessárias para adicionar um quinto elemento.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Figura 6.10 do livro &amp;#34;Estruturas de dados e algoritmos em JavaScript&amp;#34;.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A figura representa a adição de um elemento no meio de uma lista, com as manipulações de referências necessárias. Aqueles números que aparecem entre colchetes (&lt;code&gt;{3}&lt;/code&gt;, &lt;code&gt;{4}&lt;/code&gt;, &lt;code&gt;{5}&lt;/code&gt; e &lt;code&gt;{6}&lt;/code&gt;) aparecem também no texto corrido e nos comentários dos códigos listados.&lt;/p&gt;
&lt;p&gt;É possível correr os olhos do texto para o código ou para a figura. Ou da figura para o trecho de código específico. Na maior parte do livro, há todo um cuidado em não deixar um conceito explicado só por texto, só por código JS ou só por figuras. Gostei bastante disso.&lt;/p&gt;
&lt;p&gt;Os capítulos 13 e 14 talvez sejam os mais difíceis de acompanhar. Procurei videoaulas após ler sobre alguns algoritmos. Nem sempre só figuras são suficientes para simplificar o que está acontecendo. Sinto-me tentado a dizer que são capítulos ligeiramente mais corridos que os demais, mas acho que é da natureza do assunto mesmo. Ver o algoritmo &amp;ldquo;animado&amp;rdquo; pode ser mais simples do que ver suas etapas estáticas numa folha de papel.&lt;/p&gt;
&lt;p&gt;No geral, gostei bastante desse livro. Vou voltar a ele no futuro.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pós-instalação Void Linux</title>
      <link>https://gmgall.net/blog/pos-instalacao-void-linux/</link>
      <pubDate>Wed, 24 Jul 2024 21:36:23 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/pos-instalacao-void-linux/</guid>
      <description>&lt;p&gt;Estou usando o &lt;a href=&#34;https://voidlinux.org/&#34;&gt;Void Linux&lt;/a&gt; como SO principal agora. Estou bem satisfeito com ele por enquanto, mas como toda distribuição minimalista, há intervenções que precisei fazer após terminar a instalação para ter um desktop totalmente funcional.&lt;/p&gt;
&lt;p&gt;Listarei essas intervenções abaixo para minha&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; própria referência futura. Parti da imagem com &lt;a href=&#34;https://xfce.org/&#34;&gt;XFCE&lt;/a&gt; + &lt;code&gt;glibc&lt;/code&gt;. Baixei a ISO em 17/07/2024&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;h2 id=&#34;impedir-o-carregamento-do-módulo-nouveau&#34;&gt;Impedir o carregamento do módulo nouveau&lt;/h2&gt;
&lt;p&gt;O &lt;em&gt;boot&lt;/em&gt; estava demorando mais que o normal. A seguinte mensagem aparecia:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;udevd[674]: worker [681] /devices/pci0000:00/0000:00:1c.0/0000:01:00.0 is taking a long time
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O processo de desligamento e &lt;em&gt;reboot&lt;/em&gt; causava travamento.&lt;/p&gt;
&lt;p&gt;Impedir o carregamento do módulo do &lt;em&gt;kernel&lt;/em&gt; &lt;code&gt;nouveau&lt;/code&gt; resolveu esses problemas.&lt;/p&gt;
&lt;p&gt;Em &lt;code&gt;/etc/default/grub&lt;/code&gt; adicionei &lt;code&gt;module_blacklist=nouveau&lt;/code&gt; ao valor da variável &lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grep GRUB_CMDLINE_LINUX_DEFAULT /etc/default/grub 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;loglevel=4 module_blacklist=nouveau&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mudar-o-mirror&#34;&gt;Mudar o &lt;em&gt;mirror&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Nem sempre o &lt;em&gt;mirror&lt;/em&gt; principal do Void é o mais rápido. Acho que ele fica na Europa. &lt;a href=&#34;https://docs.voidlinux.org/xbps/repositories/mirrors/changing.html&#34;&gt;Mudar para o &lt;em&gt;mirror&lt;/em&gt;&lt;/a&gt; de Chicago pode melhorar os tempos de download de pacotes. A forma mais fácil de mudar de &lt;em&gt;mirror&lt;/em&gt; é usando o comando &lt;code&gt;xmirror&lt;/code&gt;, disponibilizado no pacote de mesmo nome.&lt;/p&gt;
&lt;h2 id=&#34;configurar-o-layout-de-teclado-no-xfce&#34;&gt;Configurar o &lt;em&gt;layout&lt;/em&gt; de teclado no XFCE&lt;/h2&gt;
&lt;p&gt;As configurações de idioma e &lt;em&gt;layout&lt;/em&gt; de teclado do programa &lt;code&gt;void-installer&lt;/code&gt; funcionam para o modo texto. No ambiente gráfico, executei o seguinte para mudar o &lt;em&gt;layout&lt;/em&gt; da sessão corrente, de forma não persistente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setxkbmap -model abnt2 -layout br
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;E criei o arquivo &lt;code&gt;/etc/X11/xorg.conf.d/30-keyboard.conf&lt;/code&gt; com o conteúdo seguinte para manter as configurações permanentes:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Section &amp;#34;InputClass&amp;#34;
  Identifier &amp;#34;keyboard-all&amp;#34;
  Driver &amp;#34;evdev&amp;#34;
  MatchIsKeyboard &amp;#34;on&amp;#34;
  Option &amp;#34;XkbLayout&amp;#34; &amp;#34;br&amp;#34;
EndSection
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;instalar-fontes-extras&#34;&gt;Instalar fontes extras&lt;/h2&gt;
&lt;p&gt;Todas as fontes presentes pós-instalação permitem ler textos em português e inglês sem problemas. Para evitar ver quadradinhos ao exibir &lt;strike&gt;emoticons&lt;/strike&gt;
 textos em outros alfabetos, instalei outras fontes.&lt;/p&gt;
&lt;p&gt;Os pacotes que instalei foram &lt;code&gt;noto-fonts-ttf&lt;/code&gt;, &lt;code&gt;noto-fonts-emoji&lt;/code&gt; e &lt;code&gt;noto-fonts-cjk&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xbps-install noto-fonts-ttf noto-fonts-emoji noto-fonts-cjk
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;instalar-pacotes-para-fazer-funcionar-fones-bluetooth&#34;&gt;Instalar pacotes para fazer funcionar fones Bluetooth&lt;/h2&gt;
&lt;p&gt;Contei recentemente &lt;a href=&#34;https://gmgall.net/blog/premissas-erradas-pipewire-e-bluetooth/&#34;&gt;esse causo&lt;/a&gt; aqui. A imagem do Void Linux com XFCE usa PipeWire e não PulseAudio.&lt;/p&gt;
&lt;p&gt;Para parear com fones ou caixas de som Bluetooth, é necessária a instalação de um pacote.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xbps-install libspa-bluetooth
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;⚠️  Não se deixe enganar pelo nome do &lt;em&gt;mixer&lt;/em&gt; de áudio no XFCE. Ao &lt;em&gt;bootar&lt;/em&gt; com a imagem com XFCE, é o PipeWire que estará em uso.&lt;/p&gt;
&lt;h2 id=&#34;instalar-anki-flashcards-do-site-não-dos-repositórios&#34;&gt;Instalar Anki Flashcards do site, não dos repositórios&lt;/h2&gt;
&lt;p&gt;A versão empacotada nos repositórios do Void não é tão nova quanto a versão disponibilizada &lt;a href=&#34;https://apps.ankiweb.net/&#34;&gt;no site&lt;/a&gt;. Acho que a dos repositórios não sincronizava direito com o &lt;a href=&#34;https://ankiweb.net/&#34;&gt;AnkiWeb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Escrevo &amp;ldquo;acho&amp;rdquo; acima porque a única nota que fiz sobre o assunto foi &amp;ldquo;instale do site, não do repo&amp;rdquo; e agora não lembro mais o motivo exato de ter escrito isso.🫏&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Ou de meus eventuais leitores, que só tenho como ter certeza que existem quando comentam.🙃 Não uso nenhum mecanismo de rastreamento nesse site.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;É uma distribuição com &lt;em&gt;rolling release&lt;/em&gt; e não sei com que frequência eles constroem uma nova ISO para disponibilizar para download.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Premissas Erradas, PipeWire e Bluetooth</title>
      <link>https://gmgall.net/blog/premissas-erradas-pipewire-e-bluetooth/</link>
      <pubDate>Mon, 22 Jul 2024 16:29:53 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/premissas-erradas-pipewire-e-bluetooth/</guid>
      <description>&lt;p&gt;Esse final de semana relembrei que pode ser elevado o custo de partir de premissas erradas e não gastar nem 5 minutinhos verificando a validade delas. Marquei com &lt;a href=&#34;https://gmgall.net/categories/tech/&#34;&gt;tech&lt;/a&gt; e &lt;a href=&#34;https://gmgall.net/categories/non-tech/&#34;&gt;non-tech&lt;/a&gt; porque honestamente acho que isso é uma lição tanto na área técnica quanto para a vida.😅&lt;/p&gt;
&lt;p&gt;Após um desastre na partição em que mantinha meu &lt;a href=&#34;https://xubuntu.org/&#34;&gt;SO principal&lt;/a&gt;, resolvi aproveitar a oportunidade da reinstalação para finalmente testar outra distro. Estava incomodado com os rumos de Ubuntu e derivados já há algum tempo, mas a preguiça vencia a insatisfação e eu não trocava.&lt;/p&gt;
&lt;p&gt;Queria testar algo sem &lt;a href=&#34;https://systemd.io/&#34;&gt;systemd&lt;/a&gt;, mais minimalista e em que eu me sentisse no controle do SO de novo. Uma distro em que eu entendesse melhor que estava acontecendo. Fiquei entre &lt;a href=&#34;https://archlinux.org/&#34;&gt;Arch&lt;/a&gt;, &lt;a href=&#34;https://www.gentoo.org/&#34;&gt;Gentoo&lt;/a&gt; e &lt;a href=&#34;https://voidlinux.org/&#34;&gt;Void&lt;/a&gt;. Acabei escolhendo esse último e as primeiras impressões têm sido excelentes.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&#34;https://docs.voidlinux.org/&#34;&gt;documentação do Void Linux&lt;/a&gt;, apesar de menor que a disponível nas excelentes wikis de &lt;a href=&#34;https://wiki.gentoo.org/wiki/Main_Page&#34;&gt;Gentoo&lt;/a&gt; e &lt;a href=&#34;https://wiki.archlinux.org/title/Main_page&#34;&gt;Arch&lt;/a&gt;, tem tudo para você terminar com um desktop funcional. Ao menos foi minha experiência partindo da imagem do Void + XFCE.&lt;/p&gt;
&lt;p&gt;Só uma coisa não consegui fazer funcionar após a 1ª leitura do tópico correspondente na documentação oficial: Bluetooth. Meus fones pareavam por 1 ou 2 segundos e desconectavam logo em seguida. Confirmei que meu adaptador e fones funcionavam sem problemas testando no &lt;a href=&#34;https://minios.dev/pt/&#34;&gt;MiniOS&lt;/a&gt; (um sabor de Debian). Era só no Void que eu não conseguia parear. Áudio era reproduzido nos alto-falantes, então &lt;em&gt;não podia&lt;/em&gt; ser o &lt;a href=&#34;https://en.wikipedia.org/wiki/Sound_server&#34;&gt;&lt;em&gt;sound server&lt;/em&gt;&lt;/a&gt;, &lt;em&gt;tinha&lt;/em&gt; que ser Bluetooth.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&#34;https://docs.voidlinux.org/config/bluetooth.html&#34;&gt;documentação sobre o assunto&lt;/a&gt; é bem direta:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To use an audio device such as a wireless speaker or headset, ALSA users need to install the bluez-alsa package. PulseAudio users do not need any additional software. PipeWire users need libspa-bluetooth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure&gt;&lt;img src=&#34;captura_de_tela_2024-07-22_00-22-59.png&#34;
         alt=&#34;Menu &amp;#39;Aplicativos&amp;#39; do XFCE. No submenu &amp;#39;Multimídia&amp;#39; há um aplicativo chamado &amp;#39;Controle de volume do PulseAudio&amp;#39;.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Esse mixer funciona. Eu obviamente estou usando PulseAudio, certo?&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Se eu uso PulseAudio, não deveria precisar de mais nada. &lt;em&gt;Tinha&lt;/em&gt; que ser Bluetooth.&lt;/p&gt;
&lt;p&gt;Parti então para tentar deixar as versões dos softwares instalados no Void iguais às dos softwares instalados no MiniOS (que eu sabia que funcionava). Devia ser alguma regressão. Fiz &lt;em&gt;build&lt;/em&gt; do meu próprio pacote do &lt;a href=&#34;https://www.bluez.org/&#34;&gt;BlueZ&lt;/a&gt; para poder fazer &lt;em&gt;downgrade&lt;/em&gt; da versão 5.76 para a 5.66, instalei outras 2 ou 3 versões de kernel e gastei um bom tempo em &lt;em&gt;issues&lt;/em&gt; do GitHub, listas de discussão, fóruns etc.&lt;/p&gt;
&lt;p&gt;Mesmo resultado. Pareava por apenas uns instantes.🤦‍♂️&lt;/p&gt;
&lt;p&gt;Desisti de executar o &lt;code&gt;bluetoothd&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; como serviço. Rodei o executável diretamente num &lt;em&gt;shell&lt;/em&gt; com as &lt;em&gt;flags&lt;/em&gt; &lt;a href=&#34;https://man.voidlinux.org/bluetoothd#n&#34;&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/a&gt; e &lt;a href=&#34;https://man.voidlinux.org/bluetoothd#d,&#34;&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/a&gt; enquanto tentava parear para ver se eu recebia alguma &amp;ldquo;luz&amp;rdquo; melhor que as mensagens de erro do &lt;a href=&#34;https://man.voidlinux.org/bluetoothctl&#34;&gt;&lt;code&gt;bluetoothctl&lt;/code&gt;&lt;/a&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Eis que em algum ponto durante os breves instantes de pareamento, aparece algo como a mensagem abaixo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;a2dp-sink profile connect failed for 60:F4:3A:70:E4:0B: Protocol not available
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_Bluetooth_profiles#Advanced_Audio_Distribution_Profile_%28A2DP%29&#34;&gt;A2DP&lt;/a&gt; tem a ver com áudio&amp;hellip; E se aconteceu o seguinte?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;O dispositivo pareava.&lt;/li&gt;
&lt;li&gt;Ele tentava se registrar como um dispositivo capaz de A2DP de alguma forma.&lt;/li&gt;
&lt;li&gt;O &lt;em&gt;sound server&lt;/em&gt; não suportava esse perfil.&lt;/li&gt;
&lt;li&gt;O dispositivo se desconectava porque não tinha mais o que ser feito.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Foi minha hipótese naquele momento, mas isso implicaria em erro na documentação do Void, que dizia claramente &lt;em&gt;PulseAudio users do not need any additional software.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mas e se&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pgrep -a pipewire
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1188&lt;/span&gt; pipewire
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1233&lt;/span&gt; /usr/bin/pipewire -c pipewire-pulse.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eu estava, afinal, com o &lt;a href=&#34;https://pipewire.org/&#34;&gt;PipeWire&lt;/a&gt; instalado e rodando.🤡&lt;/p&gt;
&lt;p&gt;Matei o processo, o som parou. Era o PipeWire em uso mesmo.🤡🤡&lt;/p&gt;
&lt;p&gt;Voltei à documentação, àquele único parágrafo. &lt;em&gt;PipeWire users need &lt;code&gt;libspa-bluetooth&lt;/code&gt;&lt;/em&gt;. Instalei o pacote. Passou a parear e a reproduzir áudio nos fones tão logo reiniciei os serviços.🤡🤡🤡&lt;/p&gt;
&lt;p&gt;Por não ter conferido o que eu estava &lt;strong&gt;realmente&lt;/strong&gt;&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; usando para áudio, &amp;ldquo;botei a culpa&amp;rdquo; no subsistema errado e enveredei por um caminho que me tomou várias horas. Verificar levaria só alguns segundos.&lt;/p&gt;
&lt;p&gt;Acho que a moral da história é: especialmente se for rápido e barato, cheque suas premissas.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;É preciso ter dúvidas. Só os estúpidos têm uma confiança absoluta em si mesmos.&lt;/p&gt;
&lt;p&gt;&amp;ndash; Orson Welles&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;O &lt;em&gt;daemon&lt;/em&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Uma ferramenta de CLI de controle de Bluetooth.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;A bem da verdade, o nome do &lt;em&gt;mixer&lt;/em&gt; do XFCE ser &amp;ldquo;Controle de volume &lt;strong&gt;do PulseAudio&lt;/strong&gt;&amp;rdquo;, me induziu bastante ao erro. Não muda o fato que conferir levaria literalmente apenas alguns segundos.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Automatizando Blogroll Com OPML</title>
      <link>https://gmgall.net/blog/automatizando-blogroll-com-opml/</link>
      <pubDate>Wed, 24 Jan 2024 20:51:04 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/automatizando-blogroll-com-opml/</guid>
      <description>&lt;p&gt;TL;DR&lt;/p&gt;
&lt;p&gt;Gero o meu &lt;a href=&#34;https://gmgall.net/blogroll/&#34;&gt;blogroll&lt;/a&gt; a partir de um OPML gerado pelo meu agregador RSS. São 4 etapas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Gerar o OPML no agregador.&lt;/li&gt;
&lt;li&gt;Filtrar para manter apenas as categorias desejadas no OPML.&lt;/li&gt;
&lt;li&gt;Escrever um &lt;em&gt;shortcode&lt;/em&gt; do Hugo que renderiza o &lt;em&gt;blogroll&lt;/em&gt; a partir do OPML.&lt;/li&gt;
&lt;li&gt;Baixar o arquivo OPML para os diretórios corretos do Hugo antes de gerar o site.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Mais detalhes abaixo.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Há uma &lt;a href=&#34;https://liaamancio.com.br/2024/01/07/blogroll-como-no-tempo-da-internet-arte-internet-moleque/&#34;&gt;tendência&lt;/a&gt; &lt;a href=&#34;https://www.lireo.com/bringing-back-the-blogroll/&#34;&gt;recente&lt;/a&gt; &lt;a href=&#34;https://blog.cadusilva.com/blogroll&#34;&gt;interessante&lt;/a&gt; em sites pessoais e blogs: o ressurgimento dos &lt;em&gt;blogrolls&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Acho uma ideia excelente, uma forma de &lt;a href=&#34;https://tomcritchlow.com/2022/04/21/new-rss/&#34;&gt;aumentar a área de superfície do &lt;em&gt;blogging&lt;/em&gt;&lt;/a&gt;, de fazer as pessoas descobrirem mais conteúdo em sites pessoais.&lt;/p&gt;
&lt;p&gt;Fiz um &lt;a href=&#34;https://gmgall.net/blogroll/&#34;&gt;blogroll para chamar de meu também&lt;/a&gt;, mas a forma como gero o meu não é manual. Como leio a Indie Web principalmente por &lt;a href=&#34;https://gmgall.net/tags/rss/&#34;&gt;RSS&lt;/a&gt;, pensei em oferecer também um link para um arquivo &lt;a href=&#34;http://opml.org/&#34;&gt;OPML&lt;/a&gt; com os &lt;em&gt;feeds&lt;/em&gt; dos sites no &lt;em&gt;blogroll&lt;/em&gt; para que fosse possível subscrição em todos os sites de uma vez só.&lt;/p&gt;
&lt;p&gt;Penso que essa possibilidade é uma boa para quem está conhecendo RSS só agora ou perdeu o hábito de acompanhar as atualizações dos sites por um agregador (olá, viúvas do Google Reader, tudo bem por aí? 👋).&lt;/p&gt;
&lt;p&gt;O &lt;strong&gt;1º passo&lt;/strong&gt; para gerar o &lt;em&gt;blogroll&lt;/em&gt; seria exportar meus &lt;em&gt;feeds&lt;/em&gt; num arquivo OPML. Uso o &lt;a href=&#34;https://freshrss.org/&#34;&gt;FreshRSS&lt;/a&gt;, que tem uma &lt;a href=&#34;https://github.com/FreshRSS/FreshRSS/tree/edge/cli&#34;&gt;ferramenta de linha de comando&lt;/a&gt; chamada &lt;code&gt;export-opml-for-user.php&lt;/code&gt; para isso.&lt;/p&gt;
&lt;p&gt;Eu poderia usar o arquivo OPML que ela gera diretamente, mas preciso dar uma limpada legal nos &lt;em&gt;feeds&lt;/em&gt; em que estou inscrito. Tem muitos sites sem atualização há anos e &lt;em&gt;feeds&lt;/em&gt; quebrados ali. Pensei em só manter no OPML algumas categorias e fazer uma curadoria mais cuidadosa dessas que vou manter. Então o &lt;strong&gt;2º passo&lt;/strong&gt; é filtrar esse arquivo OPML que o FreshRSS gera.&lt;/p&gt;
&lt;p&gt;Isso é relativamente fácil com de fazer em &lt;a href=&#34;https://docs.python.org/3/library/xml.etree.elementtree.html&#34;&gt;Python&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; ET
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;categories &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; category &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; body&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;outline&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; category&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; categories:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        body&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(category)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;buffer, encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;, xml_declaration&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O script acima lê OPML da &lt;code&gt;stdin&lt;/code&gt; e escreve na &lt;code&gt;stdout&lt;/code&gt; o mesmo OPML com apenas as categorias passadas como argumentos.&lt;/p&gt;
&lt;p&gt;Então, supondo que o script acima esteja num arquivo chamado &lt;code&gt;filter_opml.py&lt;/code&gt;, o comando abaixo grava em &lt;code&gt;blogroll.xml&lt;/code&gt; um arquivo OPML só com as categorias &lt;code&gt;Fediverso lusófono&lt;/code&gt; e &lt;code&gt;ctrl-c.club&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./export-opml-for-user.php --user gmgall | python filter_opml.py &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Fediverso lusófono&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ctrl-c.club&amp;#39;&lt;/span&gt; &amp;gt; blogroll.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tendo esse arquivo disponível, é &amp;ldquo;fácil&amp;rdquo; consumi-lo no &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Ele permite guardar arquivos no diretório &lt;code&gt;data&lt;/code&gt; que terão seus dados expostos nos templates, então é &amp;ldquo;só&amp;rdquo; questão de copiar meu arquivo OPML para &lt;code&gt;data&lt;/code&gt; e consumi-los com algo como &lt;code&gt;{{ $body := .Site.Data.blogroll.body }}&lt;/code&gt;, certo?&lt;/p&gt;
&lt;p&gt;Sim, mas não achei intuitivo fazer isso. Saiu, mas teve alguma tentativa e erro envolvidas. A &lt;a href=&#34;https://github.com/gohugoio/hugo/commit/0eaaa8fee37068bfc8ecfb760f770ecc9a7af22a&#34;&gt;mensagem de commit&lt;/a&gt; na implementação dessa funcionalidade cita casos simples, em que se recupera o &lt;strong&gt;conteúdo&lt;/strong&gt; de tags XML. O padrão OPML traz as informações quase todas como &lt;strong&gt;atributos&lt;/strong&gt;. Você precisa usar a &lt;a href=&#34;https://gohugo.io/functions/index-function/&#34;&gt;função &lt;code&gt;index&lt;/code&gt; do Hugo&lt;/a&gt; para acessar os atributos e eles viram chaves com nomes iniciados por &lt;code&gt;-&lt;/code&gt; nos templates. Recomendo ler o que o &lt;a href=&#34;https://brainbaking.com/post/2022/01/generating-a-blogroll-with-opml-in-hugo/#hugo-and-xml-parsing&#34;&gt;Wouter Groeneveld escreveu sobre&lt;/a&gt;. Após brigar um pouco com isso, saiu o &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;&lt;em&gt;shortcode&lt;/em&gt;&lt;/a&gt; abaixo, o &lt;strong&gt;3º passo&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;Site&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;blogroll&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;outline&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-text&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h2&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt; }}&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;h2&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;range&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;outline&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_text&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-text&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_description&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-description&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_htmlUrl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-htmlUrl&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_xmlUrl&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt; . &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-xmlUrl&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $feed_htmlUrl }}&amp;#34;&lt;/span&gt;&amp;gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_text&lt;/span&gt; }}&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&amp;gt; &amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $feed_xmlUrl }}&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;alt&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;O logo do RSS.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/img/rss.svg&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;height&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;12&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;width&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;12&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;display: inline&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&amp;gt; {{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;feed_description&lt;/span&gt; }}&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ &lt;span style=&#34;color:#a6e22e&#34;&gt;end&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;end&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esse &lt;em&gt;shortcode&lt;/em&gt; quebra nos casos em que uma categoria tem um único &lt;em&gt;feed&lt;/em&gt; ou caso &lt;code&gt;body&lt;/code&gt; possua uma única categoria. Vi quem preferisse &lt;a href=&#34;https://nikdoof.com/posts/2022/automating-a-blogroll-in-hugo/#the-script&#34;&gt;transformar o OPML em JSON antes de processá-lo&lt;/a&gt; com o Hugo. Tendo enfrentado esses probleminhas, entendo a motivação.&lt;/p&gt;
&lt;p&gt;Chamei esse &lt;em&gt;shortcode&lt;/em&gt; de &lt;code&gt;blogroll&lt;/code&gt; e isso me permite renderizá-lo em qualquer arquivo de conteúdo desse site com &lt;code&gt;{{&amp;lt; blogroll &amp;gt;}}&lt;/code&gt;. Vou renderizá-lo entre 2 linhas horizontais abaixo:&lt;/p&gt;
&lt;hr&gt;


  &lt;h2&gt;ctrl-c.club&lt;/h2&gt;
  &lt;ul&gt;
      &lt;li&gt;&lt;a href=&#34;https://ctrl-c.club/~chiptune/blog/&#34;&gt;~chiptune posts on ctrl-c.club&lt;/a&gt; &lt;a href=&#34;https://ctrl-c.club/~gmgall/feeds/chiptune.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; chiptune&amp;#39;s blog&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://ctrl-c.club/~FikaMedHasse/blog.html&#34;&gt;~FikaMedHasse posts on ctrl-c.club&lt;/a&gt; &lt;a href=&#34;https://ctrl-c.club/~gmgall/feeds/FikaMedHasse.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Blog!&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://ctrl-c.club/~gome/journal/&#34;&gt;~gome posts on ctrl-c.club&lt;/a&gt; &lt;a href=&#34;https://ctrl-c.club/~gmgall/feeds/gome.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; gome — journal&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://ctrl-c.club/~lettuce/&#34;&gt;~lettuce posts on ctrl-c.club&lt;/a&gt; &lt;a href=&#34;https://ctrl-c.club/~gmgall/feeds/lettuce.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; /home/lettuce/public_html/index.html&lt;/li&gt;
    
  &lt;/ul&gt;

  &lt;h2&gt;Fediverso lusófono&lt;/h2&gt;
  &lt;ul&gt;
      &lt;li&gt;&lt;a href=&#34;https://lori.bearblog.dev/&#34;&gt;blog da Lori&lt;/a&gt; &lt;a href=&#34;https://lori.bearblog.dev/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; às vezes eu empolgo e saio despejando palavras....&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://blog.cadusilva.com/&#34;&gt;Blog do Cadu Silva&lt;/a&gt; &lt;a href=&#34;https://blog.cadu.cc/feed&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Site pessoal de Cadu Silva. Aqui você encontra especialmente textos sobre tecnologia.&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://blog.dunossauro.com/&#34;&gt;Blog do Dunossauro&lt;/a&gt; &lt;a href=&#34;https://blog.dunossauro.com/feed.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Blog do Dunossauro&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://www.brunoarine.com/posts/&#34;&gt;Blog on Bruno Arine&lt;/a&gt; &lt;a href=&#34;https://brunoarine.com/posts/index.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Recent content in Blog on Bruno Arine&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://crieaporradeum.blog/&#34;&gt;Crie a Porra de um Blog&lt;/a&gt; &lt;a href=&#34;https://crieaporradeum.blog/index.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Recent content on Crie a Porra de um Blog&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://escrevescreve.wordpress.com/&#34;&gt;escrevescreve – cecilia giannetti&lt;/a&gt; &lt;a href=&#34;https://gmgall.github.io/feeds/escrevescreve.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; cecilia giannetti&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://blog.ayom.media/felipe-siles/&#34;&gt;Felipe Siles&lt;/a&gt; &lt;a href=&#34;https://blog.ayom.media/felipe-siles/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Espero que seja útil&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;http://helio.loureiro.eng.br/index.php&#34;&gt;Home - helio.loureiro.eng.br&lt;/a&gt; &lt;a href=&#34;http://helio.loureiro.eng.br/index.php?format=feed&amp;amp;type=rss&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Helio Loureiro - site pessoal, blog, informações, scripts, unix, linux, receitas técnicas, python, cyberativismo e outros&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://kiff.blog/&#34;&gt;Kiff&lt;/a&gt; &lt;a href=&#34;https://kiff.blog/rss&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; No more empty sketchbooks. Gallery of drawings and sketches produced during 2021, in an attempt to be daily studies.&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://kiff.bearblog.dev/&#34;&gt;Kiff&lt;/a&gt; &lt;a href=&#34;https://kiff.bearblog.dev/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Sou designer e desenho, pinto e bordo (entre outras manualidades) nas horas vagas, mas nada escritora. 

Fotografia, ilustração, filmes, séries, livros,...&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://liaamancio.com.br/&#34;&gt;Lia Amancio&lt;/a&gt; &lt;a href=&#34;https://liaamancio.com.br/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Desde 2001 servindo conteúdo de qualidade na internet.&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://www.memedecarbono.com.br/&#34;&gt;Meme de Carbono&lt;/a&gt; &lt;a href=&#34;https://www.memedecarbono.com.br/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Os átomos e ideias que constroem a consciência&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://odd.bearblog.dev/&#34;&gt;ODD BLOG&lt;/a&gt; &lt;a href=&#34;https://odd.bearblog.dev/feed/&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; Oi, eu sou o DD, e este é o meu blog pessoal, onde pretendo expor algumas de minhas ideias e ideais. Para encontrar os meus textos, clique no botão &amp;#34;Blog&amp;#34; al...&lt;/li&gt;
    
      &lt;li&gt;&lt;a href=&#34;https://sol2070.in/&#34;&gt;sol2070&lt;/a&gt; &lt;a href=&#34;https://sol2070.in/feed/notes.xml&#34;&gt;&lt;img alt=&#34;O logo do RSS.&#34; src=&#34;https://gmgall.net/img/rss.svg&#34; height=&#34;12&#34;  width=&#34;12&#34; style=&#34;display: inline&#34;&gt;&lt;/a&gt; &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;hr&gt;
&lt;p&gt;Falta só baixar o arquivo OPML para o diretório &lt;code&gt;data&lt;/code&gt; (para que os dados fiquem disponíveis para o &lt;em&gt;shortcode&lt;/em&gt; &lt;code&gt;blogroll&lt;/code&gt;) e para o diretório &lt;code&gt;static&lt;/code&gt; (para que ele fique disponível para download) a cada geração do site. Como uso &lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt;, o &lt;strong&gt;4º passo&lt;/strong&gt; é adicionar uma etapa no &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;workflow de geração desse site&lt;/a&gt; que coloca o arquivo nesses diretórios.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Download OPML for blogroll&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    wget &amp;#39;${{ secrets.OPML_URL }}&amp;#39; -O data/blogroll.xml
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    cp data/blogroll.xml static/blogroll.xml&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Isso é tudo.&lt;/p&gt;
&lt;p&gt;E aí? Você tem um &lt;em&gt;blogroll&lt;/em&gt;? Já pensou em oferecer um OPML para facilitar a inscrição em todos os &lt;em&gt;feeds&lt;/em&gt; de uma vez só?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrando Para Uma Alternativa GPL Ao LastPass Authenticator</title>
      <link>https://gmgall.net/blog/migrando-para-uma-alternativa-gpl-ao-lastpass-authenticator/</link>
      <pubDate>Fri, 29 Sep 2023 03:40:06 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/migrando-para-uma-alternativa-gpl-ao-lastpass-authenticator/</guid>
      <description>&lt;p&gt;Usei o &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.lastpass.authenticator&#34;&gt;LastPass Authenticator&lt;/a&gt; como &lt;em&gt;app&lt;/em&gt; de 2FA no meu celular Android por alguns anos. Não me recordo agora o que me levou a escolhê-lo no passado, mas, por hábito, acabou sendo o que instalei no &lt;em&gt;smartphone&lt;/em&gt; que comprei recentemente.&lt;/p&gt;
&lt;p&gt;2 problemas sérios com o LastPass Authenticator:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;é software proprietário e&lt;/li&gt;
&lt;li&gt;só permite &lt;em&gt;backup&lt;/em&gt; na nuvem da LastPass&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eu devia ter pesquisado uma alternativa livre antes, mas a &lt;strike&gt;preguiça&lt;/strike&gt;
 rotina venceu. Fiquei com esse problema por resolver.&lt;/p&gt;
&lt;p&gt;Até agora.&lt;/p&gt;
&lt;p&gt;A insônia me deu a oportunidade de ler o texto &lt;a href=&#34;https://joelchrono.xyz/blog/what-is-on-my-phone-fall-2023/&#34;&gt;&lt;em&gt;What&amp;rsquo;s on my Phone (Fall 2023)&lt;/em&gt;&lt;/a&gt;, recheado de recomendações de &lt;em&gt;apps&lt;/em&gt; livres para Android instaláveis via &lt;a href=&#34;https://f-droid.org/&#34;&gt;F-Droid&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;https://getaegis.app/&#34;&gt;&lt;em&gt;Aegis Authenticator&lt;/em&gt;&lt;/a&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; tinha a descrição &lt;em&gt;2FA manager with a nice&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; interface and easy to backup&lt;/em&gt;. Boa, achei &amp;ldquo;o cara&amp;rdquo;!&lt;/p&gt;
&lt;p&gt;Aegis instalado, fui em &lt;code&gt;Configurações&lt;/code&gt; &amp;gt; &lt;code&gt;Importar &amp;amp; Exportar&lt;/code&gt; &amp;gt; &lt;code&gt;Importar de arquivo&lt;/code&gt;. Tem mais de 10 opções de &lt;em&gt;apps&lt;/em&gt; de origem para escolher, mas o LastPass não é uma delas. 😔&lt;/p&gt;
&lt;p&gt;Por sorte, alguém parou para olhar o arquivo gerado pela opção &lt;code&gt;Exportar contas para arquivo&lt;/code&gt; do LastPass Authenticator e descobriu que não é um JSON muito diferente do usado pelo próprio Aegis.&lt;/p&gt;
&lt;p&gt;Um &lt;a href=&#34;https://github.com/tghw/lastpass_aegis_convert&#34;&gt;conversor está disponível no GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O processo para migrar as contas foi o seguinte:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;No LastPass, fui em &lt;code&gt;Configurações&lt;/code&gt; &amp;gt; &lt;code&gt;Transferir contas&lt;/code&gt; &amp;gt; &lt;code&gt;Exportar contas para arquivo&lt;/code&gt;. Foi gerado um arquivo JSON.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transferi o arquivo para o computador e usei &lt;code&gt;python convert.py path/to/lastpass_auth_export.json&lt;/code&gt;. Um arquivo com nome no padrão &lt;code&gt;aegis_*.json&lt;/code&gt; foi gerado.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transferi o arquivo &lt;code&gt;aegis_*.json&lt;/code&gt; para o celular. No Aegis, fui em &lt;code&gt;Configurações&lt;/code&gt; &amp;gt; &lt;code&gt;Importar &amp;amp; Exportar&lt;/code&gt; &amp;gt; &lt;code&gt;Importar de arquivo&lt;/code&gt;. Selecionei &lt;code&gt;Aegis&lt;/code&gt; e escolhi em seguida o arquivo &lt;code&gt;aegis_*.json&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Funcionou perfeitamente. 😊&lt;/p&gt;
&lt;p&gt;Com as contas migradas, confirmei o &lt;em&gt;easy to backup&lt;/em&gt;. Em &lt;code&gt;Configurações&lt;/code&gt; &amp;gt; &lt;code&gt;Backups&lt;/code&gt; consegui rapidamente selecionar um diretório numa instância do &lt;a href=&#34;https://nextcloud.com/&#34;&gt;Nextcloud&lt;/a&gt; e agora tenho backups regulares das contas.&lt;/p&gt;
&lt;p&gt;⚠️ &lt;strong&gt;Não deixe os arquivos JSON usados para migração de bobeira no celular ou no computador. Apague-os assim que terminar a migração.&lt;/strong&gt; ⚠️&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Não sei se é uma boa ideia ter uma conta na nuvem de uma empresa que tem como maior seção de seu artigo na Wikipedia uma &lt;a href=&#34;https://en.wikipedia.org/wiki/LastPass#Security_incidents&#34;&gt;lista de incidentes de segurança&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;O Aegis usa a licença GPLv3.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Está aí: acho que o motivo para eu ter instalado o LastPass Authenticator pela 1ª vez foi eu ter achado a interface bonita.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Pages e Nomes de Diretório Iniciados com Underline</title>
      <link>https://gmgall.net/blog/github-pages-underline/</link>
      <pubDate>Wed, 07 Jun 2023 19:25:06 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/github-pages-underline/</guid>
      <description>&lt;p&gt;Levei mais tempo para descobrir isso do que me orgulharia em compartilhar, então escrevo aqui para não esquecer.&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; trata diretórios com nomes iniciados por &lt;code&gt;_&lt;/code&gt; (&lt;em&gt;underline&lt;/em&gt;) de forma especial &lt;strong&gt;mesmo se você estiver usando GitHub Actions para gerar os arquivos estáticos com outras ferramentas&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Isso ocorre porque o &lt;a href=&#34;https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/about-github-pages-and-jekyll&#34;&gt;GitHub Pages pode gerar e servir um site feito com Jekyll&lt;/a&gt; se você quiser e para o &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, diretórios com nomes iniciados por &lt;code&gt;_&lt;/code&gt; são especiais.&lt;/p&gt;
&lt;p&gt;Aparentemente o Jekyll está envolvido mesmo quando configuramos o Pages para servir os arquivos de um &lt;em&gt;branch&lt;/em&gt; separado e escrevemos nosso próprio &lt;em&gt;workflow&lt;/em&gt; no &lt;a href=&#34;https://github.com/features/actions&#34;&gt;Actions&lt;/a&gt; para escrever nesse &lt;em&gt;branch&lt;/em&gt;. Achei pouco intuitivo e outras pessoas que conversaram comigo sobre o assunto concordaram, mas é assim que o Pages funciona.&lt;/p&gt;
&lt;p&gt;Um site que eu estava tentando servir tinha uma estrutura de arquivos parecida com a seguinte:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;about
css
doc
├── index.html
├── _static
│   ├── basic.css
│   ├── doctools.js
│   ├── documentation_options.js
│   ├── file.png
│   ├── graphviz.css
│   ├── language_data.js
│   ├── minus.png
│   ├── plus.png
│   ├── pygments.css
│   ├── scripts
│   │   ├── bootstrap.js
│   │   ├── bootstrap.js.LICENSE.txt
│   │   ├── bootstrap.js.map
│   │   ├── pydata-sphinx-theme.js
│   │   └── pydata-sphinx-theme.js.map
│   ├── searchtools.js
│   ├── sphinx_highlight.js
│   ├── styles
│   │   ├── bootstrap.css
│   │   ├── pydata-sphinx-theme.css
│   │   └── theme.css
│   ├── switcher.json
│   └── webpack-macros.html
└── tutorial
    ├── graphs.html
    ├── index.html
    ├── plotting_customization.html
    └── quantum_walk_models.html
example.html
features
gethelp
getstarted
images
index.html
index.xml
js
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O arquivo &lt;code&gt;doc/index.html&lt;/code&gt; carregava vários recursos de &lt;code&gt;doc/_static/&lt;/code&gt;. Só a requisição para o arquivo &lt;code&gt;doc/index.html&lt;/code&gt; era concluída com sucesso. Para as requisições de todos os arquivos em &lt;code&gt;doc/_static&lt;/code&gt; eu recebia um erro 404 como resposta, &lt;strong&gt;mesmo que os arquivos estivessem lá&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Para que esses arquivos passassem a ser servidos normalmente, precisei criar um arquivo oculto de nome &lt;code&gt;.nojekyll&lt;/code&gt; na &lt;strong&gt;raiz do site&lt;/strong&gt;. A estrutura ficou mais ou menos a seguinte:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;about
css
doc
├── index.html
├── _static
│   ├── basic.css
│   ├── doctools.js
│   ├── documentation_options.js
│   ├── file.png
│   ├── graphviz.css
│   ├── language_data.js
│   ├── minus.png
│   ├── plus.png
│   ├── pygments.css
│   ├── scripts
│   │   ├── bootstrap.js
│   │   ├── bootstrap.js.LICENSE.txt
│   │   ├── bootstrap.js.map
│   │   ├── pydata-sphinx-theme.js
│   │   └── pydata-sphinx-theme.js.map
│   ├── searchtools.js
│   ├── sphinx_highlight.js
│   ├── styles
│   │   ├── bootstrap.css
│   │   ├── pydata-sphinx-theme.css
│   │   └── theme.css
│   ├── switcher.json
│   └── webpack-macros.html
└── tutorial
    ├── graphs.html
    ├── index.html
    ├── plotting_customization.html
    └── quantum_walk_models.html
example.html
features
gethelp
getstarted
images
index.html
index.xml
js
.nojekyll
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Depois da criação desse arquivo, todas as requisições eram concluídas normalmente.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>input_filename das ferramentas jq e yq não funcionam como esperado</title>
      <link>https://gmgall.net/blog/input_filename-em-jq-e-yq/</link>
      <pubDate>Fri, 05 May 2023 13:17:37 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/input_filename-em-jq-e-yq/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;As ferramentas de linha de comando &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; e &lt;a href=&#34;https://kislyuk.github.io/yq/&#34;&gt;&lt;code&gt;yq&lt;/code&gt;&lt;/a&gt; possuem uma função &lt;em&gt;builtin&lt;/em&gt; chamada &lt;a href=&#34;https://stedolan.github.io/jq/manual/#input_filename&#34;&gt;&lt;code&gt;input_filename&lt;/code&gt;&lt;/a&gt; que deveria retornar o nome do arquivo sendo filtrado. Ela não funciona como esperado.&lt;/p&gt;
&lt;p&gt;No caso específico da &lt;code&gt;yq&lt;/code&gt; é &lt;a href=&#34;https://github.com/kislyuk/yq/issues/84&#34;&gt;sempre retornado &lt;code&gt;&amp;lt;stdin&amp;gt;&lt;/code&gt;&lt;/a&gt;.  Exemplo&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ xq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;input_filename&amp;#39;&lt;/span&gt; feeds/*xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O comportamento em &lt;code&gt;jq&lt;/code&gt; também me parece inesperado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat a.json 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Roberpierre&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;equipment&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;guillotine&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat b.json 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yurovsky&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;equipment&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gun&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jq -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;map({name, &amp;#34;file&amp;#34;: input_filename})&amp;#39;&lt;/span&gt; *.json &lt;span style=&#34;color:#75715e&#34;&gt;# input_filename retorna só o nome do último arquivo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Roberpierre&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b.json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yurovsky&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b.json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;como-esse-comportamento-me-pegou&#34;&gt;Como esse comportamento &amp;ldquo;me pegou&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;Já expliquei &lt;a href=&#34;https://gmgall.net/blog/gerando-feeds-com-github-actions-e-os-servindo-com-github-pages/&#34;&gt;aqui&lt;/a&gt; que possuo &lt;a href=&#34;https://github.com/gmgall/feeds&#34;&gt;um repositório com &lt;em&gt;feeds&lt;/em&gt; RSS&lt;/a&gt; para sites que não fornecem os seus próprios. Hoje não está listado em lugar nenhum para que sites gero &lt;em&gt;feeds&lt;/em&gt;. A única forma de ver isso, é listar o &lt;a href=&#34;https://github.com/gmgall/feeds/tree/gh-pages&#34;&gt;&lt;em&gt;branch&lt;/em&gt; &lt;code&gt;gh-pages&lt;/code&gt; desse repositório&lt;/a&gt;. Sabendo o nome do arquivo, você sabe que a URL para o &lt;em&gt;feed&lt;/em&gt; é &lt;code&gt;https://gmgall.github.io/feeds/NOME_DO_ARQUIVO.xml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Pensei em gerar um arquivo JSON com algumas metainformações de cada &lt;em&gt;feed&lt;/em&gt;. Pretendo usá-lo mais tarde para listar os &lt;em&gt;feeds&lt;/em&gt; disponíveis tanto &lt;a href=&#34;https://gmgall.net/feeds&#34;&gt;aqui&lt;/a&gt; quanto em outros lugares.&lt;/p&gt;
&lt;p&gt;Queria um arquivo no formato seguinte&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Diário de Petrópolis&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;link&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.diariodepetropolis.com.br/&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(Edição online) Últimas notícias, artigos e classificados da cidade.&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;feed&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://gmgall.github.io/feeds/diario_de_petropolis.xml&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NFL na ESPN - Resultados, vídeos e estatísticas&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;link&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.espn.com.br/nfl&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acesse ESPN para placares ao vivo da NFL, melhores momentos e notícias. Assista à NFL pela ESPN no Star+&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;feed&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://gmgall.github.io/feeds/espn_nfl.xml&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;title&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt; e &lt;code&gt;description&lt;/code&gt; são informações &lt;a href=&#34;https://validator.w3.org/feed/docs/rss2.html#requiredChannelElements&#34;&gt;requeridas nos &lt;em&gt;feeds&lt;/em&gt; RSS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Minha linha de raciocínio então foi a seguinte:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Conheço um pouco dos filtros do &lt;code&gt;jq&lt;/code&gt;. Sei que existe &lt;a href=&#34;https://stedolan.github.io/jq/manual/#map(x),map_values(x)&#34;&gt;&lt;code&gt;map(x)&lt;/code&gt;&lt;/a&gt;, que aplica o filtro a cada elemento do &lt;em&gt;array&lt;/em&gt; de entrada.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sei que posso processar mais de um arquivo com a opção &lt;code&gt;-s&lt;/code&gt;, que coloca o conteúdo dos arquivos num &lt;em&gt;array&lt;/em&gt; único, cada elemento com o conteúdo de um arquivo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xq&lt;/code&gt; é só um &lt;em&gt;wrapper&lt;/em&gt; para o &lt;code&gt;jq&lt;/code&gt;. Então bastaria processar meus &lt;em&gt;feeds&lt;/em&gt; (XML) com &lt;code&gt;xq&lt;/code&gt; da mesma forma que faria se fossem arquivos JSON. A saída vai ser em JSON, o que vai facilitar bastante.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como citei acima, 3 das 4 propriedades que quero no meu JSON são requeridas pelo padrão RSS. Seria questão de gerar um objeto só com elas para cada elemento do &lt;em&gt;array&lt;/em&gt; que estará disponível por conta da opção de linha de comando &lt;code&gt;-s&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ xq -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;map({&amp;#34;title&amp;#34;: .rss.channel.title, &amp;#34;link&amp;#34;: .rss.channel.link, &amp;#34;description&amp;#34;: .rss.channel.description })&amp;#39;&lt;/span&gt; feeds/*xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Diário de Petrópolis&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;link&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.diariodepetropolis.com.br/&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(Edição online) Últimas notícias, artigos e classificados da cidade.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NFL na ESPN - Resultados, vídeos e estatísticas&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;link&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.espn.com.br/nfl&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acesse ESPN para placares ao vivo da NFL, melhores momentos e notícias. Assista à NFL pela ESPN no Star+&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Perfeito! A propriedade que falta, &lt;code&gt;feed&lt;/code&gt;, deve ser bem fácil de adicionar, certo? Eu gero os &lt;em&gt;feeds&lt;/em&gt; num diretório de nome &lt;code&gt;feeds&lt;/code&gt;. Basta cada objeto ter uma propriedade cujo valor será a &lt;em&gt;string&lt;/em&gt; &lt;code&gt;https://gmgall.github.io/&lt;/code&gt; + uma &lt;em&gt;string&lt;/em&gt; com &lt;em&gt;path&lt;/em&gt; do arquivo. Ainda bem que existe &lt;code&gt;input_filename&lt;/code&gt;, vai ser um &lt;em&gt;one-liner&lt;/em&gt;. 😎&lt;/p&gt;
&lt;p&gt;Vamos testar antes só com o nome do arquivo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ xq -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;map({&amp;#34;title&amp;#34;: .rss.channel.title, &amp;#34;link&amp;#34;: .rss.channel.link, &amp;#34;description&amp;#34;: .rss.channel.description, &amp;#34;feed&amp;#34;: input_filename})&amp;#39;&lt;/span&gt; feeds/*xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Diário de Petrópolis&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;link&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.diariodepetropolis.com.br/&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(Edição online) Últimas notícias, artigos e classificados da cidade.&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;feed&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NFL na ESPN - Resultados, vídeos e estatísticas&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;link&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.espn.com.br/nfl&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Acesse ESPN para placares ao vivo da NFL, melhores momentos e notícias. Assista à NFL pela ESPN no Star+&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;feed&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fuén. 🤡&lt;/p&gt;
&lt;p&gt;Como resolvi no fim das contas?&lt;/p&gt;
&lt;p&gt;Para evitar instalar mais coisas no &lt;em&gt;runner&lt;/em&gt; que gera os &lt;em&gt;feeds&lt;/em&gt; e para evitar ler os XMLs e &amp;ldquo;montar&amp;rdquo; o JSON &amp;ldquo;na mão&amp;rdquo;, quis continuar com a suíte &lt;code&gt;yq&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O sonho do &lt;em&gt;one-liner&lt;/em&gt; morreu:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; feed in feeds/*; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  xq --arg feed_url &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://gmgall.github.io/&lt;/span&gt;$feed&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;title&amp;#34;: .rss.channel.title, &amp;#34;link&amp;#34;: .rss.channel.link, &amp;#34;description&amp;#34;: .rss.channel.description, &amp;#34;feed&amp;#34;: $feed_url}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$feed&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; | jq -s &amp;gt; ./feeds/feeds.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O que acabei fazendo foi chamar o &lt;code&gt;xq&lt;/code&gt; para cada arquivo XML para gerar cada objeto dentro de um laço &lt;strong&gt;do shell&lt;/strong&gt; e só no fim junto tudo com &lt;code&gt;jq -s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--arg&lt;/code&gt; permitiu injetar uma propriedade com o valor &lt;code&gt;https://gmgall.github.io/&lt;/code&gt; + &lt;em&gt;path&lt;/em&gt; do arquivo.&lt;/p&gt;
&lt;p&gt;Funciona. Estou orgulhoso?&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://i.makeagif.com/media/9-25-2017/XOax9n.gif&#34; alt=&#34;Mais ou menos&amp;amp;hellip;&#34; /&gt;
&lt;/figure&gt;


&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Uso o comando &lt;code&gt;xq&lt;/code&gt; que faz parte da suíte &lt;code&gt;yq&lt;/code&gt;, que são ambos &lt;em&gt;wrappers&lt;/em&gt; para o &lt;code&gt;jq&lt;/code&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Gero mais que 2 &lt;em&gt;feeds&lt;/em&gt; no momento em que escrevo esse texto. Estou listando apenas 2 por brevidade.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Adicionando Comentários via Mastodon em Sites Estáticos</title>
      <link>https://gmgall.net/blog/comentarios-via-mastodon/</link>
      <pubDate>Wed, 03 May 2023 11:43:58 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/comentarios-via-mastodon/</guid>
      <description>&lt;p&gt;Esse site agora possui um botão &lt;code&gt;Carregar comentários&lt;/code&gt; abaixo das postagens cujos &lt;em&gt;links&lt;/em&gt; anunciei no Mastodon. Ao clicar nele, as respostas ao &lt;em&gt;toot&lt;/em&gt; são exibidas. Foi possível fazer isso apenas no lado do cliente com JavaScript acessando a API do Mastodon, então é uma solução para ter comentários em sites estáticos.&lt;/p&gt;
&lt;p&gt;Essa ideia não é minha, me baseei fortemente &lt;a href=&#34;https://joelchrono12.xyz/blog/how-to-add-mastodon-comments-to-jekyll-blog/&#34;&gt;numa postagem de Joel Garcia&lt;/a&gt;. Ele não é, porém, o &lt;a href=&#34;https://carlschwan.eu/2020/12/29/adding-comments-to-your-static-blog-with-mastodon/&#34;&gt;único que fez isso&lt;/a&gt;. Existe também &lt;a href=&#34;https://dusanmitrovic.xyz/blog/post/2022-05-18/Adding-support-for-comments-through-integration-with-Mastodon&#34;&gt;quem faça uso de código no lado do servidor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O cerne da solução é o &lt;a href=&#34;https://docs.joinmastodon.org/methods/statuses/#context&#34;&gt;seguinte método&lt;/a&gt; na API do Mastodon:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET /api/v1/statuses/:id/context
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A resposta será um JSON com 2 &lt;em&gt;arrays&lt;/em&gt;, um chamado &lt;code&gt;ancestors&lt;/code&gt; e outro chamado &lt;code&gt;descendants&lt;/code&gt;. As respostas ao &lt;em&gt;toot&lt;/em&gt; estarão em &lt;code&gt;descendants&lt;/code&gt;. Para &lt;em&gt;toots&lt;/em&gt; públicos, não é necessário autenticação. A ideia, portanto, é ter um botão&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; que chama uma função em JavaScript que acessa esse método e cria &lt;code&gt;div&lt;/code&gt;s com os comentários abaixo de cada postagem.&lt;/p&gt;
&lt;h2 id=&#34;o-código&#34;&gt;O código&lt;/h2&gt;
&lt;p&gt;Criei um &lt;a href=&#34;https://gohugo.io/templates/partials/&#34;&gt;partial&lt;/a&gt; chamado &lt;code&gt;comments.html&lt;/code&gt; que trata dos comentários. Listo o código abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ with .Params.comments }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;Comentários&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;details&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;summary&lt;/span&gt;&amp;gt;Responda pelo fediverso&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;summary&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Responda pelo fediverso colando a URL abaixo no seu cliente: &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt;&amp;gt;{{ . }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onclick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;navigator.clipboard.writeText(&amp;#39;{{ . }}&amp;#39;)&amp;#34;&lt;/span&gt;&amp;gt;COPIAR URL&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;details&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;load-comments&amp;#34;&lt;/span&gt;&amp;gt;Carregar comentários&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comments-list&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $server := replaceRE `(https://.*?)/.*` &amp;#34;$1&amp;#34; . }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $toot_id := replaceRE `https://.+?/([0-9]*)$` &amp;#34;$1&amp;#34; . }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;js&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;purify&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;js&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;relURL&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;load-comments&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; () =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;load-comments&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;remove&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetch&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ $server }}/api/v1/statuses/{{ $toot_id }}/context&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;descendants&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;descendants&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;descendants&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;descendants&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;descendant&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;descendants&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;comments-list&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;DOMPurify&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sanitize&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;createCommentEl&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;descendant&lt;/span&gt;), { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RETURN_DOM_FRAGMENT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; }))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;comments-list&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;p&amp;gt;⚠️ Sem comentários no fediverso. ⚠️&amp;lt;/p&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createCommentEl&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;comment&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;commentHeader&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;commentHeader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;comment-header&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;userAvatar&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;userAvatar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avatar&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;userAvatar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setAttribute&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;height&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;userAvatar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setAttribute&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;width&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;userAvatar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setAttribute&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;src&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;avatar_static&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;userLink&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;userLink&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;user-link&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;userLink&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setAttribute&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;href&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;emoji&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emojis&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;display_name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;display_name&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;replace&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;`:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;emoji&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;shortcode&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:`&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;`&amp;lt;img src=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;emoji&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;static_url&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; alt=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;emoji&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;shortcode&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; height=&amp;#34;14px&amp;#34; width=&amp;#34;14px&amp;#34; /&amp;gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;serverName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;/https?:\/\/(.+)\/@.+/&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$1&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;userLink&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;display_name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; (@&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;username&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;serverName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;commentDateTime&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;commentDateTime&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;comment-date&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;commentDateTime&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setAttribute&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;href&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;commentDateTime&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;created_at&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;substr&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;/([0-9]{4})-([0-9]{2})-([0-9]{2})/&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$3/$2/$1&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;commentHeader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;userAvatar&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;commentHeader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;userLink&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;commentHeader&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;commentDateTime&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;commentContent&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;commentContent&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;commentHeader&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;commentContent&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;comment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;É bastante parecido com o &lt;a href=&#34;https://joelchrono12.xyz/blog/how-to-add-mastodon-comments-to-jekyll-blog/#main-function&#34;&gt;código do Joel&lt;/a&gt;, as diferenças são as seguinte:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Na &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/layouts/partials/comments.html#L1&#34;&gt;linha 1&lt;/a&gt; garanto que vai ser incluído o código do &lt;em&gt;partial&lt;/em&gt; &lt;strong&gt;apenas&lt;/strong&gt; nas páginas que fornecerem um contexto com um &lt;em&gt;link&lt;/em&gt; para um &lt;em&gt;toot&lt;/em&gt; numa variável &lt;code&gt;comments&lt;/code&gt;. Isso é feito graças à &lt;a href=&#34;https://gohugo.io/functions/with/&#34;&gt;função &lt;code&gt;with&lt;/code&gt; do Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Na &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/layouts/partials/comments.html#L6&#34;&gt;linha 6&lt;/a&gt; incluo um botão para copiar o &lt;em&gt;link&lt;/em&gt; para o &lt;em&gt;toot&lt;/em&gt; para a área de transferência. Isso facilita para quem deseja comentar. Não é necessário selecionar e copiar o &lt;em&gt;link&lt;/em&gt; manualmente. Como a &lt;a href=&#34;https://gohugo.io/functions/with/&#34;&gt;função &lt;code&gt;with&lt;/code&gt;&lt;/a&gt; faz um &lt;em&gt;rebinding&lt;/em&gt; do contexto, o &lt;em&gt;link&lt;/em&gt; estará em &lt;code&gt;{{ . }}&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nas &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/layouts/partials/comments.html#L11&#34;&gt;linhas 11&lt;/a&gt; e &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/layouts/partials/comments.html#L12&#34;&gt;12&lt;/a&gt; extraio o servidor e o &lt;code&gt;id&lt;/code&gt; do &lt;em&gt;toot&lt;/em&gt; do &lt;em&gt;link&lt;/em&gt; para o &lt;em&gt;toot&lt;/em&gt; com &lt;a href=&#34;https://gohugo.io/functions/replacere/&#34;&gt;&lt;em&gt;regex&lt;/em&gt;&lt;/a&gt;. Isso me permite construir a URL para o método &lt;code&gt;GET /api/v1/statuses/:id/context&lt;/code&gt; da API do Mastodon na &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/layouts/partials/comments.html#L17&#34;&gt;linha 17&lt;/a&gt;. &lt;strong&gt;Acho que essa é uma diferença interessante entre a minha solução e a do Joel.&lt;/strong&gt; A minha só precisa que cada página tenha adicionado ao seu &lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34;&gt;&lt;em&gt;front matter&lt;/em&gt;&lt;/a&gt; uma variável &lt;code&gt;comments&lt;/code&gt; com um &lt;em&gt;link&lt;/em&gt; para um &lt;em&gt;toot&lt;/em&gt;. A dele precisa de &lt;a href=&#34;https://joelchrono12.xyz/blog/how-to-add-mastodon-comments-to-jekyll-blog/#jekyll-set-up&#34;&gt;3 variáveis diferentes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Na &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/layouts/partials/comments.html#L52&#34;&gt;linha 52&lt;/a&gt; eu extraio o nome do servidor. O Joel não faz questão de mostrar o nome do servidor nos comentários do site dele.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Na &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/layouts/partials/comments.html#L58&#34;&gt;linha 58&lt;/a&gt; eu troco o formato da data para DD/MM/AAAA.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O resto é praticamente igual:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Da &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/layouts/partials/comments.html#L15&#34;&gt;linha 15 à linha 28&lt;/a&gt; defino uma função que falará com a API do Mastodon se o botão &lt;code&gt;Carregar comentários&lt;/code&gt; for clicado.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Da &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/layouts/partials/comments.html#L30&#34;&gt;linha 30 à linha 71&lt;/a&gt; defino uma função que retorna uma &lt;code&gt;div&lt;/code&gt; para cada item no &lt;a href=&#34;https://docs.joinmastodon.org/entities/Context/#descendants&#34;&gt;&lt;em&gt;array&lt;/em&gt; &lt;code&gt;descendants&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Com o &lt;em&gt;partial&lt;/em&gt; definido, bastou chamá-lo nos &lt;em&gt;layouts&lt;/em&gt; das páginas em que eu desejo ativar comentários. Eu quero nos &lt;a href=&#34;https://github.com/gmgall/gmgall.net/commit/2c0b89bd238e1c136b4086cb1bc5c88d482d161b#diff-5942e866d871d1df37aadd5f735f37d2708ea0c3ebc753ccd1cc38a71a68e19bR19&#34;&gt;&lt;em&gt;posts&lt;/em&gt; do blog&lt;/a&gt; e em cada &lt;a href=&#34;https://github.com/gmgall/gmgall.net/commit/2c0b89bd238e1c136b4086cb1bc5c88d482d161b#diff-48079b3f67152acaf42b23c1205c876a542c5a83e2be44e4548d4a847ab54cb5R34&#34;&gt;livro que eu postar impressões de leitura&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;vantagens&#34;&gt;Vantagens&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Simples de implementar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nada é executado no servidor, funciona para sites estáticos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basta a adição de &lt;a href=&#34;https://github.com/gmgall/gmgall.net/commit/996e3941cd666ece381daba209d41780a088c24d&#34;&gt;uma variável&lt;/a&gt; no &lt;em&gt;front matter&lt;/em&gt; para ativar os comentários.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;desvantagens&#34;&gt;Desvantagens&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Se esse site se tornar acessado demais, ele pode começar a fazer mais requisições ao servidor da instância que uso do que ele suporta.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Só tenho o &lt;em&gt;link&lt;/em&gt; para &lt;em&gt;toot&lt;/em&gt; que anuncia o &lt;em&gt;post&lt;/em&gt; &lt;strong&gt;depois&lt;/strong&gt; de fazer o &lt;em&gt;toot&lt;/em&gt; e preciso fornecê-lo &lt;strong&gt;antes&lt;/strong&gt; do &lt;em&gt;build&lt;/em&gt; da página. Isso quer dizer ter um &lt;em&gt;toot&lt;/em&gt; público com um &lt;em&gt;link&lt;/em&gt; para um &lt;em&gt;post&lt;/em&gt; que só estará disponível depois de uns 3 minutos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Migrações entre instâncias do Mastodon carregam os perfis seguidos e os seguidores, mas ainda não os &lt;em&gt;toots&lt;/em&gt;. Se eu migrar de instância, os comentários ficam &amp;ldquo;presos&amp;rdquo; na instância anterior.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;possibilidades-futuras&#34;&gt;Possibilidades futuras&lt;/h2&gt;
&lt;p&gt;Posso ter um &lt;em&gt;workflow&lt;/em&gt; do GitHub Actions que faz o &lt;em&gt;toot&lt;/em&gt; anunciando os &lt;em&gt;posts&lt;/em&gt; novos e insere os &lt;em&gt;links&lt;/em&gt; para os &lt;em&gt;toots&lt;/em&gt; no &lt;em&gt;front matter&lt;/em&gt; para mim. Isso me pouparia o trabalho de fazer o &lt;em&gt;toot&lt;/em&gt; manualmente e eliminaria o problema de ter um &lt;em&gt;toot&lt;/em&gt; indicando um &lt;em&gt;post&lt;/em&gt; novo enquanto o &lt;em&gt;build&lt;/em&gt; do site ainda está terminando.&lt;/p&gt;
&lt;p&gt;Não sei se vou nesse caminho. Deixaria de ser uma solução simples. O &lt;em&gt;workflow&lt;/em&gt; precisaria se autenticar para fazer o &lt;em&gt;toot&lt;/em&gt; por mim e seria aumentada a dependência do GitHub Actions.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Seria possível chamar a função a cada carregamento de página, mas quero reduzir a quantidade de requisições à API da instância em que tenho conta.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>squash&#43;merge no Git</title>
      <link>https://gmgall.net/blog/squash&#43;merge-no-git/</link>
      <pubDate>Mon, 01 May 2023 23:22:39 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/squash&#43;merge-no-git/</guid>
      <description>&lt;p&gt;Às vezes, depois de terminar o trabalho num &lt;em&gt;feature branch&lt;/em&gt; qualquer, você não deseja simplesmente fazer um &lt;code&gt;merge&lt;/code&gt;. Você quer dar uma &amp;ldquo;limpada&amp;rdquo; no histórico primeiro antes de fazer &lt;code&gt;merge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Frequentemente essa &amp;ldquo;limpeza&amp;rdquo; se dá na forma de um &lt;code&gt;squash&lt;/code&gt;, uma junção das alterações inseridas por mais de um &lt;em&gt;commit&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Por exemplo: o &lt;a href=&#34;https://github.com/gmgall/gmgall.net&#34;&gt;repositório desse site&lt;/a&gt; tem um &lt;em&gt;branch&lt;/em&gt; &lt;code&gt;main&lt;/code&gt; com histórico relativamente &amp;ldquo;limpo&amp;rdquo;. Cada &lt;em&gt;commit&lt;/em&gt; representa um novo conteúdo no site ou uma nova funcionalidade. O &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;workflow que faz deploy&lt;/a&gt; do site é disparado cada vez que eu faço um &lt;code&gt;push&lt;/code&gt; em &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Eu criei um &lt;em&gt;branch&lt;/em&gt; local chamado &lt;code&gt;fediverse_comments&lt;/code&gt; para trabalhar na funcionalidade de comentários. Era uma funcionalidade nova, eu não sabia exatamente quantos &lt;em&gt;commits&lt;/em&gt; eu precisaria fazer. Estava experimentando muita coisa. Então, mesmo sendo local, não quis fazer bagunça em &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;branches_antes.png&#34;
         alt=&#34;Screenshot do gitk mostrando um branch main e um branch fediverse_comments com vários commits desorganizados.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Branch main &amp;#34;limpo&amp;#34; e feature branch fediverse_comments &amp;#34;sujo&amp;#34; antes do merge.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Depois de 5 &lt;em&gt;commits&lt;/em&gt; em &lt;code&gt;fediverse_comments&lt;/code&gt; (na imagem acima só aparecem 4, mas fiz mais um depois de tirar o &lt;em&gt;screenshot&lt;/em&gt;) me dei por satisfeito. Era hora do &lt;code&gt;merge&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Eu normalmente faria:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git rebase -i&lt;/code&gt; para transformar os &lt;em&gt;commits&lt;/em&gt; em &lt;code&gt;fediverse_comments&lt;/code&gt; em um ou mais &lt;em&gt;commits&lt;/em&gt; &amp;ldquo;limpos&amp;rdquo;, ou seja, &lt;em&gt;commits&lt;/em&gt; que eu estaria OK em trazer via &lt;code&gt;merge&lt;/code&gt; para &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;trocaria para o &lt;em&gt;branch&lt;/em&gt; &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;faria o &lt;code&gt;merge&lt;/code&gt; com o &lt;code&gt;fediverse_comments&lt;/code&gt; (agora já &amp;ldquo;limpo&amp;rdquo;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eu achava um pouco &amp;ldquo;indireto&amp;rdquo; demais &amp;ldquo;limpar&amp;rdquo; um &lt;em&gt;branch&lt;/em&gt; que em breve estaria em desuso para só depois fazer &lt;code&gt;merge&lt;/code&gt;, mas era como eu sabia fazer e nunca me questionei muito.&lt;/p&gt;
&lt;p&gt;Pois bem, descobri uma forma que me pareceu mais intuitiva semana passada. O comando &lt;code&gt;merge&lt;/code&gt; já possui uma &lt;em&gt;flag&lt;/em&gt; &lt;code&gt;--squash&lt;/code&gt; que faz o que eu precisava.&lt;/p&gt;
&lt;p&gt;Então, depois de terminar os trabalhos em &lt;code&gt;fediverse_comments&lt;/code&gt;, foi só trocar para &lt;code&gt;main&lt;/code&gt; e dar o seguinte comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git merge --squash fediverse_comments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O que esse comando faz é colocar no &lt;strong&gt;working directory&lt;/strong&gt; e na &lt;strong&gt;staging area&lt;/strong&gt; todas as alterações em &lt;code&gt;fediverse_comments&lt;/code&gt;. Porém, &lt;strong&gt;não faz &lt;code&gt;commit&lt;/code&gt;&lt;/strong&gt;. Acho isso positivo porque me dá a oportunidade de dar uma última revisada ou de fazer mais alguma alteração no &lt;em&gt;commit&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Não precisei nessa situação, então fiz um &lt;em&gt;commit&lt;/em&gt; de mensagem &lt;code&gt;Adiciona comentários pelo fediverso&lt;/code&gt; em &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;branches_depois.png&#34;
         alt=&#34;Screenshot do gitk mostrando um branch main com um único commit limpo que traz as alterações de todos os commits sujos de fediverse_comments.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Branch main &amp;#34;limpo&amp;#34; com um único commit com todas alternações feitas em fediverse_comments.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Dessa forma, meu &lt;code&gt;main&lt;/code&gt; ficou apenas com &lt;em&gt;commits&lt;/em&gt; &amp;ldquo;limpos&amp;rdquo; e poupei a etapa de fazer &lt;code&gt;squash&lt;/code&gt; no &lt;em&gt;feature branch&lt;/em&gt;. Devo fazer mais dessa forma no futuro.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gerando Feeds Com GitHub Actions e os Servindo Com GitHub Pages</title>
      <link>https://gmgall.net/blog/gerando-feeds-com-github-actions-e-os-servindo-com-github-pages/</link>
      <pubDate>Sun, 16 Apr 2023 14:01:34 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/gerando-feeds-com-github-actions-e-os-servindo-com-github-pages/</guid>
      <description>&lt;p&gt;Terminei o &lt;a href=&#34;https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/&#34;&gt;post anterior&lt;/a&gt; sobre o &lt;a href=&#34;https://github.com/ittner/newslinkrss&#34;&gt;newslinkrss&lt;/a&gt; falando o seguinte:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Com o comando que gera o &lt;em&gt;feed&lt;/em&gt; pronto, podemos remover a opção &lt;code&gt;--log&lt;/code&gt;. Para assinarmos o &lt;em&gt;feed&lt;/em&gt; criado podemos agendar a execução periódica do &lt;code&gt;newslinkrss&lt;/code&gt; via &lt;code&gt;cron&lt;/code&gt; e assinarmos o &lt;em&gt;feed&lt;/em&gt; resultante ou então indicarmos no nosso agregador RSS que a origem é um comando.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Isso cobre 2 de 3 possibilidades de consumo dos &lt;em&gt;feeds&lt;/em&gt; criados. São elas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;arquivo local;&lt;/li&gt;
&lt;li&gt;comando e&lt;/li&gt;
&lt;li&gt;URL.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A 1ª possibilidade, a de agendar o &lt;code&gt;newslinkrss&lt;/code&gt; para escrever periodicamente um &lt;em&gt;feed&lt;/em&gt; em &lt;code&gt;/path/para/o/feed.xml&lt;/code&gt; e depois informar ao agregador que a origem do &lt;em&gt;feed&lt;/em&gt; é um arquivo, não é viável caso o nosso agregador RSS seja um serviço &lt;em&gt;web&lt;/em&gt; como o &lt;a href=&#34;https://feedly.com/&#34;&gt;Feedly&lt;/a&gt;. Ele naturalmente não tem acesso ao nosso sistema de arquivos local.&lt;/p&gt;
&lt;p&gt;A 2ª possibilidade, a de informar que a origem do &lt;em&gt;feed&lt;/em&gt; é um comando, é interessante por não nos obrigar a agendar a execução periódica do &lt;code&gt;newslinkrss&lt;/code&gt;, mas não são todos os agregadores que possuem essa funcionalidade.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;liferea.png&#34;
         alt=&#34;Tela de cadastro do agregador RSS Liferea mostrando 3 fontes possíveis para o feed: URL, comando e arquivo local.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Tela de cadastro de feed no agregador Liferea. Não são todos que permitem usar um comando como fonte.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Resta a última possibilidade: gerar os &lt;em&gt;feeds&lt;/em&gt;, servi-los na &lt;em&gt;web&lt;/em&gt; e informar no agregador que a origem é a URL dos &lt;em&gt;feeds&lt;/em&gt; gerados. Isso vai funcionar em agregadores &lt;em&gt;web&lt;/em&gt;, &lt;em&gt;mobile&lt;/em&gt; ou &lt;em&gt;desktop&lt;/em&gt; e vai permitir que outras pessoas também cadastrem o &lt;em&gt;feed&lt;/em&gt; que você criou. É a possibilidade mais versátil porque estaremos fazendo o trabalho que o dono do site &lt;strong&gt;deveria ter feito, mas não fez&lt;/strong&gt;: servir um &lt;em&gt;feed&lt;/em&gt; para o site acessível a qualquer um na &lt;em&gt;web&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A desvantagem dessa abordagem é que nem todo mundo vai ter um servidor &lt;em&gt;web&lt;/em&gt; acessível na internet e configurar um só para servir &lt;em&gt;feeds&lt;/em&gt; de sites de terceiros pode ser trabalho demais. Seria ótimo uma alternativa mais simples e sugiro uma que depende apenas de termos uma conta no &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;: gerar os &lt;em&gt;feeds&lt;/em&gt; com &lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;GitHub Actions&lt;/a&gt; e servi-los via &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O &amp;ldquo;estalo&amp;rdquo; veio ao pensar no &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt; que uso para publicar meu site&lt;/a&gt;. Se tenho um &lt;em&gt;workflow&lt;/em&gt; que executa o &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; e faz o &lt;em&gt;deploy&lt;/em&gt; dos arquivos HTML/CSS/JS/etc. gerados por ele no GitHub Pages, seria questão de pouca adaptação ter um &lt;em&gt;workflow&lt;/em&gt; que executa o &lt;code&gt;newslinkrss&lt;/code&gt; e faz o &lt;em&gt;deploy&lt;/em&gt; dos arquivos XML gerados.&lt;/p&gt;
&lt;p&gt;Funcionou praticamente na 1ª tentativa. O &lt;a href=&#34;https://github.com/gmgall/feeds&#34;&gt;repositório&lt;/a&gt; com o &lt;a href=&#34;https://github.com/gmgall/feeds/blob/main/generate_feeds.sh&#34;&gt;script que gera os &lt;em&gt;feeds&lt;/em&gt;&lt;/a&gt; e o &lt;a href=&#34;https://github.com/gmgall/feeds/blob/main/.github/workflows/feeds.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt; que executa o script e faz o &lt;em&gt;deploy&lt;/em&gt;&lt;/a&gt; dos arquivos é público. O script &lt;code&gt;generate_feeds.sh&lt;/code&gt; é só um script Bash com uma sucessão de chamadas ao &lt;code&gt;newslinkrss&lt;/code&gt;. Os arquivos gerados em são escritos em &lt;code&gt;./feeds&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O arquivo &lt;code&gt;.github/workflows/feeds.yml&lt;/code&gt; descreve um &lt;em&gt;workflow&lt;/em&gt; do GitHub Actions que prepara o ambiente, executa o script &lt;code&gt;generate_feeds.sh&lt;/code&gt; e faz o &lt;em&gt;deploy&lt;/em&gt; dos arquivos em &lt;code&gt;./feeds&lt;/code&gt; no GitHub Pages. Vou descrever o que cada trecho do arquivo faz sem muito detalhamento porque acho que é praticamente autoexplicativo. Vou me deter no processo de configuração do Pages e das chaves no final, por ser as maiores &amp;ldquo;pegadinhas&amp;rdquo; do processo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Generate and deploy feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;schedule&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# Run workflow automatically&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;cron&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0 * * * *&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Runs every hour, on the hour&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;workflow_dispatch&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O trecho acima nomeia o &lt;em&gt;workflow&lt;/em&gt; e define que ele será executado em 2 situações:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Periodicamente, a cada 1h. A sintaxe usada é a do &lt;code&gt;cron&lt;/code&gt;. Se precisar de ajuda com ela, veja o assistente &lt;a href=&#34;https://crontab.guru/&#34;&gt;crontab guru&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ao se clicar no botão &lt;strong&gt;Run workflow&lt;/strong&gt; na página das &lt;em&gt;Actions&lt;/em&gt; do repositório no GitHub. Não é estritamente necessário, mas é interessante enquanto você estiver testando. Imagine precisar esperar uma hora pela próxima execução do &lt;em&gt;workflow&lt;/em&gt; só para descobrir se alguma alteração funcionou como previsto?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;build-deploy&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aqui é definido que a máquina virtual (o &lt;em&gt;runner&lt;/em&gt;) em que os passos seguintes serão executados usará a última versão disponível do Ubuntu Linux.&lt;/p&gt;
&lt;p&gt;Também executa o primeiro passo: fazer &lt;em&gt;checkout&lt;/em&gt; do repositório. O &lt;em&gt;runner&lt;/em&gt; vai precisar usar o script &lt;code&gt;generate_feeds.sh&lt;/code&gt;. Essa &lt;em&gt;action&lt;/em&gt; torna o script disponível no &lt;em&gt;runner&lt;/em&gt;. É como se estivéssemos fazendo &lt;code&gt;git clone&lt;/code&gt; no &lt;em&gt;runner&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Instala Python 3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/setup-python@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;python-version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3.9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Instala newslinkrss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;pip3 install newslinkrss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima instalamos o Python e o &lt;code&gt;newslinkrss&lt;/code&gt; via &lt;code&gt;pip&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Cria diretório que receberá os feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mkdir feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima criamos o diretório &lt;code&gt;feeds&lt;/code&gt;. Lembram que &lt;code&gt;generate_feeds.sh&lt;/code&gt; escreve sempre no diretório &lt;code&gt;feeds&lt;/code&gt;? Com esse passo, criamos esse diretório no &lt;em&gt;runner&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Executa newslinkrss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bash generate_feeds.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima executamos o script &lt;code&gt;generate_feeds.sh&lt;/code&gt;. O script está disponível no &lt;em&gt;runner&lt;/em&gt; porque o 1º passo que fizemos foi um &lt;em&gt;checkout&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;ACTIONS_DEPLOY_KEY&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gh-pages&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_DIR&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./feeds&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acima é feito o &lt;em&gt;deploy&lt;/em&gt; com a &lt;em&gt;action&lt;/em&gt; &lt;a href=&#34;https://github.com/peaceiris/actions-gh-pages&#34;&gt;&lt;code&gt;peaceiris/actions-gh-pages&lt;/code&gt;&lt;/a&gt;. Essa é a parte final do &lt;em&gt;workflow&lt;/em&gt; e a que eu acho que merece um pouco mais de atenção &lt;strong&gt;porque demanda configurações em outros locais&lt;/strong&gt;. Vou falar de cada variável abaixo de &lt;code&gt;env:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PUBLISH_DIR&lt;/code&gt; define o diretório cujo conteúdo será servido via GitHub Pages. Os &lt;em&gt;feeds&lt;/em&gt; são escritos em &lt;code&gt;./feeds&lt;/code&gt; no &lt;em&gt;runner&lt;/em&gt; pelo script &lt;code&gt;generate_feeds.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PUBLISH_BRANCH&lt;/code&gt; define o nome do &lt;em&gt;branch&lt;/em&gt; no nosso repositório que terá os arquivos servidos via GitHub Pages. Ele será um branch órfão do repositório. Não terá o script &lt;code&gt;generate_feeds.sh&lt;/code&gt;, o &lt;code&gt;README.md&lt;/code&gt;, o arquivo YAML que descreve o &lt;em&gt;workflow&lt;/em&gt; ou qualquer outra coisa que não sejam os arquivos servidos via GitHub Pages. Aqui estamos definindo o &lt;em&gt;branch&lt;/em&gt; &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Certifique-se de que as configurações do seu repositório em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Pages&lt;/em&gt; estejam como na imagem abaixo: definindo que a origem é um &lt;em&gt;branch&lt;/em&gt; de nome &lt;code&gt;gh-pages&lt;/code&gt;. No momento em que escrevo esse post, a URL para acessar essa configuração é &lt;a href=&#34;https://github.com/USER/REPO/settings/pages&#34;&gt;https://github.com/USER/REPO/settings/pages&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;pages_config.png&#34;
         alt=&#34;Configurações do GitHub Pages para um repositório no GitHub. As configurações mostram que o branch de origem é gh-pages.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Configurações do GitHub Pages.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;ACTIONS_DEPLOY_KEY&lt;/code&gt; define um &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets&#34;&gt;&lt;em&gt;segredo criptografado&lt;/em&gt;&lt;/a&gt; de mesmo nome com a &lt;strong&gt;parte privada&lt;/strong&gt; de um par de chaves que será usada para o &lt;a href=&#34;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/managing-deploy-keys&#34;&gt;&lt;em&gt;deploy&lt;/em&gt;&lt;/a&gt;. Os segredos são configurados em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Secrets and variables&lt;/em&gt;. No momento em que escrevo esse post, a URL é &lt;a href=&#34;https://github.com/USER/REPO/settings/secrets/actions&#34;&gt;https://github.com/USER/REPO/settings/secrets/actions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;strong&gt;parte pública&lt;/strong&gt; deve ser configurada em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Deploy keys&lt;/em&gt;. No momento em que escrevo esse post, a URL para essa configuração é &lt;a href=&#34;https://github.com/USER/REPO/settings/keys&#34;&gt;https://github.com/USER/REPO/settings/keys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A lógica é análoga a configurar login numa máquina remota via SSH com um par de chaves. A sua máquina local fica com a parte privada. A máquina remota fica com a parte pública.&lt;/p&gt;
&lt;p&gt;O repositório tem uma chave pública configurada para que apenas &lt;strong&gt;as máquinas com a parte privada correspondente&lt;/strong&gt; possam fazer &lt;em&gt;deploy&lt;/em&gt; nele. Essa parte privada é usada pelos &lt;em&gt;runners&lt;/em&gt; do GitHub Actions. Eles nada mais são que máquinas virtuais efêmeras, então não podemos logar nelas uma única vez e configurar a chave privada como faríamos em uma máquina qualquer que controlamos. A parte privada fica acessível aos &lt;em&gt;runners&lt;/em&gt; por meio dos &lt;a href=&#34;https://docs.github.com/en/actions/security-guides/encrypted-secrets&#34;&gt;segredos&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Como configuramos ambas as partes nas configurações de um mesmo repositório, pode ficar confuso o papel de cada parte. Espero as linhas acima tenham ajudado a elucidar o papel de cada uma. Mostro como fazer na prática abaixo.&lt;/p&gt;
&lt;h2 id=&#34;configurando-as-chaves&#34;&gt;Configurando as chaves&lt;/h2&gt;
&lt;h3 id=&#34;criando-as-chaves&#34;&gt;Criando as chaves&lt;/h3&gt;
&lt;p&gt;A criação do par de chaves pode ser feita com um comando como o seguinte:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa -b &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;git config user.email&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -f gh-pages -N &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2 arquivos serão criados por esse comando: &lt;code&gt;gh-pages&lt;/code&gt; e &lt;code&gt;gh-pages.pub&lt;/code&gt;, as chaves privada e pública, respectivamente.&lt;/p&gt;
&lt;h3 id=&#34;adicionando-a-chave-pública-como-deploy-key&#34;&gt;Adicionando a chave pública como &lt;em&gt;deploy key&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Acesse &lt;a href=&#34;https://github.com/USER/REPO/settings/keys&#34;&gt;https://github.com/USER/REPO/settings/keys&lt;/a&gt;, clique em &lt;em&gt;Add deploy key&lt;/em&gt; e cole a &lt;strong&gt;parte pública&lt;/strong&gt;. Lembre-se de marcar a caixa &lt;em&gt;Allow write access&lt;/em&gt; e clique em &lt;em&gt;Add key&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As configurações em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Deploy keys&lt;/em&gt; devem ficar parecidas às da figura abaixo.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;deploy_keys.png&#34;
         alt=&#34;Configurações das deploy keys num repositório do GitHub após a configuração de uma chave.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Configurações das deploy keys.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;adicionando-a-chave-privada-como-segredo&#34;&gt;Adicionando a chave privada como segredo&lt;/h3&gt;
&lt;p&gt;Acesse &lt;a href=&#34;https://github.com/USER/REPO/settings/secrets/actions&#34;&gt;https://github.com/USER/REPO/settings/secrets/actions&lt;/a&gt;, clique no botão verde &lt;em&gt;New repository secret&lt;/em&gt;, use &lt;code&gt;ACTIONS_DEPLOY_KEY&lt;/code&gt; como nome, cole a &lt;strong&gt;parte privada&lt;/strong&gt; no campo &lt;em&gt;Secret&lt;/em&gt; e clique em &lt;em&gt;Add secret&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As configurações em &lt;em&gt;Settings&lt;/em&gt; &amp;gt; &lt;em&gt;Secrets and variables&lt;/em&gt; &amp;gt; &lt;em&gt;Actions&lt;/em&gt; devem ficar parecidas às da figura abaixo.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;secrets.png&#34;
         alt=&#34;Configurações dos segredos criptografados num repositório do GitHub após a inserção de um segredo chamado &amp;#34;ACTIONS_DEPLOY_KEY&amp;#34;.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Configurações dos segredos num repositório após a inserção de um segredo chamado ACTIONS_DEPLOY_KEY.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Com o &lt;em&gt;workflow&lt;/em&gt; funcionando, os &lt;em&gt;feeds&lt;/em&gt; estarão disponíveis numa URL como &lt;a href=&#34;https://USER.github.io/REPO/FILE.xml&#34;&gt;https://USER.github.io/REPO/FILE.xml&lt;/a&gt;. No caso do &lt;em&gt;feed&lt;/em&gt; de exemplo que fiz para o &lt;a href=&#34;https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/&#34;&gt;post anterior&lt;/a&gt;, a URL é &lt;a href=&#34;https://gmgall.github.io/feeds/gmgall_untappd.xml&#34;&gt;https://gmgall.github.io/feeds/gmgall_untappd.xml&lt;/a&gt; (&lt;code&gt;feeds&lt;/code&gt; é o &lt;a href=&#34;https://github.com/gmgall/feeds&#34;&gt;nome do repositório&lt;/a&gt; e &lt;code&gt;gmgall_untappd.xml&lt;/code&gt; é o &lt;a href=&#34;https://github.com/gmgall/feeds/blob/464ddf704a3ee2d46bbc40220331b0bb27d4e767/generate_feeds.sh#L20&#34;&gt;nome do arquivo gerado pelo script&lt;/a&gt; &lt;code&gt;generate_feeds.sh&lt;/code&gt;).&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Usa o GitHub Actions para algo parecido? Pensou em outra forma de servir os &lt;em&gt;feeds&lt;/em&gt;? Seria ótimo conversar sobre isso. Entre com &lt;a href=&#34;https://gmgall.net/contact/&#34;&gt;contato&lt;/a&gt; se quiser trocar ideia.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando Feeds RSS Para Sites Que Não os Fornecem</title>
      <link>https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/</link>
      <pubDate>Wed, 12 Apr 2023 22:00:07 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/criando-feeds-rss-com-newslinkrss/</guid>
      <description>&lt;p&gt;Quem usa um agregador RSS como &amp;ldquo;porta de entrada&amp;rdquo; para a &lt;em&gt;web&lt;/em&gt; hoje em dia sofre com vários sites que deveriam publicar um &lt;em&gt;feed&lt;/em&gt;, mas não o fazem.&lt;/p&gt;
&lt;p&gt;Resta buscar/escrever ferramentas que usem APIs ou fazer &lt;em&gt;scraping&lt;/em&gt; para gerar os &lt;em&gt;feeds&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Muitas dessas ferramentas, como a &lt;a href=&#34;https://github.com/RSS-Bridge/rss-bridge&#34;&gt;RSS-Bridge&lt;/a&gt;, parecem interessantes, mas nunca parei para testá-las porque elas sempre me pareceram &lt;em&gt;complicadas demais&lt;/em&gt;. A RSS-Bridge, por exemplo, precisa de um servidor com PHP.&lt;/p&gt;
&lt;p&gt;Uma ferramenta de linha de comando, fácil de instalar, que eu pudesse agendar a execução via &lt;code&gt;cron&lt;/code&gt;, que recebesse as opções em texto e &amp;ldquo;jogasse&amp;rdquo; o resultado como texto na saída padrão, seria minha ferramenta ideal.&lt;/p&gt;
&lt;p&gt;Nunca tinha encontrado uma ferramenta assim, até recentemente. Ela chama-se &lt;a href=&#34;https://github.com/ittner/newslinkrss&#34;&gt;newslinkrss&lt;/a&gt;. Citando o README, &amp;ldquo;ele funciona como um &lt;em&gt;crawler&lt;/em&gt; ou &lt;em&gt;scraper&lt;/em&gt; de propósito específico&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Acho que o grande &amp;ldquo;pulo do gato&amp;rdquo; dessa ferramenta é servir como uma espécie de &lt;em&gt;framework&lt;/em&gt; para criação de &lt;em&gt;feeds&lt;/em&gt; RSS. Você só precisa entrar com o conhecimento específico sobre a página para a qual você está tentando criar um &lt;em&gt;feed&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Opções para capturar/filtrar a URL de cada item do &lt;em&gt;feed&lt;/em&gt; (o conteúdo de &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;), o corpo de cada item (o conteúdo de &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt;), a data de cada item (o conteúdo de &lt;code&gt;&amp;lt;pubDate&amp;gt;&lt;/code&gt;), o título do &lt;em&gt;feed&lt;/em&gt;&amp;hellip; Estão todas presentes.&lt;/p&gt;
&lt;p&gt;Fica mais simples de entender com um exemplo: criarei um &lt;em&gt;feed&lt;/em&gt; RSS para as cervejas em que dei &lt;em&gt;check-in&lt;/em&gt; no &lt;a href=&#34;https://untappd.com/&#34;&gt;Untappd&lt;/a&gt;. O ponto de partida é sempre a URL da página que lista os links para o que serão os &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;s individuais do &lt;em&gt;feed&lt;/em&gt;. Essa URL é o único parâmetro posicional que o comando recebe.&lt;/p&gt;
&lt;p&gt;Num blog, seria a URL da página com a lista dos posts. Num site de notícias, seria a URL da página principal de uma editoria qualquer. Nesse exemplo, é a URL da página do &lt;a href=&#34;https://untappd.com/user/gmgall&#34;&gt;meu perfil no Untappd&lt;/a&gt;. Ela contém uma &lt;em&gt;timeline&lt;/em&gt; com as cervejas abaixo de &lt;em&gt;Guilherme&amp;rsquo;s Recent Activity&lt;/em&gt;.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;untappd.png&#34;
         alt=&#34;Um perfil do Untappd visualizado visto pela interface web.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Meu perfil no Untappd.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; -o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Estou usando a opção &lt;code&gt;-o&lt;/code&gt; para gravar o &lt;em&gt;feed&lt;/em&gt; resultante num arquivo em &lt;code&gt;/tmp/feed.xml&lt;/code&gt;. O comportamento &lt;em&gt;default&lt;/em&gt; é imprimir na saída padrão. Enquanto estou criando o &lt;em&gt;feed&lt;/em&gt;, gosto de abri-lo com o Firefox para ter uma visualização melhor da estrutura.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;firefox_rss.png&#34;
         alt=&#34;Um arquivo XML sendo visualizado pelo Firefox.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;A estrutura do feed sendo mostrada pelo Firefox.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Analisando o que temos até aqui, percebemos que o comando está generalista demais. Todo link virou um item no &lt;em&gt;feed&lt;/em&gt;, até aqueles do topo da página (&amp;ldquo;Blog&amp;rdquo;, &amp;ldquo;Top Rated&amp;rdquo;, &amp;ldquo;Help&amp;rdquo;). Precisamos pegar só os links para os &lt;em&gt;check-ins&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Vamos inspecionar a página do perfil para descobrirmos que padrão seguem os links para os &lt;em&gt;check-ins&lt;/em&gt;. Usando a opção &lt;em&gt;Selecionar um elemento da página (Ctrl+Shift+C)&lt;/em&gt; e colocando o cursor do mouse sobre os links de texto &amp;ldquo;View Detailed Check-in&amp;rdquo;, percebemos que o padrão é &lt;code&gt;/user/gmgall/checkin/&lt;/code&gt; seguido por um número.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;inspetor.png&#34;
         alt=&#34;Firefox Developer Tools sendo usada para inspecionar a página de um perfil no Untappd&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Usando DevTools para descobrir o padrão dos links que apontam para a página individual de cada check-in.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A opção que usamos para capturarmos apenas os links que casam com determinada regex é &lt;code&gt;-p&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se abrirmos o &lt;em&gt;feed&lt;/em&gt; que temos nesse ponto, veremos que cada item é um &lt;em&gt;check-in&lt;/em&gt;. Outros links no perfil não viraram &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt;s no &lt;em&gt;feed&lt;/em&gt;. Exemplo de um dos itens:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;guid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isPermaLink=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Os links estão corretos, mas o título poderia ser melhor. O conteúdo de &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; também. Vamos usar a opção &lt;code&gt;--follow&lt;/code&gt; para tentarmos capturar mais informações por item.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--follow &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Agora cada item está como o abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd | UntappdLink text: Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;The Untappd Team&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;guid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isPermaLink=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Melhorou bastante, mas tem uma melhora óbvia: capturar a data. A opção &lt;code&gt;--follow&lt;/code&gt; nos dá a capacidade de capturar a data a partir da página de cada item individual com opções específicas para isso.&lt;/p&gt;
&lt;p&gt;Vamos usar o inspetor na página de um &lt;em&gt;check-in&lt;/em&gt; individual para vermos onde podemos pegar a data.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;inspetor2.png&#34;
         alt=&#34;Firefox Developer Tools sendo usado para inspecionar a página de um check-in no Untappd.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Inspecionando a página de um check-in no Untappd.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A data/hora do &lt;em&gt;check-in&lt;/em&gt; aparece num parágrafo (elemento &lt;code&gt;p&lt;/code&gt;) com a classe &lt;code&gt;time&lt;/code&gt;. Podemos capturá-la via um &lt;a href=&#34;https://developer.mozilla.org/pt-BR/docs/Web/CSS/CSS_Selectors&#34;&gt;seletor CSS&lt;/a&gt; com a opção &lt;code&gt;--date-from-csss&lt;/code&gt; (&lt;em&gt;date from CSS selector&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Vamos também usar a opção &lt;code&gt;--log DEBUG&lt;/code&gt; para vermos exatamente o que está sendo capturado como data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--follow &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--date-from-csss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--log DEBUG &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A opção &lt;code&gt;--log DEBUG&lt;/code&gt; vai imprimir linhas como a abaixo para cada item:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INFO:__main__:Following URL https://untappd.com/user/gmgall/checkin/1260790060
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEBUG:__main__:date-from-csss found candidate text: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sat, 01 Apr 2023 04:26:44 +0000&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEBUG:__main__:date regex matched: src&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Sat, &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;2023&lt;/span&gt; 04:26:44 +0000, rx&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;.+&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, result&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Sat, &lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;2023&lt;/span&gt; 04:26:44 +0000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEBUG:__main__:Found date from CSS Selector 2023-04-01 04:26:44+00:00
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nesse caso específico, já temos uma data em formato utilizável, mas raramente esse é o caso. Use &lt;code&gt;--log&lt;/code&gt; quando for criar &lt;em&gt;feeds&lt;/em&gt; para páginas com formatos mais complicados.&lt;/p&gt;
&lt;p&gt;Vamos ver como está cada item no &lt;em&gt;feed&lt;/em&gt; agora:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd | UntappdLink text: Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;The Untappd Team&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;guid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isPermaLink=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;Sat, 01 Apr 2023 04:26:44 GMT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nesse ponto, temos as datas de cada item (&lt;code&gt;&amp;lt;pubDate&amp;gt;&lt;/code&gt; agora está presente).&lt;/p&gt;
&lt;p&gt;Vamos melhorar o título de cada item. A parte inicial (&lt;code&gt;Guilherme is drinking a&lt;/code&gt;) e a final (&lt;code&gt;on Untappd&lt;/code&gt;) são redundantes. A opção &lt;code&gt;--title-regex&lt;/code&gt; nos permite filtrar os títulos dos itens. Ela recebe uma regex com um grupo e o que casar dentro desse grupo se torna o novo título.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--follow &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--date-from-csss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--log DEBUG &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--title-regex &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Guilherme is drinking a (.+) on Untappd&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cada item agora tem um título melhor:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Torobayo by Compañia Cervecera Kunstmann&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Guilherme is drinking a Torobayo by Compañia Cervecera Kunstmann on Untappd | UntappdLink text: Sat, 01 Apr 2023 04:26:44 +0000&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;The Untappd Team&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;guid&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isPermaLink=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;https://untappd.com/user/gmgall/checkin/1260790060&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;Sat, 01 Apr 2023 04:26:44 GMT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Precisamos agora de um corpo melhor em cada item. Atualmente em &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; temos apenas um texto com nome da cerveja e data/hora do &lt;em&gt;check-in&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Vamos usar &lt;code&gt;--with-body&lt;/code&gt; para incluirmos um corpo e &lt;code&gt;--body-csss&lt;/code&gt; para filtrarmos o que fará parte do corpo por meio de um seletor CSS. Usando apenas &lt;code&gt;--with-body&lt;/code&gt;, tudo entre &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; será incluído no corpo de cada item do &lt;em&gt;feed&lt;/em&gt;. Pode ser esse o comportamento desejado para páginas mais simples, mas não é o caso do Untappd.&lt;/p&gt;
&lt;p&gt;Inspecionando a página de cada &lt;em&gt;check-in&lt;/em&gt;, descobrimos que o &lt;em&gt;card&lt;/em&gt; com as informações do check-in é uma &lt;code&gt;div&lt;/code&gt; com as classes &lt;code&gt;checkin-info&lt;/code&gt; e &lt;code&gt;pad-it&lt;/code&gt;. Podemos selecioná-la com o seletor &lt;code&gt;.checkin-info.pad-it&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ newslinkrss &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.+/user/gmgall/checkin/[0-9]+&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--follow &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--date-from-csss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.time&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--log DEBUG &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--title-regex &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Guilherme is drinking a (.+) on Untappd&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--with-body &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	--body-csss &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.checkin-info.pad-it&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://untappd.com/user/gmgall&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;	-o /tmp/feed.xml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se visualizarmos esse &lt;em&gt;feed&lt;/em&gt; num agregador, temos um resultado bem satisfatório:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;quite_rss.png&#34;
         alt=&#34;Agregador RSS exibindo o feed que acabamos de criar.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Agregador QuiteRSS mostrando o feed que acabamos de criar nesse post.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Com o comando que gera o &lt;em&gt;feed&lt;/em&gt; pronto, podemos remover a opção &lt;code&gt;--log&lt;/code&gt;. Para assinarmos o &lt;em&gt;feed&lt;/em&gt; criado podemos agendar a execução periódica do &lt;code&gt;newslinkrss&lt;/code&gt; via &lt;code&gt;cron&lt;/code&gt; e assinarmos o &lt;em&gt;feed&lt;/em&gt; resultante ou então indicarmos no nosso agregador RSS que a origem é um comando.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Como você tem lidado com sites que não oferecem &lt;em&gt;feeds&lt;/em&gt;? Conhece alguma ferramenta parecida com o &lt;code&gt;newslinkrss&lt;/code&gt;? Adoraria ouvir sobre. Faça &lt;a href=&#34;https://gmgall.net/contact/&#34;&gt;contato&lt;/a&gt; se quiser conversar sobre isso.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Acompanhando Suas Inscrições no YouTube por RSS</title>
      <link>https://gmgall.net/blog/acompanhando-suas-inscricoes-no-youtube-por-rss/</link>
      <pubDate>Thu, 23 Feb 2023 15:01:04 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/acompanhando-suas-inscricoes-no-youtube-por-rss/</guid>
      <description>&lt;p&gt;TL;DR. Escrevi uma ferramenta que converte um CSV com suas inscrições no YouTube em um arquivo &lt;a href=&#34;http://opml.org/&#34;&gt;OPML&lt;/a&gt; com os &lt;em&gt;feeds&lt;/em&gt; RSS dos canais. Esse arquivo OPML é importável em quase todos os agregadores RSS. Use o conversor em &lt;a href=&#34;https://yt2opml.gmgall.net/&#34;&gt;https://yt2opml.gmgall.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Com FreshRSS + extensões, não é necessário nem sair do agregador para assistir aos vídeos.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Procurei colocar RSS de volta na minha vida desde a &lt;a href=&#34;https://gmgall.net/blog/tchau-twitter&#34;&gt;debacle do Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sempre fui fã do padrão RSS. Acho que é a melhor forma de consumo de conteúdo na &lt;em&gt;web&lt;/em&gt;. Hoje, é mais importante do que nunca, já que dá liberdade ao usuário de desviar das diversas formas pelas quais &lt;a href=&#34;https://thewebisfucked.com/&#34;&gt;a &lt;em&gt;web&lt;/em&gt; se tornou uma merda&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Só que eu era uma das folclóricas viúvas do &lt;a href=&#34;https://pt.wikipedia.org/wiki/Google_Reader&#34;&gt;Google Reader&lt;/a&gt;. Não tinha me adaptado bem a nenhum outro agregador depois dele. Tentei usar vários, mas nunca parava com nenhum. O que usei por mais tempo depois do Reader foi o &lt;a href=&#34;https://feedly.com/&#34;&gt;Feedly&lt;/a&gt;, mas ele nunca virou meu &amp;ldquo;ponto central&amp;rdquo; de consumo da &lt;em&gt;web&lt;/em&gt; como o Reader foi.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;viuva_google_reader_23-02-2023.png&#34;
         alt=&#34;Print de tweet com texto &amp;#34;Eu trocaria fácil todas as minhas redes sociais pelo Google Reader&amp;#34;.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Toda viúva do Google Reader desde 2013.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Então fui mantendo o Twitter como &amp;ldquo;agregador&amp;rdquo;. Junta isso com o fato de estarem lá várias pessoas que eu gosto e a comodidade falou mais alto. Meu &amp;ldquo;ponto central&amp;rdquo; virou o Twitter.&lt;/p&gt;
&lt;p&gt;O novo senhor feudal do Twitter ser um &lt;a href=&#34;https://www.platformer.news/p/yes-elon-musk-created-a-special-system&#34;&gt;déspota&lt;/a&gt; &lt;a href=&#34;https://arstechnica.com/tech-policy/2023/02/musk-fired-top-engineer-for-explaining-why-his-tweets-views-are-down/&#34;&gt;mimado&lt;/a&gt; me colocou para procurar, mais uma vez, um agregador que pudesse usar rotineiramente.&lt;/p&gt;
&lt;p&gt;Estou feliz em dizer que parece que a busca terminou. Estou usando o &lt;a href=&#34;https://freshrss.org/&#34;&gt;FreshRSS&lt;/a&gt; há uns 15 dias e estou bem satisfeito.&lt;/p&gt;
&lt;p&gt;Minha &amp;ldquo;dieta de informações&amp;rdquo; melhorou demais. Já não fico tão ansioso com o &lt;em&gt;doomscrolling&lt;/em&gt; na &lt;em&gt;timeline&lt;/em&gt; do Twitter ou lendo a última polêmica de política que chegou aos &lt;em&gt;trending topics&lt;/em&gt;. Estou lendo textos mais longos, sem um algoritmo no caminho.&lt;/p&gt;
&lt;p&gt;Foi apenas natural que eu quisesse consumir &lt;strong&gt;tudo&lt;/strong&gt; via RSS, não apenas texto. O próximo candidato óbvio era o YouTube. Com frequência eu abro o &lt;em&gt;app&lt;/em&gt; e vejo alguma coisa indicada na &lt;em&gt;home&lt;/em&gt; ou então entro numa sequência de &lt;em&gt;Shorts&lt;/em&gt; que me fazem gastar um tempão neles enquanto os vídeos dos canais em que sou inscrito mesmo vão ficando para depois.&lt;/p&gt;
&lt;p&gt;Minha intuição é que a Google não ia deixar os canais com &lt;em&gt;feeds&lt;/em&gt; RSS, justamente para forçar a visita ao site. Fico feliz de estar errado. Todo canal tem um &lt;em&gt;feed&lt;/em&gt; (por enquanto?), só é uma funcionalidade um pouco &amp;ldquo;escondida&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Os canais no YouTube têm um &lt;em&gt;Channel ID&lt;/em&gt; único e a URL dos canais seguem o formato &lt;code&gt;https://www.youtube.com/channel/ID&lt;/code&gt;.  O feed fica em &lt;code&gt;https://www.youtube.com/feeds/videos.xml?channel_id=ID&lt;/code&gt;. Usando como exemplo o canal &lt;a href=&#34;https://www.youtube.com/@TeseOnze&#34;&gt;Tese Onze&lt;/a&gt;, temos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;URL do canal: &lt;a href=&#34;http://www.youtube.com/channel/UC0fGGprihDIlQ3ykWvcb9hg&#34;&gt;http://www.youtube.com/channel/UC0fGGprihDIlQ3ykWvcb9hg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;URL do &lt;em&gt;feed&lt;/em&gt; RSS: &lt;a href=&#34;https://www.youtube.com/feeds/videos.xml?channel_id=UC0fGGprihDIlQ3ykWvcb9hg&#34;&gt;https://www.youtube.com/feeds/videos.xml?channel_id=UC0fGGprihDIlQ3ykWvcb9hg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O problema é que ninguém divulga a URL do seu canal nesse formato. Em geral se usa o formato mais amigável &lt;a href=&#34;https://www.youtube.com/@TeseOnze&#34;&gt;https://www.youtube.com/@TeseOnze&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Então, quem quer acompanhar via RSS os vídeos de suas inscrições no YouTube precisa:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;obter uma lista dos IDs de todos os canais em que é inscrito;&lt;/li&gt;
&lt;li&gt;gerar uma lista das URLs dos &lt;em&gt;feeds&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;importar todos os &lt;em&gt;feeds&lt;/em&gt; da lista no agregador.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O formato usado no mundo RSS para importar/exportar listas de &lt;em&gt;feeds&lt;/em&gt; é o &lt;a href=&#34;http://opml.org/&#34;&gt;OPML&lt;/a&gt;, baseado em XML.&lt;/p&gt;
&lt;p&gt;Segue um exemplo de OPML:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-XML&#34; data-lang=&#34;XML&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;ISO-8859-1&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;opml&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;mySubscriptions.opml&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dateCreated&amp;gt;&lt;/span&gt;Sat, 18 Jun 2005 12:11:52 GMT&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dateCreated&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;outline&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yahoo! News: Technology&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;description=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Technology&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;htmlUrl=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://news.yahoo.com/news?tmpl=index&amp;amp;amp;cid=738&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;language=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;unknown&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yahoo! News: Technology&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rss&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RSS2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlUrl=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://rss.news.yahoo.com/rss/tech&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/opml&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O padrão OPML é quase autoexplicativo: é simplesmente um elemento &lt;code&gt;&amp;lt;opml&amp;gt;&lt;/code&gt; com 2 elementos obrigatórios: &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; e &lt;code&gt;&amp;lt;outline&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Dentro do 1º vão metainformações do arquivo.&lt;/p&gt;
&lt;p&gt;Dentro do 2º vai a lista dos &lt;em&gt;feeds&lt;/em&gt; em si, cada um dentro de um &lt;code&gt;&amp;lt;outline&amp;gt;&lt;/code&gt;. Os &lt;code&gt;&amp;lt;outlines&amp;gt;&lt;/code&gt;s podem ser aninhados (caso se deseje colocar &lt;em&gt;feeds&lt;/em&gt; dentro de uma categoria, por exemplo) e claro que uma lista típica vai trazer mais de um &lt;em&gt;feed&lt;/em&gt;, mas a intenção aqui é só mostrar o formato. O atributo chave para a gente aqui é o &lt;code&gt;xmlUrl&lt;/code&gt;, que é o endereço do &lt;em&gt;feed&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Nós já sabemos o formato usado para importação de &lt;em&gt;feeds&lt;/em&gt; e como formar a URL de um &lt;em&gt;feed&lt;/em&gt; de um canal no YouTube a partir do seu ID.&lt;/p&gt;
&lt;p&gt;Só precisamos obter a lista dos IDs dos canais agora.&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;https://takeout.google.com/&#34;&gt;Google Takeout&lt;/a&gt; é uma forma de fazer download de todos os registros que a Google possui de um usuário. Basta não esquecer de marcar o YouTube que o arquivo resultante vai conter uma lista de inscrições em &lt;code&gt;Takeout/YouTube and YouTube Music/subscriptions/subscriptions.csv&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O formato é bem simples, é um CSV de 3 colunas:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Channel ID,Channel URL,Channel title
UC0fGGprihDIlQ3ykWvcb9hg,http://www.youtube.com/channel/UC0fGGprihDIlQ3ykWvcb9hg,Tese Onze
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Se você é como eu, pensou logo em fazer um &lt;em&gt;shell script&lt;/em&gt; que para cada linha do CSV:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;concatena &lt;code&gt;https://www.youtube.com/feeds/videos.xml?channel_id=&lt;/code&gt; com os valores da 1ª coluna;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;joga o valor resultante dentro de um &lt;code&gt;&amp;lt;outline&amp;gt;&lt;/code&gt;, numa propriedade &lt;code&gt;xmlURL&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Provavelmente funcionaria, mas decidi não &lt;a href=&#34;https://stackoverflow.com/questions/3034611/whats-so-bad-about-building-xml-with-string-concatenation&#34;&gt;correr&lt;/a&gt; com &lt;a href=&#34;https://news.ycombinator.com/item?id=16915823&#34;&gt;tesouras&lt;/a&gt; dessa vez e usei pacotes JavaScript próprios para processar &lt;a href=&#34;https://d3js.org/&#34;&gt;CSV&lt;/a&gt; e &lt;a href=&#34;https://github.com/scripting/opmlPackage&#34;&gt;OPML&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se quiser usar no seu navegador, acesse: &lt;a href=&#34;https://yt2opml.gmgall.net/&#34;&gt;https://yt2opml.gmgall.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tudo é 100% feito no lado do cliente. O &lt;a href=&#34;https://github.com/gmgall/YTtoOPML&#34;&gt;código&lt;/a&gt; é de um &lt;em&gt;backender&lt;/em&gt;, então as manipulações do DOM provavelmente poderiam ser mais elegantes, mas funciona.&lt;/p&gt;
&lt;p&gt;Com o arquivo OPML gerado, foi só importá-lo no FreshRSS. Uma possibilidade &lt;strong&gt;muito interessante&lt;/strong&gt; nele é a instalação de uma &lt;a href=&#34;https://github.com/kevinpapst/freshrss-youtube&#34;&gt;extensão&lt;/a&gt; que incorpora os vídeos dentro. Assim, não é necessário sair do agregador para assistir aos vídeos. Mostrei como fica no vídeo abaixo.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/FwTSpqo4Ucw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;FreshRSS com extensão pra embutir vídeos do YouTube ativada.&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Bem prático, não?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shortcodes no Hugo Inserem Quebras de Linha Indesejadas</title>
      <link>https://gmgall.net/blog/shortcodes-no-hugo-inserem-quebras-de-linha-indesejadas/</link>
      <pubDate>Wed, 08 Feb 2023 11:57:12 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/shortcodes-no-hugo-inserem-quebras-de-linha-indesejadas/</guid>
      <description>&lt;p&gt;Essa já &amp;ldquo;me pegou&amp;rdquo; algumas vezes e demorei um pouco para encontrar solução, então documento aqui.&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; insere quebras de linha após o conteúdo gerado pelos &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;shortcodes&lt;/a&gt; que podem causar a renderização do HTML de forma indesejada.&lt;/p&gt;
&lt;p&gt;Exemplo: suponha que no seu site você queira tratar das palavras sagradas protegidas pelos &lt;a href=&#34;https://youtu.be/0e2kaQqxmQ0&#34;&gt;Cavaleiros que Dizem Ni&lt;/a&gt;. Você quer usar um &lt;em&gt;snippet&lt;/em&gt; de código para inseri-las, afinal são sagradas e você não quer correr o risco de digitá-las errado.&lt;/p&gt;
&lt;p&gt;Então cria o seguinte &lt;em&gt;shortcode&lt;/em&gt; em &lt;code&gt;layouts/shortcodes/sacred_words.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ni&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;peng&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neee-won&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;upper&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;delimit&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; e &amp;#34;&lt;/span&gt; ) }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;E usa o &lt;em&gt;shortcode&lt;/em&gt; no meio do markdown em alguma página de conteúdo. Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Os Cavaleiros que Dizem &amp;#34;Ni&amp;#34; são os quardiões das palavras sagradas {{&amp;lt; &lt;span style=&#34;color:#f92672&#34;&gt;sacred_words&lt;/span&gt; &amp;gt;}}.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ao visualizar o HTML gerado para esse trecho, vê algo como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Os Cavaleiros que Dizem &amp;amp;ldquo;Ni&amp;amp;rdquo; são os quardiões das palavras sagradas 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NI, PENG E NEEE-WON
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Tem uma quebra de linha indesejada no final do conteúdo gerado pelo &lt;em&gt;shortcode&lt;/em&gt;.&lt;/strong&gt; O código do &lt;em&gt;shortcode&lt;/em&gt; não insere essa quebra, mas ela está lá. Isso faz esse trecho ser renderizado da seguinte forma pelos navegadores:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Os Cavaleiros que Dizem “Ni” são os quardiões das palavras sagradas NI, PENG E NEEE-WON .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Tem um espaço entre a última palavra e o ponto final da frase&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Encontrei &lt;strike&gt;as gambiarras&lt;/strike&gt;
 os &lt;em&gt;workarounds&lt;/em&gt; para resolver esse problema numa &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/1753&#34;&gt;issue do próprio projeto Hugo&lt;/a&gt;, mas parece que a discussão sobre mudar esse comportamento dos &lt;em&gt;shortcodes&lt;/em&gt; não andou muito. Resta-nos nos adaptar.&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;Uma das gambiarras&lt;/strike&gt;
Um dos recursos técnicos é truncar o arquivo do &lt;em&gt;shortcode&lt;/em&gt; com o comando &lt;code&gt;truncate -s -1 layouts/shortcodes/sacred_words.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Depois disso, o HTML gerado para o trecho que usa o &lt;em&gt;shortcode&lt;/em&gt; fica assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Os Cavaleiros que Dizem &amp;amp;ldquo;Ni&amp;amp;rdquo; são os quardiões das palavras sagradas 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NI, PENG E NEEE-WON.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;E é renderizado da seguinte forma:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Os Cavaleiros que Dizem “Ni” são os quardiões das palavras sagradas NI, PENG E NEEE-WON.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Vitória!&lt;/p&gt;
&lt;p&gt;Satisfeito, você decide que só falta uma coisa para o seu &lt;em&gt;shortcode&lt;/em&gt; ficar perfeito: ele precisa inserir código para gerar um alerta gritando &amp;ldquo;ni&amp;rdquo; a cada vez que a página é (re)carregada. Por sorte, pouco código precisa ser adicionado para isso. O &lt;em&gt;shortcode&lt;/em&gt; agora tem a seguinte implementação:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ni&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;peng&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neee-won&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;upper&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;delimit&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; e &amp;#34;&lt;/span&gt; ) }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NI&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;)&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dessa vez você está esperto e &lt;strong&gt;lembra de truncar o arquivo&lt;/strong&gt;. Quando vai ver a página gerada num navegador, o alerta aparece, mas&amp;hellip;&lt;/p&gt;
&lt;p&gt;O espaço entre a última palavra sagrada e o ponto final está lá de novo! Mesmo após usar o &lt;code&gt;truncate&lt;/code&gt;! O HTML foi gerado com uma quebra de linha indesejada novamente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Os Cavaleiros que Dizem &amp;amp;ldquo;Ni&amp;amp;rdquo; são os quardiões das palavras sagradas 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NI, PENG E NEEE-WON
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NI&amp;#39;&lt;/span&gt;)&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se o seu &lt;em&gt;shortcode&lt;/em&gt; vai inserir mais coisa do que a saída gerada pelos comandos da linguagem de &lt;em&gt;template&lt;/em&gt; do Go, como é o trecho &lt;code&gt;&amp;lt;script&amp;gt;alert(&#39;NI&#39;)&amp;lt;/script&amp;gt;.&amp;lt;/p&amp;gt;&lt;/code&gt; no exemplo acima, você precisa retirar aquela quebra antes do trecho também.&lt;/p&gt;
&lt;p&gt;Isso pode ser feito deixando o &lt;em&gt;shortcode&lt;/em&gt; assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ni&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;peng&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neee-won&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;upper&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;delimit&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; e &amp;#34;&lt;/span&gt; ) }}{{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NI&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;)&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Agora sim, as quebras de linha que fazem a página ser renderizada erradamente estão fora. O espaço antes do ponto final não aparece mais e o alerta ocorre.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A versão dos softwares envolvidos no momento em que escrevo esse texto são as seguintes:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ go version
go version go1.19.4 linux/amd64
$ hugo version
hugo v0.109.0+extended linux/amd64 BuildDate=unknown
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Build Websites With Hugo</title>
      <link>https://gmgall.net/books/build-websites-with-hugo/</link>
      <pubDate>Sun, 15 Jan 2023 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/build-websites-with-hugo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; é o gerador de sites estáticos usado para gerar esse site. Depois de alguma pesquisa, me pareceu a melhor ferramenta do tipo disponível.&lt;/p&gt;
&lt;p&gt;Adotá-lo não foi um processo rápido para mim. Sempre que eu parava para estudá-lo por tutoriais no YouTube ou pela documentação oficial, acabava um pouco frustrado por não estar entendendo 100% do que estava acontecendo. Aí deixava ele de lado por um tempo.&lt;/p&gt;
&lt;p&gt;O Hugo não é uma ferramenta difícil de usar, longe disso. O problema é que com frequência eu esbarrava em termos específicos dele nos tutoriais. Nunca existia muita preocupação em explicar o que eles significavam. Parecia que os autores sempre assumiam algum conhecimento prévio da ferramenta e eu não tinha conhecimento algum.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34;&gt;&lt;em&gt;Front matter&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/content-management/archetypes/&#34;&gt;&lt;em&gt;archetypes&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/content-management/page-bundles/&#34;&gt;&lt;em&gt;page bundles&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;&lt;em&gt;shortcodes&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/content-management/taxonomies/&#34;&gt;&lt;em&gt;taxonomies&lt;/em&gt;&lt;/a&gt;&amp;hellip; Um ou mais termos desses eventualmente apareciam &amp;ldquo;jogados&amp;rdquo; no meio da explicação e isso me fazia adiar o consumo daquela documentação para depois que eu tivesse dominado esses conceitos.&lt;/p&gt;
&lt;p&gt;A documentação oficial é boa, mas mais como guia de referência do que para aprender do zero.&lt;/p&gt;
&lt;p&gt;O livro &lt;em&gt;Build Websites With Hugo&lt;/em&gt; foi o livro que me fez sair desse zero para decidir manter esse site com o Hugo. &lt;strong&gt;É um livro 100% orientado pela prática.&lt;/strong&gt; A proposta dele é fazer um site de portfólio pessoal que sai do mais simples possível e vai ficando mais sofisticado a cada capítulo.&lt;/p&gt;
&lt;p&gt;Eu fui lendo, tomando notas e fazendo o site proposto pelo livro. Mantive a evolução do site em &lt;a href=&#34;https://github.com/gmgall/hugo-example&#34;&gt;um repositório git&lt;/a&gt; e tentei fazer mensagens de &lt;em&gt;commit&lt;/em&gt; informativas para eu poder rever algum conceito depois caso fosse necessário.&lt;/p&gt;
&lt;p&gt;2 coisas &amp;ldquo;clarearam&amp;rdquo; bastante o Hugo para mim:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ler esse livro, fazendo o site proposto e&lt;/li&gt;
&lt;li&gt;fazer esse site que você está lendo com ele.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Escolhi &lt;a href=&#34;https://themes.gohugo.io/themes/smol/&#34;&gt;um tema&lt;/a&gt; &lt;a href=&#34;https://themes.gohugo.io/tags/minimal/&#34;&gt;minimalista&lt;/a&gt; e fiz umas poucas adaptações. Além da minha preferência por sites em que o foco é o conteúdo, ser um tema simples tornou mais fácil fazer pequenas alterações.&lt;/p&gt;
&lt;p&gt;Além de interessante, foi bem divertido. Esse livro é o manual que falta para o Hugo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://gmgall.net/blog/hello-world/</link>
      <pubDate>Thu, 12 Jan 2023 13:45:38 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/hello-world/</guid>
      <description>&lt;p&gt;Eu já tentei manter um site pessoal na internet N vezes. Nunca foi &amp;ldquo;pra frente&amp;rdquo;. Essa é a tentativa N + 1.&lt;/p&gt;
&lt;p&gt;Não preciso ser convencido da importância da escrita, sei dos benefícios que posso tirar dela. Escrever nos ajuda a entender as coisas, robustece nosso pensamento. Existem coisas que parecem bem estruturadas na nossa cabeça até que tentemos escrever ou conversar com alguém sobre. Escrever é &lt;a href=&#34;https://en.wikipedia.org/wiki/Debugging&#34;&gt;&lt;em&gt;debugar&lt;/em&gt;&lt;/a&gt; a si mesmo.&lt;/p&gt;
&lt;p&gt;Depois que entendi isso, abandonei qualquer pretensão de originalidade, que, aliás, é &lt;a href=&#34;https://guzey.com/personal/why-have-a-blog/#but-i-dont-have-anything-original-to-say-and-i-would-be-just-repeating-things-said-elsewhere-on-the-internet&#34;&gt;superestimada&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ainda assim, a procrastinação seguia. Eu implicava com 2 coisas principalmente: a organização do conteúdo e a &lt;em&gt;stack&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;organização-do-conteúdo&#34;&gt;Organização do conteúdo&lt;/h2&gt;
&lt;p&gt;Ter um blog em que escrevesse tudo que eu quisesse, usando apenas tags para organizar o conteúdo, não me parecia ideal. E se alguém de TI entrasse no site buscando conteúdo técnico e tivesse que navegar por um monte de textos opinativos? E se alguma amiga de fora da área de tecnologia entrasse no site e visse um monte de textos sobre desenvolvimento de software?&lt;/p&gt;
&lt;p&gt;Quero poder escrever sobre tudo que me interessa, mas também não quero alienar uma potencial audiência apresentando tudo &amp;ldquo;junto e misturado&amp;rdquo;, numa forma difícil de navegar.&lt;/p&gt;
&lt;p&gt;Considerei sites separados para cada tipo de conteúdo, mas o trabalho extra necessário para manter mais de um site me demoveu dessa ideia. Fora que suscita a pergunta: qual critério eu deveria usar para colocar determinado conteúdo num site e não no outro? Os sites pessoais mais &lt;a href=&#34;https://aurelio.net/&#34;&gt;interessantes&lt;/a&gt; &lt;a href=&#34;https://epxx.co/&#34;&gt;que&lt;/a&gt; &lt;a href=&#34;https://thobias.org/&#34;&gt;conheço&lt;/a&gt; tratam de &lt;a href=&#34;https://epxx.co/artigos/index_pens.html&#34;&gt;tudo&lt;/a&gt; &lt;a href=&#34;https://aurelio.net/fvm/&#34;&gt;que &amp;ldquo;dá na telha&amp;rdquo;&lt;/a&gt; dos donos. O meu seria assim também.&lt;/p&gt;
&lt;p&gt;Foi remoendo as questões acima que decidi usar a organização com 2 &lt;a href=&#34;https://gohugo.io/content-management/taxonomies/&#34;&gt;taxonomias&lt;/a&gt; (&lt;strong&gt;categorias e tags&lt;/strong&gt;), que já é usada em muitos blogs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uma &lt;a href=&#34;https://gmgall.net/categories&#34;&gt;categoria&lt;/a&gt; é uma classificação mais ampla e dificilmente um post vai estar em mais de uma categoria. Para começar, terei 2 categorias: uma para posts &lt;a href=&#34;https://gmgall.net/categories/tech&#34;&gt;técnicos&lt;/a&gt; e outra para posts &lt;a href=&#34;https://gmgall.net/categories/non-tech&#34;&gt;não técnicos&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Uma &lt;a href=&#34;https://gmgall.net/tags&#34;&gt;tag&lt;/a&gt; é uma classificação mais estrita e frequentemente um post terá mais de uma tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Além disso, existem as seções de conteúdo separadas. Nelas cada página pode receber categorias e tags também, mas elas são apresentadas de forma diferente dos textos. A única seção separada hoje é a de &lt;a href=&#34;https://gmgall.net/books&#34;&gt;leituras&lt;/a&gt;. Pretendo que cada página sobre um livro mostre ao menos uma imagem da capa e informações do livro em destaque.&lt;/p&gt;
&lt;p&gt;Cada categoria, tag e seção separada terá seu próprio &lt;em&gt;feed&lt;/em&gt; RSS. Um potencial leitor pode assinar o &lt;em&gt;feed&lt;/em&gt; específico e acompanhar apenas o conteúdo de seu interesse.&lt;/p&gt;
&lt;h2 id=&#34;stack&#34;&gt;Stack&lt;/h2&gt;
&lt;p&gt;Depois de algumas tentativas de usar &lt;a href=&#34;https://en.wikipedia.org/wiki/Content_management_system&#34;&gt;CMS&lt;/a&gt;s, ficou claro que eu não queria ter o trabalho de instalar e manter atualizados os softwares de uma pilha &lt;a href=&#34;https://en.wikipedia.org/wiki/LAMP_(software_bundle)&#34;&gt;LAMP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Static_site_generator&#34;&gt;Geradores de sites estáticos&lt;/a&gt; seriam meu caminho. Li sobre as opções disponíveis e fiquei convencido de que o melhor &amp;ldquo;no mercado&amp;rdquo; é o &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Decidi usá-lo. Gostei do que vi nos primeiros usos, mas demorei um pouco até encontrar um &lt;a href=&#34;https://www.pragprog.com/titles/bhhugo/build-websites-with-hugo/&#34;&gt;livro que me ensinou decentemente&lt;/a&gt; sobre ele.&lt;/p&gt;
&lt;p&gt;Para hospedagem, estou usando &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para fazer o &lt;em&gt;build&lt;/em&gt; e o &lt;em&gt;deploy&lt;/em&gt;, estou usando &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;. Existem &lt;em&gt;actions&lt;/em&gt; prontas para &lt;a href=&#34;https://github.com/marketplace/actions/hugo-setup&#34;&gt;instalar o Hugo&lt;/a&gt; e &lt;a href=&#34;https://github.com/marketplace/actions/github-pages-action&#34;&gt;fazer o &lt;em&gt;deploy&lt;/em&gt; no GitHub Actions&lt;/a&gt;, então o &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt;&lt;/a&gt; fica relativamente simples.&lt;/p&gt;
&lt;p&gt;O primeiro lugar em que li sobre esse tipo de &lt;em&gt;workflow&lt;/em&gt; foi em &lt;a href=&#34;https://www.morling.dev&#34;&gt;morling.dev&lt;/a&gt;, no post &lt;a href=&#34;https://www.morling.dev/blog/automatically-deploying-hugo-website-via-github-actions/&#34;&gt;&lt;em&gt;Automatically Deploying a Hugo Website via GitHub Actions&lt;/em&gt;&lt;/a&gt;. Seguindo esse caminho, você fica com um repositório único que contém o código fonte do site (em um &lt;em&gt;branch&lt;/em&gt; principal) e os arquivos que efetivamente são servidos (em um &lt;em&gt;branch&lt;/em&gt; &lt;a href=&#34;https://dev.to/mcaci/how-to-create-an-orphan-branch-in-git-35ac&#34;&gt;órfão&lt;/a&gt; &lt;code&gt;gp-pages&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Outro padrão que vi sendo bastante usado é ter 2 repositórios: um só para o código fonte e outro só para os arquivos que serão servidos pelo GitHub Pages. Veja um exemplo em &lt;a href=&#34;https://ruddra.com/hugo-deploy-static-page-using-github-actions/&#34;&gt;&lt;em&gt;Hugo: Deploy Static Site using GitHub Actions&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Pensar nisso tudo acima antes mesmo de ter o que postar é complicar demais o que é simples, você deve estar pensando. O ideal seria simplesmente começar e ir ajustando o que fosse necessário pelo caminho.&lt;/p&gt;
&lt;p&gt;E você estaria certa. Procrastinei manter um site na web por muito mais tempo do que me orgulho. Estou com o domínio gmgall.net &amp;ldquo;parado&amp;rdquo; há vários anos.&lt;/p&gt;
&lt;p&gt;Protelei tanto por uma ansiedade de me expor que só consegui lidar melhor com &lt;a href=&#34;https://pt.wikipedia.org/wiki/Psicoterapia&#34;&gt;ajuda&lt;/a&gt;. Então deseje-me sorte e seja bem vinda, pessoa leitora! 😁&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Engenheiros do Caos</title>
      <link>https://gmgall.net/books/engenheiros-do-caos/</link>
      <pubDate>Sun, 21 Aug 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/engenheiros-do-caos/</guid>
      <description>&lt;p&gt;Esse livro apresenta um histórico recente dos métodos de comunicação dessa &amp;ldquo;nova&amp;rdquo; direita populista que tem &amp;ldquo;nadado de braçada&amp;rdquo; nas redes sociais.&lt;/p&gt;
&lt;p&gt;Uma combinação de líderes populistas com técnicas sofisticadas de persuasão baseadas em &lt;em&gt;microtargeting&lt;/em&gt;, &lt;em&gt;big data&lt;/em&gt; e &lt;em&gt;fake news&lt;/em&gt; resultou em dividendos eleitorais por todo o mundo, especialmente em uma conjuntura de revolta intensa  - porém difusa - com os ditos políticos &amp;ldquo;tradicionais&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Brexit, Donald Trump, Boris Johnson, Matteo Salvini e Jair Bolsonaro são flagelos paridos por esse processo. Compreender as ferramentas usadas por esses engenheiros do caos é um pequeno passo para sairmos desse buraco.&lt;/p&gt;
&lt;p&gt;Esse é o livro que mais recomendei em 2022.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Em termos políticos, a chegada do Big Data poderia ser comparada à invenção do microscópio. No passado, a partir de sondagens sempre aleatórias, os comunicadores políticos podiam atingir grandes aglomerados demográficos ou profissionais: os jovens, os professores do setor público, as donas de casa e assim por diante. Hoje, o trabalho dos físicos estatísticos permite enviar uma mensagem personalizada a cada eleitor com base nas características individuais.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Criando Suas Próprias Ações no fail2ban - Parte 3</title>
      <link>https://gmgall.net/blog/criando-suas-proprias-acoes-no-fail2ban-parte-3/</link>
      <pubDate>Thu, 04 Aug 2011 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/criando-suas-proprias-acoes-no-fail2ban-parte-3/</guid>
      <description>&lt;h2 id=&#34;estrutura-de-uma-ação&#34;&gt;Estrutura de uma ação&lt;/h2&gt;
&lt;p&gt;Cada ação é um arquivo no diretório &lt;code&gt;action.d&lt;/code&gt;. Esses arquivos seguem a seguinte estrutura:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Definition]

# Option:  actionstart
# Notes.:  comando executado ao iniciar o Fail2Ban.
# Values:  CMD
#
actionstart =


# Option:  actionstop
# Notes.:  comando executado ao encerrar o Fail2Ban
# Values:  CMD
#
actionstop =


# Option:  actioncheck
# Notes.:  comando executado antes de cada comando actionban
# Values:  CMD
#
actioncheck =


# Option:  actionban
# Notes.:  comando executado ao banir um IP. Observe que o comando
#          é executado com as permissões do usuário executando o Fail2Ban.
# Tags:    &amp;lt;ip&amp;gt;  IP address
#          &amp;lt;failures&amp;gt;  number of failures
#          &amp;lt;time&amp;gt;  unix timestamp of the ban time
# Values:  CMD
#
actionban = ipfw add deny tcp from &amp;lt;ip&amp;gt; to &amp;lt;localhost&amp;gt; &amp;lt;port&amp;gt;


# Option:  actionunban
# Notes.:  comando executado ao &amp;#34;desbanir&amp;#34; um IP. Observe que o comando
#          é executado com as permissões do usuário executando o Fail2Ban.
# Tags:    &amp;lt;ip&amp;gt;  IP address
#          &amp;lt;failures&amp;gt;  number of failures
#          &amp;lt;time&amp;gt;  unix timestamp of the ban time
# Values:  CMD
#
actionunban = ipfw delete `ipfw list | grep -i &amp;lt;ip&amp;gt; | awk &amp;#39;{print $1;}&amp;#39;`

[Init]

# Option:  port
# Notes.:  specifies port to monitor
# Values:  [ NUM | STRING ]
#
port = ssh

# Option:  localhost
# Notes.:  the local IP address of the network interface
# Values:  IP
#
localhost = 127.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O arquivo que usei de exemplo acima já vem com o pacote e configura uma ação que usa o ipfw para bloquear os IPs. Traduzi os comentários da seção &lt;code&gt;[Definition]&lt;/code&gt; para explicar o que cada entrada define.&lt;/p&gt;
&lt;p&gt;A seção &lt;code&gt;[Init]&lt;/code&gt; define &amp;ldquo;variáveis&amp;rdquo; que podem ser usadas ao longo do arquivo. Nesse exemplo, &lt;code&gt;port&lt;/code&gt; e &lt;code&gt;localhost&lt;/code&gt;, mas que variáveis definir é por conta do usuário. &lt;strong&gt;Lembrando que&lt;/strong&gt; &lt;code&gt;&amp;lt;ip&amp;gt;&lt;/code&gt; &lt;strong&gt;vira o IP/hostname casado no grupo&lt;/strong&gt; &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; &lt;strong&gt;dos filtros&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;definindo-uma-ação&#34;&gt;Definindo uma ação&lt;/h2&gt;
&lt;p&gt;Existem ações predefinidas que bloqueiam por &lt;code&gt;iptables&lt;/code&gt;, &lt;code&gt;ipfw&lt;/code&gt;, &lt;code&gt;shorewall&lt;/code&gt;, TCP wrappers, que avisam por e-mail a cada bloqueio&amp;hellip; Mas não existe nenhuma que avise via Gtalk. Vamos criar uma ação que faz isso.&lt;/p&gt;
&lt;p&gt;Usarei o programa &lt;a href=&#34;https://web.archive.org/web/20110827104139/http://sendxmpp.platon.sk/&#34;&gt;sendxmpp&lt;/a&gt; para definir uma ação que enviará uma mensagem para mim no Gtalk a cada evento. Como configurar o sendxmpp para o Gtalk &lt;a href=&#34;http://ubuntuforums.org/showpost.php?s=0ecf5b2a9c9a97fbfa5438c354dcfc2c&amp;amp;p=8876182&amp;amp;postcount=3&#34;&gt;pode ser visto aqui&lt;/a&gt;. Conheci o sendxmpp num &lt;a href=&#34;http://eriberto.pro.br/blog/2011/03/02/mensagens-jabber-via-linha-de-comando-ideal-para-servidores-de-rede/&#34;&gt;post&lt;/a&gt; do &lt;a href=&#34;http://eriberto.pro.br/blog/&#34;&gt;blog&lt;/a&gt; do &lt;a href=&#34;http://eriberto.pro.br/site/&#34;&gt;João Eriberto Mota Filho&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/eribertomota&#34;&gt;@eribertomota&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Vamos à listagem do arquivo &lt;code&gt;action.d/gtalk.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Definition]

actionstart = printf %%b &amp;#34;Hi,\n
              The jail &amp;lt;name&amp;gt; has been started successfully.\n
              Regards,\n
              Fail2Ban&amp;#34;|sendxmpp -t -u &amp;lt;from&amp;gt; -o gmail.com 

actionstop = printf %%b &amp;#34;Hi,\n
             The jail &amp;lt;name&amp;gt; has been stopped.\n
             Regards,\n
             Fail2Ban&amp;#34;|sendxmpp -t -u &amp;lt;from&amp;gt; -o gmail.com 

actioncheck =

actionban = printf %%b &amp;#34;Hi,\n
            The IP &amp;lt;ip&amp;gt; has just been banned by Fail2Ban after
            &amp;lt;failures&amp;gt; attempts against &amp;lt;name&amp;gt;.\n
            Regards,\n
            Fail2Ban&amp;#34;|sendxmpp -t -u &amp;lt;from&amp;gt; -o gmail.com &amp;lt;to&amp;gt;

actionunban =

[Init]

name = default

from =

to =
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Essa ação enviará uma mensagem para o usuário definido em &lt;code&gt;to&lt;/code&gt; tendo como remetente o usuário definido em &lt;code&gt;from&lt;/code&gt; ao iniciar, parar e ao bloquear um IP.&lt;/p&gt;
&lt;h2 id=&#34;ativando-sua-ação&#34;&gt;Ativando sua ação&lt;/h2&gt;
&lt;p&gt;As ações são definidas por &lt;em&gt;jail&lt;/em&gt; ou globalmente na seção &lt;code&gt;[DEFAULT]&lt;/code&gt; de &lt;code&gt;jail.local&lt;/code&gt;. Ações definidas nas &lt;em&gt;jails&lt;/em&gt; tem prioridade sobre as definidas globalmente.&lt;/p&gt;
&lt;p&gt;Observe o seguinte trecho de &lt;code&gt;jail.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ACTIONS
#

# Default banning action (e.g. iptables, iptables-new,
# iptables-multiport, shorewall, etc) It is used to define
# action_* variables. Can be overriden globally or per
# section within jail.local file
banaction = iptables-multiport

# email action. Since 0.8.1 upstream fail2ban uses sendmail
# MTA for the mailing. Change mta configuration parameter to mail
# if you want to revert to conventional &amp;#39;mail&amp;#39;.
mta = sendmail

# Default protocol
protocol = tcp

#
# Action shortcuts. To be used to define action parameter

# The simplest action to take: ban only
action_ = %(banaction)s[name=%(__name__)s, port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s]

# ban &amp;amp; send an e-mail with whois report to the destemail.
action_mw = %(banaction)s[name=%(__name__)s, port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s]
%(mta)s-whois[name=%(__name__)s, dest=&amp;#34;%(destemail)s&amp;#34;, protocol=&amp;#34;%(protocol)s]

# ban &amp;amp; send an e-mail with whois report and relevant log lines
# to the destemail.
action_mwl = %(banaction)s[name=%(__name__)s, port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s]
%(mta)s-whois-lines[name=%(__name__)s, dest=&amp;#34;%(destemail)s&amp;#34;, logpath=%(logpath)s]

# Choose default action. To change, just override value of &amp;#39;action&amp;#39; with the
# interpolation to the chosen action shortcut (e.g. action_mw, action_mwl, etc) in jail.local
# globally (section [DEFAULT]) or per specific section
action = %(action_)s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A variável &lt;code&gt;action&lt;/code&gt; define a ação globalmente. As outras variáveis definidas antes (&lt;code&gt;action_mvl&lt;/code&gt;, &lt;code&gt;action_mw&lt;/code&gt; e &lt;code&gt;action_&lt;/code&gt;) são atalhos úteis. Leia os comentários com atenção para entender como essas variáveis interagem.&lt;/p&gt;
&lt;p&gt;Repare que mais de uma ação pode ser setada por linha e que cada ação pode receber parâmetros entre colchetes. Esses parâmetros definem os valores das variáveis declaradas na seção &lt;code&gt;[Init]&lt;/code&gt;. Os atalhos &lt;code&gt;action_mvl&lt;/code&gt;, &lt;code&gt;action_mw&lt;/code&gt; e &lt;code&gt;action_&lt;/code&gt; são úteis por já ativarem ações e passarem parâmetros funcionais para tarefas rotineiras como banir e enviar um e-mail com informações úteis.&lt;/p&gt;
&lt;p&gt;Para definir nossa ação gtalk globalmente, basta fazer&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;action = %(action_)s
        gtalk[name=%(__name__)s, from=gmgall, to=gmgall]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;e recarregar as configurações do serviço:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/init.d/fail2ban reload
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Funciona!&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;screenshot.png&#34;
         alt=&#34;Janela de chat do mensageiro instantâneo Pidgin, mostrando mensagens enviadas pelo fail2ban.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Janela de chat do mensageiro instantâneo Pidgin, mostrando mensagens enviadas pelo fail2ban.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Criando Seus Próprios Filtros no fail2ban - Parte 2</title>
      <link>https://gmgall.net/blog/criando-seus-proprios-filtros-no-fail2ban-parte-2/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/criando-seus-proprios-filtros-no-fail2ban-parte-2/</guid>
      <description>&lt;p&gt;Se não existe um filtro pronto para o log que você deseja monitorar em &lt;code&gt;filter.d&lt;/code&gt;, será necessário criar seu próprio filtro. Mostrarei como fazer isso através do exemplo que descrevo abaixo:&lt;/p&gt;
&lt;h2 id=&#34;cenário-do-exemplo&#34;&gt;Cenário do exemplo&lt;/h2&gt;
&lt;p&gt;Mantenho um wiki &lt;a href=&#34;http://moinmo.in/&#34;&gt;moinmoin&lt;/a&gt; e desejo bloquear o acesso à ele pelos hosts que tentarem login por mais de 3 vezes sem sucesso. Vamos fazer um filtro para fazer esse bloqueio. O log do wiki é escrito em &lt;code&gt;/var/log/moinmoin.log&lt;/code&gt;. Segue trecho desse log:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2011-07-12 15:45:40,447 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 15:45:44,002 MoinMoin.auth WARNING moin: performing login action | request from 192.168.0.10
2011-07-12 15:45:44,003 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;GuilhermeGall&amp;#39; (not valid) | request from 192.168.0.10
2011-07-12 15:45:44,030 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 15:45:47,705 MoinMoin.auth WARNING moin: performing login action | request from 192.168.0.10
2011-07-12 15:45:47,706 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;GuilhermeGall&amp;#39; (not valid) | request from 192.168.0.10
2011-07-12 15:45:47,732 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 15:55:59,473 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 16:08:51,543 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-13 09:09:01,908 MoinMoin.auth WARNING moin: performing login action | request from 192.168.0.7
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não é difícil perceber que as linhas com &lt;code&gt;could not authenticate user u&#39;GuilhermeGall&#39; (not valid)&lt;/code&gt; representam as tentativas de login malsucedidas. Se desejamos bloquear os hosts de origem dessas tentativas temos que fazer a regex do filtro casar essas linhas e usar o IP que aparece nelas para executar nossa ação (por &lt;em&gt;default&lt;/em&gt;, bloquear via &lt;code&gt;iptables&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Antes de criar nosso filtro, vamos entender a estrutura de um filtro e como desenvolver nossas próprias regexes.&lt;/p&gt;
&lt;h2 id=&#34;estrutura-de-um-filtro&#34;&gt;Estrutura de um filtro&lt;/h2&gt;
&lt;p&gt;Um filtro é simplesmente um arquivo com uma entrada &lt;code&gt;failregex&lt;/code&gt;, que define as regexes que casam as linhas que representam as tentativas de login malsucedidas, e uma entrada &lt;code&gt;ignoreregex&lt;/code&gt;, que define regexes que casam com linhas que devem ser ignoradas. Outras entradas podem existir, como &lt;code&gt;before&lt;/code&gt; que faz um “import” de outro arquivo, mas &lt;code&gt;failregex&lt;/code&gt; e &lt;code&gt;ignoreregex&lt;/code&gt; são as essenciais e usadas na maioria dos casos.&lt;/p&gt;
&lt;p&gt;Se for definir mais de uma regex para &lt;code&gt;failregex&lt;/code&gt; ou &lt;code&gt;ignoreregex&lt;/code&gt;, coloque uma por linha. Exemplo do arquivo &lt;code&gt;filter.d/apache-auth.conf&lt;/code&gt; que já vem no pacote &lt;code&gt;fail2ban&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Definition]

# Option:  failregex
# Notes.:  regex to match the password failure messages in the logfile. The
#          host must be matched by a group named &amp;#34;host&amp;#34;. The tag &amp;#34;&amp;lt;HOST&amp;gt;&amp;#34; can
#          be used for standard IP/hostname matching and is only an alias for
#          (?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;[\w\-.^_]+)
# Values:  TEXT
#
failregex = [[]client &amp;lt;HOST&amp;gt;[]] user .* authentication failure
            [[]client &amp;lt;HOST&amp;gt;[]] user .* not found
            [[]client &amp;lt;HOST&amp;gt;[]] user .* password mismatch

# Option:  ignoreregex
# Notes.:  regex to ignore. If this regex matches, the line is ignored.
# Values:  TEXT
#
ignoreregex =
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Conforme pode ser lido nos comentários do arquivo acima, a tag &lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; deve aparecer dentro da regex na posição onde aparece o IP/hostname do host ofensor. Repare que mais de uma regex foi definida para &lt;code&gt;failregex&lt;/code&gt; – uma em cada linha – e que &lt;code&gt;ignoreregex&lt;/code&gt; pode ser vazio.&lt;/p&gt;
&lt;h2 id=&#34;desenvolvendo-suas-próprias-regexes&#34;&gt;Desenvolvendo suas próprias regexes&lt;/h2&gt;
&lt;p&gt;Para escrever suas próprias regexes para o &lt;code&gt;fail2ban&lt;/code&gt; é preciso ter em mente o seguinte:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Em toda linha de uma &lt;code&gt;failregex&lt;/code&gt;, a parte que casa com o IP/hostname deve estar envolta pela estrutura &lt;code&gt;(?P&amp;lt;host&amp;gt; ... )&lt;/code&gt;. Essa estrutura é uma extensão específica do Python que atribui o nome &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; ao que foi casado pelo grupo. A tag &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; é como você informa ao &lt;code&gt;fail2ban&lt;/code&gt; qual host estava tentando logar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Como conveniência, é possível usar &lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; nas suas regexes, conforme citei no tópico anterior. &lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; é um alias para &lt;code&gt;(?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;\S+)&lt;/code&gt; que casa um IP/hostname dentro de um grupo chamado &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;. Vide item anterior.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nas ações, a tag &lt;code&gt;&amp;lt;ip&amp;gt;&lt;/code&gt; será substituída pelo IP do host casado pela tag &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;, por isso sempre deve existir um grupo nomeado &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Para que uma linha de um log case com sua &lt;code&gt;failregex&lt;/code&gt;, ela deve casar em duas partes: o início da linha tem que casar com um padrão de &lt;em&gt;timestamp&lt;/em&gt; e o restante da linha deve casar com a regex definida em &lt;code&gt;failregex&lt;/code&gt;. Se sua &lt;code&gt;failregex&lt;/code&gt; possui a âncora &lt;code&gt;^&lt;/code&gt;, então a âncora refere-se ao início do restante da linha, após o &lt;em&gt;timestamp&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Por último, mas não menos importante, o comando &lt;code&gt;fail2ban-regex&lt;/code&gt; permite testar suas regexes antes de criar o filtro. Na realidade, como escrever suas próprias regexes pode envolver alguma – muita! – tentativa e erro no começo, eu diria que esse é o item mais importante. 🙂 Ele pode ser usado de duas maneiras:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fail2ban-regex /path/para/arquivo.log &amp;#39;^regex a ser testada$&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ou&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fail2ban-regex &amp;#39;linha exemplo de log&amp;#39; &amp;#39;^regex a ser testada$&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;definindo-o-filtro&#34;&gt;Definindo o filtro&lt;/h2&gt;
&lt;p&gt;A regex que casa com as linhas que representam as tentativas de login malsucedidas é:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não é do escopo desse artigo ensinar expressões regulares. Tem muito &lt;a href=&#34;https://aurelio.net/regex/&#34;&gt;material bom sobre isso&lt;/a&gt; por aí, mas resumindo a expressão acima:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MoinMoin\.auth&lt;/code&gt; casa &lt;code&gt;MoinMoin.auth&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DEBUG|INFO|WARNING|ERROR|CRITICAL)&lt;/code&gt; casa &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; ou &lt;code&gt;CRITICAL&lt;/code&gt;. Eu poderia ter casado apenas um dos níveis de severidade, mas ainda estou decidindo em qual nível reportarei as mensagens referentes à tentativas de login.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;moin: could not authenticate user&lt;/code&gt; casa &lt;code&gt;moin: could not authenticate user&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.*&lt;/code&gt; casa &lt;em&gt;qualquer caractere em qualquer quantidade&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;not valid\) \| request from&lt;/code&gt; casa &lt;code&gt;(not valid) | request from&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; casa o &lt;em&gt;IP/hostname&lt;/em&gt;. É a tal tag indicativa de onde está o IP/hostname que é substituída por &lt;code&gt;(?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;\S+)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$&lt;/code&gt; casa o &lt;em&gt;fim da linha&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Testando uma linha de exemplo do log com o &lt;code&gt;fail2ban-regex&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fail2ban-regex &amp;#39;2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;UserName&amp;#39; (not valid) | request from 192.168.0.27&amp;#39; &amp;#39;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$&amp;#39;

Running tests
=============

Use regex line : MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL)...
Use single line: 2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin...

Results
=======

Failregex
|- Regular expressions:
|  [1] MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$
|
`- Number of matches:
   [1] 1 match(es)

Ignoreregex
|- Regular expressions:
|
`- Number of matches:

Summary
=======

Addresses found:
[1]
    192.168.0.27 (Mon Jul 18 14:24:42 2011)

Date template hits:
0 hit(s): MONTH Day Hour:Minute:Second
0 hit(s): WEEKDAY MONTH Day Hour:Minute:Second Year
0 hit(s): WEEKDAY MONTH Day Hour:Minute:Second
0 hit(s): Year/Month/Day Hour:Minute:Second
0 hit(s): Day/Month/Year Hour:Minute:Second
0 hit(s): Day/Month/Year Hour:Minute:Second
0 hit(s): Day/MONTH/Year:Hour:Minute:Second
0 hit(s): Month/Day/Year:Hour:Minute:Second
2 hit(s): Year-Month-Day Hour:Minute:Second
0 hit(s): Day-MONTH-Year Hour:Minute:Second[.Millisecond]
0 hit(s): Day-Month-Year Hour:Minute:Second
0 hit(s): TAI64N
0 hit(s): Epoch
0 hit(s): ISO 8601
0 hit(s): Hour:Minute:Second
0 hit(s): 

Success, the total number of match is 1

However, look at the above section &amp;#39;Running tests&amp;#39; which could contain important
information.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Perceba que o comando mostrou a regex e o número de casamentos, além do IP encontrado abaixo de &amp;ldquo;Addresses found&amp;rdquo;, indicando que a regex está correta. O número de casamentos presumivelmente seria maior que 1, se o comando fosse executado contra um arquivo de log ao invés de apenas contra uma linha de exemplo.&lt;/p&gt;
&lt;p&gt;Vamos supor você tenha cometido um erro, como por exemplo não especificar um grupo chamado &lt;code&gt;host&lt;/code&gt; na sua regex:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fail2ban-regex &amp;#39;2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;UserName&amp;#39; (not valid) | request from 192.168.0.27&amp;#39; &amp;#39;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from$&amp;#39;

Running tests
=============

Use regex line : MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL)...
Use single line: 2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin...

No &amp;#39;host&amp;#39; group in &amp;#39;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from$&amp;#39;
Cannot remove regular expression. Index 0 is not valid

Results
=======

Failregex
|- Regular expressions:
|  [1] MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from$
|
`- Number of matches:
   [1] 0 match(es)

Ignoreregex
|- Regular expressions:
|
`- Number of matches:

Summary
=======

Sorry, no match

Look at the above section &amp;#39;Running tests&amp;#39; which could contain important
information.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Perceba que o &lt;code&gt;fail2ban-regex&lt;/code&gt; informa o erro &lt;code&gt;No &#39;host&#39; group in...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Como já temos a regex funcional, crie um arquivo com o nome do filtro em &lt;code&gt;filter.d&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cd /etc/fail2ban/
# cat filter.d/moinmoin.conf
[Definition]

# Option:  failregex
# Notes.:  regex to match the password failures messages in the logfile. The
#          host must be matched by a group named &amp;#34;host&amp;#34;. The tag &amp;#34;&amp;lt;HOST&amp;gt;&amp;#34; can
#          be used for standard IP/hostname matching and is only an alias for
#          (?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;[\w\-.^_]+)
# Values:  TEXT
#
failregex = MoinMoin.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$

# Option:  ignoreregex
# Notes.:  regex to ignore. If this regex matches, the line is ignored.
# Values:  TEXT
#
ignoreregex =
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Crie uma &lt;em&gt;jail&lt;/em&gt; que usa o filtro recém-criado em &lt;code&gt;jail.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[moinmoin]

enabled = true
port = 80
filter = moinmoin
logpath = /var/log/moinmoin.log
maxretry = 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A variável &lt;code&gt;filter&lt;/code&gt; define o nome do filtro, que é o nome do arquivo criado em &lt;code&gt;filter.d&lt;/code&gt; sem a extensão &lt;code&gt;.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Reinicie o &lt;code&gt;fail2ban&lt;/code&gt; para ativar a nova &lt;em&gt;jail&lt;/em&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/init.d/fail2ban restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;É interessante monitorar o log do próprio &lt;code&gt;fail2ban&lt;/code&gt;, que por padrão fica em &lt;code&gt;/var/log/fail2ban.log&lt;/code&gt;, para verificar se suas alterações foram aplicadas com sucesso:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# tail -f /var/log/fail2ban.log
2011-08-01 09:52:04,994 fail2ban.filter : INFO   Set findtime = 600
2011-08-01 09:52:04,994 fail2ban.actions: INFO   Set banTime = 600
2011-08-01 09:52:04,999 fail2ban.jail   : INFO   Creating new jail &amp;#39;ssh&amp;#39;
2011-08-01 09:52:04,999 fail2ban.jail   : INFO   Jail &amp;#39;ssh&amp;#39; uses poller
2011-08-01 09:52:05,000 fail2ban.filter : INFO   Added logfile = /var/log/auth.log
2011-08-01 09:52:05,001 fail2ban.filter : INFO   Set maxRetry = 3
2011-08-01 09:52:05,002 fail2ban.filter : INFO   Set findtime = 600
2011-08-01 09:52:05,002 fail2ban.actions: INFO   Set banTime = 600
2011-08-01 09:52:05,035 fail2ban.jail   : INFO   Jail &amp;#39;moinmoin&amp;#39; started
2011-08-01 09:52:05,039 fail2ban.jail   : INFO   Jail &amp;#39;ssh&amp;#39; started
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As duas últimas linhas nos mostra as &lt;em&gt;jails&lt;/em&gt; iniciadas. A &lt;code&gt;ssh&lt;/code&gt;, que já vem configurada, e a &lt;code&gt;moinmoin&lt;/code&gt;, que acabamos de configurar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introdução ao fail2ban - Parte 1</title>
      <link>https://gmgall.net/blog/introducao-ao-fail2ban-parte-1/</link>
      <pubDate>Fri, 29 Jul 2011 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/introducao-ao-fail2ban-parte-1/</guid>
      <description>&lt;p&gt;O fail2ban é um software que monitora os logs do sistema e em caso de X (sendo X configurável) tentativas de autenticação sem sucesso em diversos serviços toma uma atitude, que pode ser colocar o host ofensor em &lt;code&gt;/etc/hosts.deny&lt;/code&gt;, &amp;ldquo;dropar&amp;rdquo; seus pacotes via &lt;code&gt;iptables&lt;/code&gt; ou qualquer outra ação definida pelo usuário.&lt;/p&gt;
&lt;h2 id=&#34;instalação-do-fail2ban&#34;&gt;Instalação do fail2ban&lt;/h2&gt;
&lt;p&gt;Em máquinas Debian, a melhor maneira de instalar o &lt;code&gt;fail2ban&lt;/code&gt; é via &lt;code&gt;apt-get&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# apt-get update
# apt-get install fail2ban
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As configurações &lt;em&gt;default&lt;/em&gt; bloqueiam via &lt;code&gt;iptables&lt;/code&gt; por 10 minutos os hosts que tentarem sem sucesso login via ssh 6 vezes. O &lt;code&gt;fail2ban&lt;/code&gt; cria uma &lt;em&gt;chain&lt;/em&gt; com nome no padrão &lt;code&gt;fail2ban-serviço&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# iptables -L
Chain INPUT (policy ACCEPT)
target prot opt source destination
fail2ban-ssh tcp -- anywhere anywhere multiport dports ssh

Chain FORWARD (policy ACCEPT)
target prot opt source destination

Chain OUTPUT (policy ACCEPT)
target prot opt source destination

Chain fail2ban-ssh (1 references)
target prot opt source destination
RETURN all -- anywhere anywhere
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Lembrando que todo esse comportamento é configurável. O bloqueio pode ser feito via TCP-wrappers (&lt;code&gt;/etc/hosts.{allow,deny}&lt;/code&gt;), e muitos outros serviços são suportados.&lt;/p&gt;
&lt;h2 id=&#34;entendendo-os-arquivos-de-configuração&#34;&gt;Entendendo os arquivos de configuração&lt;/h2&gt;
&lt;p&gt;Alguns termos usados pelo &lt;code&gt;fail2ban&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;filter&lt;/strong&gt;: um filtro define uma regex que casa um padrão correspondente a uma tentativa de login mal sucedido nos arquivos de log;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;action&lt;/strong&gt;: uma ação define os comandos que são executados nos mais diversos eventos, como bloquear um host (ex: bloquear via TCP-wrappers ou &lt;code&gt;iptables&lt;/code&gt;), iniciar o &lt;code&gt;fail2ban&lt;/code&gt; (ex: criar as chains no firewall) e parar o &lt;code&gt;fail2ban&lt;/code&gt; (ex: remover as &lt;em&gt;chains&lt;/em&gt; criadas ao iniciar);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;jail&lt;/strong&gt;: uma &lt;em&gt;jail&lt;/em&gt; é uma combinação de um filtro com uma ou várias &lt;em&gt;actions&lt;/em&gt;. O &lt;code&gt;fail2ban&lt;/code&gt; pode lidar com diversas &lt;em&gt;jails&lt;/em&gt; ao mesmo tempo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Uma &lt;em&gt;jail&lt;/em&gt; é como dar a seguinte ordem ao &lt;code&gt;fail2ban&lt;/code&gt;: &amp;ldquo;bloqueie via &lt;code&gt;iptables&lt;/code&gt; por 10 minutos os hosts que aparecerem 3 vezes em &lt;code&gt;/var/log/auth.log&lt;/code&gt; com falha de autenticação&amp;rdquo;. Nesse exemplo, bloquear via &lt;code&gt;iptables&lt;/code&gt; é uma ação e a regex que casa a falha de autenticação é o filtro.&lt;/p&gt;
&lt;p&gt;Os arquivos de configuração ficam em &lt;code&gt;/etc/fail2ban&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cd /etc/fail2ban
# ls -l
total 17
drwxr-xr-x 2 root root 1024 Jun 28 14:30 action.d
-rw-r--r-- 1 root root 859 Feb 27 2008 fail2ban.conf
drwxr-xr-x 2 root root 1024 Jun 28 14:30 filter.d
-rw-r--r-- 1 root root 6683 Jun 28 2010 jail.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Os diretórios &lt;code&gt;action.d&lt;/code&gt; e &lt;code&gt;filter.d&lt;/code&gt; mantêm as configurações de ações e filtros, respectivamente. Os que vêm com o pacote já devem atender à maior parte das necessidades. O arquivo &lt;code&gt;fail2ban.conf&lt;/code&gt; contém configurações gerais do &lt;em&gt;daemon&lt;/em&gt; &lt;code&gt;fail2ban-server&lt;/code&gt;, como &lt;em&gt;path&lt;/em&gt; do arquivo de &lt;em&gt;log&lt;/em&gt; do &lt;code&gt;fail2ban&lt;/code&gt;, &lt;em&gt;path&lt;/em&gt; do arquivo socket usado para o cliente de linha de comando se comunicar com o &lt;em&gt;daemon&lt;/em&gt; etc.&lt;/p&gt;
&lt;p&gt;O arquivo &lt;code&gt;jail.conf&lt;/code&gt; é o mais importante, já que configura as &lt;em&gt;jails&lt;/em&gt;. No tópico abaixo será explicado como modificar uma &lt;em&gt;jail&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;mudando-as-configurações-default&#34;&gt;Mudando as configurações default&lt;/h2&gt;
&lt;p&gt;Na maior parte do tempo, os filtros e ações que vêm com o pacote atendem às necessidades, bastando usá-los nas suas &lt;em&gt;jails&lt;/em&gt;. A única &lt;em&gt;jail&lt;/em&gt; que vem ativada por padrão é a que bloqueia os hosts que tentarem logar mais de 6 vezes via SSH. Como exemplo, será mostrado como alterar o número de tentativas antes do bloqueio de 6 para 3.&lt;/p&gt;
&lt;p&gt;Primeiramente crie uma cópia do arquivo &lt;code&gt;jail.conf&lt;/code&gt; chamada &lt;code&gt;jail.local&lt;/code&gt; e faça as suas modificações nesse arquivo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cp jail.conf jail.local
# vim jail.local
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O trecho abaixo configura uma &lt;em&gt;jail&lt;/em&gt; chamada &lt;code&gt;ssh&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ssh]

enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 6
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Mude para:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ssh]

enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Faça o &lt;code&gt;fail2ban&lt;/code&gt; reler os arquivos de configuração:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/init.d/fail2ban reload
Reloading authentication failure monitor: fail2ban.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não faça as alterações diretamente em &lt;code&gt;jail.conf&lt;/code&gt;. Apesar de funcionar, o arquivo pode ser sobrescrito por atualizações no pacote &lt;code&gt;fail2ban&lt;/code&gt;. O &lt;code&gt;fail2ban&lt;/code&gt; aplica as regras primeiro do &lt;code&gt;jail.conf&lt;/code&gt; depois do &lt;code&gt;jail.local&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Daemon em Python</title>
      <link>https://gmgall.net/blog/daemon-em-python/</link>
      <pubDate>Sun, 24 May 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/daemon-em-python/</guid>
      <description>&lt;p&gt;Já usei mais de uma vez o código abaixo para criar pequenos &lt;a href=&#34;http://en.wikipedia.org/wiki/Daemon_(computer_software)&#34;&gt;daemons&lt;/a&gt; para Linux. Achei &lt;a href=&#34;https://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/&#34;&gt;aqui&lt;/a&gt; e como ele foi &lt;a href=&#34;https://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/#c6&#34;&gt;liberado em domínio público&lt;/a&gt;, use como melhor convir.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; atexit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; signal &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SIGTERM 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Daemon&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    A generic daemon class.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Usage: subclass the Daemon class and override the run() method
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, pidfile, stdin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;, stdout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;, stderr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stdin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stdout
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stderr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pidfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;daemonize&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        do the UNIX double-fork magic, see Stevens&amp;#39; &amp;#34;Advanced
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Programming in the UNIX Environment&amp;#34; for details (ISBN 0201563177)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        http://www.erlenstar.demon.co.uk/unix/faq_2.html#SEC16
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fork()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# exit first parent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OSError&lt;/span&gt;, e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fork #1 failed: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;errno, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strerror))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# decouple from parent environment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chdir(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setsid()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;umask(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# do second fork&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fork()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# exit from second parent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OSError&lt;/span&gt;, e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fork #2 failed: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;errno, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strerror))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# redirect standard file descriptors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        si &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        so &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dup2(si&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno(), sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dup2(so&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno(), sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dup2(se&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno(), sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# write pidfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        atexit&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delpid)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getpid())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; pid)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;delpid&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Start the daemon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Check for a pidfile to see if the daemon already runs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pid:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pidfile &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; already exist. Daemon already running?&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(message &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Start the daemon&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;daemonize()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stop&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Stop the daemon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Get the pid from the pidfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; pid:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pidfile &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; does not exist. Daemon not running?&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(message &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# not an error in a restart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Try killing the daemon process&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kill(pid, SIGTERM)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OSError&lt;/span&gt;, err:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(err)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; err&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No such process&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                print str(err)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;restart&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Restart the daemon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        You should override this method when you subclass Daemon. It will be called after the process has been
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        daemonized by start() or restart().
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Resolvi adicionar a funcionalidade de verificar o status do processo também, daí adicionei o seguinte método à classe acima:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        procfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/proc/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/status&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; pid, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        procfile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;there is not a process with the PID specified in &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TypeError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pidfile &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; does not exist&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;the process with the PID &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; is running&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; pid)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Não ficou muito bonito, mas funciona. Lembrando o que já está comentado no &lt;a href=&#34;http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python&#34;&gt;código original&lt;/a&gt;: para usar a classe acima para &amp;ldquo;daemonizar&amp;rdquo; seu programa, crie uma classe filha de &lt;code&gt;Daemon&lt;/code&gt; e sobrescreva o método &lt;code&gt;run()&lt;/code&gt;. Ele será chamado após o processo de &amp;ldquo;daemonização&amp;rdquo; por &lt;code&gt;start()&lt;/code&gt; e &lt;code&gt;restart()&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sequência Look and Say em Python</title>
      <link>https://gmgall.net/blog/sequencia-look-and-say-em-python/</link>
      <pubDate>Wed, 11 Mar 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/sequencia-look-and-say-em-python/</guid>
      <description>&lt;p&gt;Tenho brincado ultimamente com os desafios do &lt;a href=&#34;http://www.pythonchallenge.com/&#34;&gt;Python Challenge&lt;/a&gt;. São bem interessantes para quem quer aprender Python na prática. Estou resolvendo o nível 11 e já precisei &lt;a href=&#34;https://web.archive.org/web/20090309064253/http://www.pythonware.com/products/pil/&#34;&gt;processar imagens&lt;/a&gt;, descompactar dados comprimidos com &lt;a href=&#34;https://docs.python.org/3/library/zipfile.html&#34;&gt;zip&lt;/a&gt; e &lt;a href=&#34;https://docs.python.org/3/library/bz2.html&#34;&gt;bz2&lt;/a&gt;, &lt;a href=&#34;https://docs.python.org/3/library/pickle.html&#34;&gt;serializar objetos&lt;/a&gt;, &lt;a href=&#34;https://docs.python.org/3/library/urllib.html&#34;&gt;acessar recursos via URL&lt;/a&gt;, &lt;a href=&#34;https://docs.python.org/3/library/re.html&#34;&gt;usar expressões regulares&lt;/a&gt; e algumas tarefas que não exigiam necessariamente um módulo.&lt;/p&gt;
&lt;p&gt;O último nível que resolvi tinha como resposta o &lt;a href=&#34;https://web.archive.org/web/20111111070626/http://oeis.org/A005341&#34;&gt;comprimento de um elemento específico&lt;/a&gt; de uma &lt;a href=&#34;https://web.archive.org/web/20090303175131/http://www.research.att.com/~njas/sequences/&#34;&gt;sequência de inteiros&lt;/a&gt; conhecida como &lt;a href=&#34;https://web.archive.org/web/20090304154846/http://www.research.att.com/~njas/sequences/A005150&#34;&gt;&lt;em&gt;look and say&lt;/em&gt;&lt;/a&gt; (olhe e descreva). Achei diversas implementações da geração da sequência pela web, nenhuma delas me pareceu &lt;em&gt;pythonica&lt;/em&gt; ou legível o suficiente. Resolvi juntar algumas das idéias que vi nessas implementações com os conhecimentos que obtive recentemente com a leitura de um material sobre &lt;a href=&#34;https://docs.python.org/dev/howto/functional.html&#34;&gt;programação funcional em Python&lt;/a&gt; e criei uma função que retorna uma lista com os elementos da sequência. A minha solução não é a mais eficiente possível (&lt;a href=&#34;http://www.fantascienza.net/leonardo/so/briciole_python1/&#34;&gt;essa página&lt;/a&gt; contém uma implementação alegadamente otimizada para velocidade), mas acho que é elegante e mostra alguns aspectos interessantes da linguagem. Segue o código:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;look_and_say&lt;/span&gt;(first, elements):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; itertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; groupby
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    seq &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [str(first)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt;(number):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k,g &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; groupby(number):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ret&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append( str(len(list(g))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; k )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(ret)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; xrange(elements):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        seq&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(say(seq[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; seq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O argumento &lt;code&gt;first&lt;/code&gt; de &lt;code&gt;look_and_say&lt;/code&gt; recebe o primeiro elemento da lista e &lt;code&gt;elements&lt;/code&gt; quantos elementos depois do primeiro devem ser gerados. Exemplo de uso:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; look_and_say(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;21&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;111221&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;312211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;13112221&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1113213211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;31131211131221&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;13211311123113112211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11131221133112132113212221&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; look_and_say(&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;55&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;25&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1215&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11121115&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;31123115&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dentre os aspectos que gostaria de destacar estão a possibilidade de importar partes de módulos e definir funções dentro de funções, o uso de listas para &lt;a href=&#34;https://web.archive.org/web/20090324052548/http://codare.net/2006/09/17/python-concatenacao-eficiente-de-strings/&#34;&gt;concatenar strings com eficiência&lt;/a&gt; e o uso de &lt;a href=&#34;https://docs.python.org/dev/howto/functional.html#grouping-elements&#34;&gt;itertools.groupby&lt;/a&gt; que faz um agrupamento semelhante ao do comando &lt;code&gt;uniq&lt;/code&gt; do Unix, juntando elementos iguais consecutivos em um &lt;a href=&#34;https://docs.python.org/dev/howto/functional.html#iterators&#34;&gt;&lt;em&gt;iterator&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para quem quiser uma abordagem matemática da sequência, o &lt;a href=&#34;https://mathworld.wolfram.com/&#34;&gt;Wolfram Mathworld&lt;/a&gt; tem uma &lt;a href=&#34;https://mathworld.wolfram.com/LookandSaySequence.html&#34;&gt;página sobre ela&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metaclasses em Python</title>
      <link>https://gmgall.net/blog/metaclasses-em-python/</link>
      <pubDate>Sat, 21 Feb 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/metaclasses-em-python/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;
&lt;p&gt;Li dois textos interessantes no &lt;a href=&#34;http://kodumaro.blogspot.com/&#34;&gt;Kodumaro&lt;/a&gt; recentemente: um sobre &lt;a href=&#34;http://kodumaro.blogspot.com/2009/01/propriedades.html&#34;&gt;propriedades e acessores&lt;/a&gt; e outro sobre o &lt;a href=&#34;http://kodumaro.blogspot.com/2009/01/s-ingleton.html&#34;&gt;design pattern &lt;em&gt;singleton&lt;/em&gt;&lt;/a&gt;. Ambos citavam as metaclasses, um conceito novo para mim e, pelo que andei conversando, novo para muitos de meus colegas de faculdade e trabalho. O seguinte texto é resultado de minha tentativa de explicar o que são metaclasses de uma forma simples de ser assimilada por pessoas que começaram a estudar Python há pouco tempo como eu e portanto não pode ser considerado como um guia definitivo e sem erros sobre o assunto. Qualquer sugestão ou comentário é bem vindo.&lt;/p&gt;
&lt;h2 id=&#34;revisando-orientação-a-objetos-e-definindo-metaclasses&#34;&gt;Revisando Orientação a Objetos e definindo metaclasses&lt;/h2&gt;
&lt;p&gt;Em uma linguagem de programação orientada a objetos, você pode definir classes que combinam dados (atributos) e métodos (comportamentos) que atuam sobre esses dados. Pode-se afirmar que ao definir uma classe se está definindo um domínio.&lt;/p&gt;
&lt;p&gt;As classes geralmente atuam como modelos para a criação de instâncias de classe, que apesar de compartilharem uma mesma &amp;ldquo;forma&amp;rdquo;, possuem dados diferentes. Uma instância &lt;code&gt;real&lt;/code&gt; e outra &lt;code&gt;peso&lt;/code&gt; de uma mesma classe &lt;code&gt;Moeda&lt;/code&gt; podem possuir um atributo &lt;code&gt;cotacao&lt;/code&gt;, mas cada instância terá seu próprio valor para esse atributo.&lt;/p&gt;
&lt;p&gt;Em Python, tudo é objeto e tudo tem um tipo. Não existe diferença real entre uma classe e um tipo, especialmente depois da unificação de classes e tipos iniciada no Python 2.2. Ao definir uma classe, portanto, o programador está criando um novo tipo de dados. Como tudo é objeto, as classes também o são e possuem uma classe, um tipo. A classe de uma classe é chamada de metaclasse. O tipo &lt;em&gt;default&lt;/em&gt; de uma classe é &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Moeda&lt;/span&gt;(object):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(Moeda)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Moeda
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__main__&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Moeda&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ao chamar &lt;code&gt;type()&lt;/code&gt; com apenas um argumento, obtém-se o tipo do objeto. Observe que o tipo da &lt;strong&gt;classe&lt;/strong&gt; &lt;code&gt;Moeda&lt;/code&gt; é &lt;code&gt;type&lt;/code&gt;. Afirmar que o tipo de uma classe é &lt;code&gt;type&lt;/code&gt; é o mesmo que afirmar que a sua metaclasse é &lt;code&gt;type&lt;/code&gt;. O exemplo acima comprovou que as classes realmente são um objeto com um tipo.&lt;/p&gt;
&lt;p&gt;Os conceitos apresentados até aqui são um tanto abstratos para quem aprendeu orientação a objetos em linguagens como Java e C# e para os novatos em Python. No tópico seguinte, apresento a implementação de uma classe e de uma metaclasse com dicionários, como se Python não tivesse suporte sintático para OO. Apesar de ninguém querer programar assim na prática o exemplo é extremamente útil para entender como os objetos funcionam em Python.&lt;/p&gt;
&lt;h2 id=&#34;implementando-classes-com-dicionários&#34;&gt;Implementando classes com dicionários&lt;/h2&gt;
&lt;p&gt;O código abaixo foi originalmente postado no blog de Pedro Werneck em um post que explicava o &lt;a href=&#34;https://web.archive.org/web/20110812155307/http://diaspar.blogspot.com/2008/11/o-porqu-do-self-explcito-ser-que-agora.html&#34;&gt;porquê do &lt;code&gt;self&lt;/code&gt; explícito&lt;/a&gt;. Apesar de explicar metaclasses não ser o objetivo principal do texto, achei bastante útil para entender como o suporte a orientação a objetos foi implementado em Python. Isso acaba levando ao entendimento de vários conceitos interessantes (entre eles metaclasses) da linguagem e a uma apreciação ainda maior de sua simplicidade e consistência.&lt;/p&gt;
&lt;p&gt;No post original, o código evoluiu aos poucos até chegar ao ponto em que está aqui. Para um entendimento pleno, &lt;a href=&#34;https://web.archive.org/web/20110812155307/http://diaspar.blogspot.com/2008/11/o-porqu-do-self-explcito-ser-que-agora.html&#34;&gt;leia o post original&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A primeira parte define uma função &lt;code&gt;newClass&lt;/code&gt; que recebe um nome de classe e um dicionário com seus atributos e retorna um dicionário que faz o papel das &amp;ldquo;classes&amp;rdquo; desse programa.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# precisaremos usar isso logo adiante...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; functools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; partial
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### Agora já podemos pensar nela como a classe &amp;#39;Class&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newClass&lt;/span&gt;(nome, atributos):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;:nome} &lt;span style=&#34;color:#75715e&#34;&gt;# cria o dicionário para a classe somente com seu nome&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k, v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; atributos&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# aqui se um método for o newNome, ele tem de receber a mesma&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# alteração e passar a receber &amp;#39;cls&amp;#39; como primeiro argumento&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;new&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;nome:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; partial(v, cls)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# e atribuímos tudo normalmente&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cls[k] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; cls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Em seguida, é definido uma &amp;ldquo;classe&amp;rdquo; &lt;code&gt;Pessoa&lt;/code&gt; com os atributos &lt;code&gt;nome&lt;/code&gt;, &lt;code&gt;nascimento&lt;/code&gt; e um método &lt;code&gt;idade&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### Classe Pessoa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# construtor, corresponde ao __new__ de Python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newPessoa&lt;/span&gt;(cls, nome, nascimento): &lt;span style=&#34;color:#75715e&#34;&gt;# agora a classe mesmo vem aqui&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {} &lt;span style=&#34;color:#75715e&#34;&gt;# a nova instância&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;classe&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cls &lt;span style=&#34;color:#75715e&#34;&gt;# a instância tem de saber de que classe é, e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                         &lt;span style=&#34;color:#75715e&#34;&gt;# agora pode saber dinamicamente&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Agora a instância vai criar os métodos embrulhando as chamadas&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# para as funções originais em uma nova, já se incluindo nela&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k, v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cls&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Se for função...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; callable(v):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# é, então vamos embrulhar...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            metodo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; partial(v, inst)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            inst[k] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; metodo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;init&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;cls[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;]](nome, nascimento)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; inst
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# inicializador, corresponde ao __init__ de Python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initPessoa&lt;/span&gt;(inst, nome, nascimento):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nome
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nascimento&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nascimento
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# assim como fazemos normalmente no __init__, aqui não precisamos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# nos preocupar&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;idade&lt;/span&gt;(inst, hoje):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hd, hm, ha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hoje
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    nd, nm, na &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nascimento&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ha &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; na
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Com as funções que se tornarão os métodos da classe &lt;code&gt;Pessoa&lt;/code&gt; definidos, falta a última parte da definição da classe que é criar o objeto que representa a classe. Esse objeto é retornado pela função &lt;code&gt;newClass&lt;/code&gt; definida no início do código.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# e agora initPessoa() tem de entrar aqui também&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pessoa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newClass(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pessoa&amp;#39;&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newPessoa&amp;#39;&lt;/span&gt;:newPessoa,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;initPessoa&amp;#39;&lt;/span&gt;:initPessoa,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;:idade})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### Fim da definição de classe&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A seguir, cria-se duas instâncias de &lt;code&gt;Pessoa&lt;/code&gt; para testar a implementação.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hank &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pessoa[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newPessoa&amp;#39;&lt;/span&gt;](&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hank Moody&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1967&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print hank[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;]((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fante &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pessoa[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newPessoa&amp;#39;&lt;/span&gt;](&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;John Fante&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1909&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print fante[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;]((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nesse exemplo, a função &lt;code&gt;newClass&lt;/code&gt; faz o papel de uma metaclasse, pois é ela que é chamada para criar a classe. É interessante notar que não existe diferença real entre o funcionamento de &lt;code&gt;newClass&lt;/code&gt; e &lt;code&gt;newPessoa&lt;/code&gt;. Ambas são funções que retornam instâncias, as instâncias retornadas por &lt;code&gt;newClass&lt;/code&gt; são &amp;ldquo;classes&amp;rdquo; e as instâncias retornadas por &lt;code&gt;newPessoa&lt;/code&gt; são objetos do tipo &lt;code&gt;Pessoa&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O autor termina o texto usando as funções de inicialização e cálculo de idade com a metaclasse padrão de Python, &lt;code&gt;type&lt;/code&gt;. Ela recebe uma string que será o nome da nova classe, uma tupla de classes base e um dicionário representando o &lt;em&gt;namespace&lt;/em&gt; da classe. Esse dicionário contém o que você normalmente define como o corpo de uma instrução &lt;code&gt;class&lt;/code&gt;. A única coisa que tem que mudar é o acesso aos atributos, que antes estavam sendo feitos como chaves de dicionários e agora devem usar a sintaxe de atributos normais.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initPessoa&lt;/span&gt;(inst, nome, nascimento):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inst&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nome
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inst&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nascimento &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nascimento
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;idade&lt;/span&gt;(inst, hoje):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hd, hm, ha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hoje
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        nd, nm, na &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inst&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nascimento
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ha &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; na
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pessoa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; type(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pessoa&amp;#39;&lt;/span&gt;, (), {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__init__&amp;#39;&lt;/span&gt;:initPessoa,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;:idade})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Representação de Pessoa como string: &amp;#34;&lt;/span&gt;,Pessoa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tipo de Pessoa (sua metaclasse): &amp;#34;&lt;/span&gt;,type(Pessoa)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Imprimindo a idade de uma instância de Pessoa para teste: &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hank &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pessoa(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hank Moody&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1967&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print hank&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;idade((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Resumindo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Em Python tudo é objeto, inclusive classes e instâncias. Não existe diferença real entre elas.&lt;/li&gt;
&lt;li&gt;Criar uma classe é criar um novo tipo.&lt;/li&gt;
&lt;li&gt;A classe de uma classe é chamada de metaclasse. As instâncias de metaclasses são classes.&lt;/li&gt;
&lt;li&gt;A metaclasse &lt;em&gt;default&lt;/em&gt; é &lt;code&gt;type&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Não existe diferença real entre métodos e funções. Os métodos são apenas funções com &lt;em&gt;namespaces&lt;/em&gt; específicos (suas classes).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;criando-e-definindo-metaclasses&#34;&gt;Criando e definindo metaclasses&lt;/h2&gt;
&lt;p&gt;Para definir sua própria metaclasse, basta criar uma classe que herda da metaclasse &lt;code&gt;type&lt;/code&gt;. O método inicializador recebe os mesmos argumentos que o método inicializador de &lt;code&gt;type&lt;/code&gt;: uma string que será o nome da classe, uma tupla de classes bases e um dicionário representando o &lt;em&gt;namespace&lt;/em&gt; da classe.&lt;/p&gt;
&lt;p&gt;Segue um &lt;a href=&#34;https://web.archive.org/web/20090215011047/http://www.ibm.com/developerworks/linux/library/l-pymeta.html&#34;&gt;exemplo ligeiramente modificado&lt;/a&gt; de um artigo do &lt;a href=&#34;https://web.archive.org/web/20090221162632/http://www.ibm.com/developerworks/&#34;&gt;IBM developerWorks&lt;/a&gt;. Primeiramente, vamos definir uma nova metaclasse:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ChattyType&lt;/span&gt;(type):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __new__(cls, name, bases, dct):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Alocando memória para classe&amp;#34;&lt;/span&gt;, name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       dct[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;usa_metaclasse&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; type&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__new__(cls, name, bases, dct)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(cls, name, bases, dct):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Inicializando (configurando) classe&amp;#34;&lt;/span&gt;, name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       super(ChattyType, cls)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__init__(name, bases, dct)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Essa metaclasse sobrescreve o método &lt;code&gt;__new__&lt;/code&gt; que efetivamente é o construtor e retorna uma nova instância de classe (nesse exemplo específico, a instância retornada será uma classe por estarmos escrevendo uma &lt;strong&gt;meta&lt;/strong&gt;classe) e o método &lt;code&gt;__init__&lt;/code&gt; que é o inicializador da instância e não retorna nada. É tentador chamar o &lt;code&gt;__init__&lt;/code&gt; de construtor, mas o trabalho de criação de instâncias é do &lt;code&gt;__new__&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O código acima criou um novo tipo que imprime uma mensagem quando está sendo criado e outra quando está sendo inicializado. Definiu-se também que todas as instâncias do novo tipo terão um atributo &lt;code&gt;usa_metaclasse&lt;/code&gt; com o valor inicial &lt;code&gt;True&lt;/code&gt;. Essa mudança foi feita adicionando uma chave ao dicionário que representa o &lt;em&gt;namespace&lt;/em&gt;  da classe (&lt;code&gt;dct&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Com a metaclasse definida, já é possível criar classes a partir dela chamando-a como chama-se &lt;code&gt;type&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; X&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ChattyType(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;, (object,), {})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Alocando memória para classe X
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Inicializando (configurando) classe X
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Instanciar classes manualmente como feito acima, não é um procedimento muito comum. Segue como Python &lt;a href=&#34;https://www.python.org/download/releases/2.2.3/descrintro/#metaclasses&#34;&gt;determina a metaclasse&lt;/a&gt; de uma determinada classe:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Se o dicionário que representa o &lt;em&gt;namespace&lt;/em&gt; da classe contiver uma chave &lt;code&gt;__metaclass__&lt;/code&gt;, o seu valor é usado.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Senão, se existe pelo menos uma classe base, sua metaclasse é usada.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Senão, se existe uma variável global &lt;code&gt;__metaclass__&lt;/code&gt;, seu valor é usado.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Senão, &lt;code&gt;types.ClassType&lt;/code&gt; é usado.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A criação da classe &lt;code&gt;X&lt;/code&gt; feita no exemplo acima comumente seria feita assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;X&lt;/span&gt;(object):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    __metaclass__&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ChattyType
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Alocando memória para classe X
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Inicializando (configurando) classe X
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A instanciação de &lt;code&gt;ChattyType&lt;/code&gt;, feita explicitamente no primeiro exemplo, agora é feita pelo interpretador Python no final da instrução &lt;code&gt;class&lt;/code&gt;. Note que a instrução &lt;code&gt;class&lt;/code&gt; é simplesmente &lt;a href=&#34;https://en.wikipedia.org/wiki/Syntactic_sugar&#34;&gt;açúcar sintático&lt;/a&gt; para a instanciação de classes através de suas metaclasses. Os programadores que não fazem uso de metaclasses acabam não percebendo isso, já que simplesmente criam suas classes usando &lt;code&gt;class&lt;/code&gt; e Python simplesmente as instancia chamando &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Continuando o exemplo, podemos confirmar que o tipo da classe é a metaclasse:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(X)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__main__&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ChattyType&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__main__&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;X&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(X) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; type(type(y))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para concluir, segue algumas dicas na hora de usar metaclasses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A modificação do dicionário que representa o &lt;em&gt;namespace&lt;/em&gt; da classe deve ser feita em &lt;code&gt;__new__&lt;/code&gt;, como no exemplo. Se na definição de &lt;code&gt;ChattyType&lt;/code&gt;, &lt;code&gt;dct[&#39;usa_metaclasse&#39;]=True&lt;/code&gt; fosse executado em &lt;code&gt;__init__&lt;/code&gt;, a alteração não teria efeito. Considere o uso de &lt;a href=&#34;https://docs.python.org/3/library/functions.html#setattr&#34;&gt;setattr&lt;/a&gt; nesses casos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sempre herde de &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__new__&lt;/code&gt; é o construtor e deve retornar uma nova instância.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Erros em metaclasses costumam aparecer durante &lt;code&gt;import&lt;/code&gt;s e definições de classes que usem metaclasses diferentes de &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;alguns-exemplos&#34;&gt;Alguns exemplos&lt;/h2&gt;
&lt;p&gt;Metaclasses são usadas na maior parte do tempo para alterar o comportamento de criação e inicialização de classes. Na maioria dos casos, os usuários finais são outros programadores. Frameworks e ferramentas de mapeamento objeto-relacional são exemplos de softwares que usam metaclasses.&lt;/p&gt;
&lt;p&gt;Alguns usos para as metaclasses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20101122212629/http://www.python.org.br/wiki/UnificandoTiposClasses&#34;&gt;Criar propriedades automaticamente&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://kodumaro.blogspot.com/2009/01/s-ingleton.html&#34;&gt;Usar o design pattern singleton de forma transparente&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://everything2.com/title/metaclass&#34;&gt;Monitorar todas as chamadas a métodos de uma classe&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20090405120043/http://effbot.org/zone/metaclass-plugins.htm&#34;&gt;Fazer plugins se registrarem automaticamente em um registro comum&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verificar diversos aspectos de uma classe para garantir que a classe tenha os métodos e atributos necessários para o correto funcionamento do sistema. Isso é interessante se a aplicação pode ser estendida por plugins desenvolvidos por terceiros.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O importante é que a classe só é realmente criada na chamada final a &lt;code&gt;type&lt;/code&gt; na metaclasse. Você é livre para modificar o dicionário de atributos de acordo com as suas necessidades antes disso, portanto existem muito mais possibilidades de uso para as metaclasses do que as apresentadas aqui.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Here Strings, Redirecionamentos e o builtin time</title>
      <link>https://gmgall.net/blog/here-strings-redirecionamentos-e-o-builtin-time/</link>
      <pubDate>Wed, 28 Jan 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/here-strings-redirecionamentos-e-o-builtin-time/</guid>
      <description>&lt;p&gt;Estou fazendo um comparativo entre &lt;code&gt;gzip&lt;/code&gt; e &lt;code&gt;bzip2&lt;/code&gt; em seus diferentes modos de compressão (-1 a -9) e para automatizar o processo fiz um script bash que usa alguns recursos bastante interessantes, mas às vezes negligenciados, por isso vou falar sobre eles aqui.&lt;/p&gt;
&lt;p&gt;O script basicamente compacta um determinado arquivo com o &lt;code&gt;bzip2&lt;/code&gt; e o &lt;code&gt;gzip&lt;/code&gt;, cada um deles usando todos os modos de compressão, mede o tempo que o compactador ficou na CPU e escreve os resultados em um arquivo de saída. O comando para compactar o arquivo é montado dinamicamente usando dois loops aninhados. Um deles, o mais externo, itera sobre a lista de modos de compressão (-1 a -9) e o outro, o mais interno, itera sobre os compactadores. No final, a linha que realmente faz a compactação e mede o tempo gasto é&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TIMEC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;bc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; time eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$CMDC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Onde &lt;code&gt;TIMEC&lt;/code&gt; recebe o tempo de CPU gasto pelo comando de compactação e &lt;code&gt;$CMDC&lt;/code&gt; contém o comando de compactação. Um valor que essa variável pode assumir durante a execução é &lt;code&gt;gzip -c -2 arquivo&amp;gt;arquivo.gz&lt;/code&gt;, por exemplo.&lt;/p&gt;
&lt;p&gt;Feita essa introdução, o primeiro recurso interessante que eu gostaria de apresentar é o &lt;em&gt;here strings&lt;/em&gt;. O funcionamento dele é simples. Dado um comando como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1+1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;a string &lt;code&gt;1+1&lt;/code&gt; será usada para alimentar a entrada padrão de &lt;code&gt;bc&lt;/code&gt;. Isso substitui a forma tradicional&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1+1&amp;#39;&lt;/span&gt; | bc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;que faz a mesma coisa, mas força um &lt;a href=&#34;https://en.wikipedia.org/wiki/Fork_(system_call)&#34;&gt;fork&lt;/a&gt; para isso, sendo mais ineficiente.&lt;/p&gt;
&lt;p&gt;Na linha do script que citei no início do post, o &lt;code&gt;bc&lt;/code&gt; vai receber o tempo gasto em modo usuário e o tempo gasto em modo kernel separados por um sinal de adição, fazendo portanto &lt;code&gt;TIMEC&lt;/code&gt; receber a soma desses valores. Aqui chegamos no segundo recurso que gostaria de citar nesse post. O builtin &lt;code&gt;time&lt;/code&gt; do bash (não confundir com o comando externo &lt;code&gt;time&lt;/code&gt;), pode ter sua saída formatada através do conteúdo da variável &lt;code&gt;TIMEFORMAT&lt;/code&gt;. Para fazer a saída do &lt;code&gt;time&lt;/code&gt; ficar no formato de uma soma, simplesmente atribuí o valor &lt;code&gt;%U+%S&lt;/code&gt; à &lt;code&gt;TIMEFORMAT&lt;/code&gt;. O &lt;code&gt;%U&lt;/code&gt; representa o tempo gasto em modo de usuário e o &lt;code&gt;%S&lt;/code&gt; o tempo gasto em modo kernel.&lt;/p&gt;
&lt;p&gt;Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ time df
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sist. Arq.           1K-blocos      Usad Dispon.   Uso% Montado em
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/hdc3             &lt;span style=&#34;color:#ae81ff&#34;&gt;37491624&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32393072&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3194048&lt;/span&gt;  92% /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmpfs                   &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;   0% /dev/shm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m0.061s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    0m0.020s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m0.016s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ TIMEFORMAT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;%U+%S &lt;span style=&#34;color:#75715e&#34;&gt;# Formatando a saída de time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ time df
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sist. Arq.           1K-blocos      Usad Dispon.   Uso% Montado em
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/hdc3             &lt;span style=&#34;color:#ae81ff&#34;&gt;37491624&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32393072&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3194048&lt;/span&gt;  92% /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmpfs                   &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;   0% /dev/shm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0.020+0.008
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Com isso, só fica faltando uma última coisa para mostrar: como redirecionar a saída do builtin &lt;code&gt;time&lt;/code&gt;. A primeira coisa importante a ter em mente, é que os tempos medidos em si são jogados na &lt;code&gt;stderr&lt;/code&gt;, enquanto que a &lt;code&gt;stdout&lt;/code&gt; é usada para a saída do comando cujo tempo de execução é medido. Dito isso uma primeira tentativa de redirecionar a saída do &lt;code&gt;time&lt;/code&gt; para um arquivo por exemplo, seria fazer simplesmente fazer algo como &lt;code&gt;time comando 2&amp;gt; arquivo&lt;/code&gt;, mas isso não funciona. O que é redirecionado para arquivo nesse caso é a saída de erros de comando, não a do time, que continua imprimindo na tela. Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ time ls naoexiste 2&amp;gt;saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m0.041s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    0m0.036s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m0.004s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls: impossível acessar naoexiste: Arquivo ou diretório não encontrado
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A saída para isso é executar o &lt;code&gt;time&lt;/code&gt; dentro de um bloco (em uma subshell também funciona, mas é ineficiente) e redirecionar a saída de erros desse bloco. Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; time ls naoexiste 2&amp;gt;/dev/null; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 2&amp;gt;saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m0.056s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    0m0.028s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m0.004s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Perceba que dentro do bloco eu redirecionei a saída de erros de &lt;code&gt;ls naoexiste&lt;/code&gt; para &lt;code&gt;/dev/null&lt;/code&gt;, para que ela não se misturasse com a saída do &lt;code&gt;time&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Com isso já temos toda a teoria para entender a linha que citei no início do post. Vamos desmembrá-la e revisar o que apresentei nesse post.&lt;/p&gt;
&lt;h2 id=&#34;revisando&#34;&gt;Revisando&lt;/h2&gt;
&lt;p&gt;Na linha&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TIMEC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;bc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; time eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$CMDC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;TIMEC&lt;/code&gt; vai receber a soma, feita pela calculadora &lt;code&gt;bc&lt;/code&gt;, dos tempos calculados pelo builtin &lt;code&gt;time&lt;/code&gt; do bash. A saída desse comando foi formatada de acordo com a variável &lt;code&gt;TIMEFORMAT&lt;/code&gt; para formar uma string com uma soma do tempo gasto em modo kernel com o tempo gasto em modo de usuário (&lt;code&gt;%U+%S&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Dentro da subshell cujo resultado alimenta a entrada padrão do &lt;code&gt;bc&lt;/code&gt; o &lt;code&gt;time&lt;/code&gt; precisou ser executado dentro de um bloco, para ser possível capturar o seu resultado, que vai para &lt;code&gt;stderr&lt;/code&gt;. A &lt;code&gt;stdout&lt;/code&gt; é usada para a saída do comando cujo tempo de execução é medido pelo &lt;code&gt;time&lt;/code&gt;. A &lt;code&gt;stderr&lt;/code&gt; do bloco inteiro foi conectado a &lt;code&gt;stdout&lt;/code&gt;, sendo assim devidamente retornada pela subshell e usada para alimentar a entrada padrão da &lt;code&gt;bc&lt;/code&gt; via &lt;em&gt;here strings&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;É isso. Quaisquer comentários são bem vindos.&lt;/p&gt;
&lt;h2 id=&#34;referências&#34;&gt;Referências&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mywiki.wooledge.org/BashFAQ/032&#34;&gt;BashFaq: How can I redirect the output of &amp;rsquo;time&amp;rsquo; to a variable or file?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tldp.org/LDP/abs/html/io-redirection.html&#34;&gt;Advanced Bash-Scripting Guide: I/O Redirection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jneves.wordpress.com/2008/03/05/hello-world/&#34;&gt;Papo de Botequim: Tira Gosto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/1/bash&#34;&gt;Manpage do Bash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
