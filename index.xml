<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home Page on gmgall.net</title>
    <link>https://gmgall.net/</link>
    <description>Recent content in Home Page on gmgall.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Tue, 10 Jan 2023 23:02:00 -0300</lastBuildDate><atom:link href="https://gmgall.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shortcodes no Hugo Inserem Quebras de Linha Indesejadas</title>
      <link>https://gmgall.net/blog/shortcodes-no-hugo-inserem-quebras-de-linha-indesejadas/</link>
      <pubDate>Wed, 08 Feb 2023 11:57:12 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/shortcodes-no-hugo-inserem-quebras-de-linha-indesejadas/</guid>
      <description>&lt;p&gt;Essa já &amp;ldquo;me pegou&amp;rdquo; algumas vezes e demorei um pouco para encontrar solução, então documento aqui.&lt;/p&gt;
&lt;p&gt;O &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; insere quebras de linha após o conteúdo gerado pelos &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;shortcodes&lt;/a&gt; que podem causar a renderização do HTML de forma indesejada.&lt;/p&gt;
&lt;p&gt;Exemplo: suponha que no seu site você queira tratar das palavras sagradas protegidas pelos &lt;a href=&#34;https://youtu.be/0e2kaQqxmQ0&#34;&gt;Cavaleiros que Dizem Ni&lt;/a&gt;. Você quer usar um &lt;em&gt;snippet&lt;/em&gt; de código para inseri-las, afinal são sagradas e você não quer correr o risco de digitá-las errado.&lt;/p&gt;
&lt;p&gt;Então cria o seguinte &lt;em&gt;shortcode&lt;/em&gt; em &lt;code&gt;layouts/shortcodes/sacred_words.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ni&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;peng&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neee-won&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;upper&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;delimit&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; e &amp;#34;&lt;/span&gt; ) }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;E usa o &lt;em&gt;shortcode&lt;/em&gt; no meio do markdown em alguma página de conteúdo. Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Os Cavaleiros que Dizem &amp;#34;Ni&amp;#34; são os quardiões das palavras sagradas {{&amp;lt; &lt;span style=&#34;color:#f92672&#34;&gt;sacred_words&lt;/span&gt; &amp;gt;}}.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ao visualizar o HTML gerado para esse trecho, vê algo como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Os Cavaleiros que Dizem &amp;amp;ldquo;Ni&amp;amp;rdquo; são os quardiões das palavras sagradas 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NI, PENG E NEEE-WON
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Tem uma quebra de linha indesejada no final do conteúdo gerado pelo &lt;em&gt;shortcode&lt;/em&gt;.&lt;/strong&gt; O código do &lt;em&gt;shortcode&lt;/em&gt; não insere essa quebra, mas ela está lá. Isso faz esse trecho ser renderizado da seguinte forma pelos navegadores:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Os Cavaleiros que Dizem “Ni” são os quardiões das palavras sagradas NI, PENG E NEEE-WON .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Tem um espaço entre a última palavra e o ponto final da frase&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Encontrei &lt;strike&gt;as gambiarras&lt;/strike&gt;
 os &lt;em&gt;workarounds&lt;/em&gt; para resolver esse problema numa &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/1753&#34;&gt;issue do próprio projeto Hugo&lt;/a&gt;, mas parece que a discussão sobre mudar esse comportamento dos &lt;em&gt;shortcodes&lt;/em&gt; não andou muito. Resta-nos nos adaptar.&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;Uma das gambiarras&lt;/strike&gt;
Um dos recursos técnicos é truncar o arquivo do &lt;em&gt;shortcode&lt;/em&gt; com o comando &lt;code&gt;truncate -s -1 layouts/shortcodes/sacred_words.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Depois disso, o HTML gerado para o trecho que usa o &lt;em&gt;shortcode&lt;/em&gt; fica assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Os Cavaleiros que Dizem &amp;amp;ldquo;Ni&amp;amp;rdquo; são os quardiões das palavras sagradas 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NI, PENG E NEEE-WON.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;E é renderizado da seguinte forma:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Os Cavaleiros que Dizem “Ni” são os quardiões das palavras sagradas NI, PENG E NEEE-WON.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Vitória!&lt;/p&gt;
&lt;p&gt;Satisfeito, você decide que só falta uma coisa para o seu &lt;em&gt;shortcode&lt;/em&gt; ficar perfeito: ele precisa inserir código para gerar um alerta gritando &amp;ldquo;ni&amp;rdquo; a cada vez que a página é (re)carregada. Por sorte, pouco código precisa ser adicionado para isso. O &lt;em&gt;shortcode&lt;/em&gt; agora tem a seguinte implementação:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ni&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;peng&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neee-won&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;upper&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;delimit&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; e &amp;#34;&lt;/span&gt; ) }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NI&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;)&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dessa vez você está esperto e &lt;strong&gt;lembra de truncar o arquivo&lt;/strong&gt;. Quando vai ver a página gerada num navegador, o alerta aparece, mas&amp;hellip;&lt;/p&gt;
&lt;p&gt;O espaço entre a última palavra sagrada e o ponto final está lá de novo! Mesmo após usar o &lt;code&gt;truncate&lt;/code&gt;! O HTML foi gerado com uma quebra de linha indesejada novamente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Os Cavaleiros que Dizem &amp;amp;ldquo;Ni&amp;amp;rdquo; são os quardiões das palavras sagradas 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NI, PENG E NEEE-WON
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NI&amp;#39;&lt;/span&gt;)&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se o seu &lt;em&gt;shortcode&lt;/em&gt; vai inserir mais coisa do que a saída gerada pelos comandos da linguagem de &lt;em&gt;template&lt;/em&gt; do Go, como é o trecho &lt;code&gt;&amp;lt;script&amp;gt;alert(&#39;NI&#39;)&amp;lt;/script&amp;gt;.&amp;lt;/p&amp;gt;&lt;/code&gt; no exemplo acima, você precisa retirar aquela quebra antes do trecho também.&lt;/p&gt;
&lt;p&gt;Isso pode ser feito deixando o shortcode assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;slice&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ni&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;peng&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;neee-won&amp;#34;&lt;/span&gt; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ &lt;span style=&#34;color:#a6e22e&#34;&gt;upper&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;delimit&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;words&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; e &amp;#34;&lt;/span&gt; ) }}{{&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NI&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;)&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Agora sim, as quebras de linha que fazem a página ser renderizada erradamente estão fora. O espaço antes do ponto final não aparece mais e o alerta ocorre.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A versão dos softwares envolvidos no momento em que escrevo esse texto são as seguintes:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ go version
go version go1.19.4 linux/amd64
$ hugo version
hugo v0.109.0+extended linux/amd64 BuildDate=unknown
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Feeds</title>
      <link>https://gmgall.net/feeds/</link>
      <pubDate>Mon, 06 Feb 2023 11:48:43 -0300</pubDate>
      
      <guid>https://gmgall.net/feeds/</guid>
      <description>&lt;p&gt;Minha web ideal se parece mais com múltiplas praças públicas ligadas por vias livremente transitáveis do que com um conjunto de condomínios fechados.&lt;/p&gt;
&lt;p&gt;Por isso, todo o conteúdo aqui pode ser acessado via &lt;em&gt;feeds&lt;/em&gt; &lt;a href=&#34;https://pt.wikipedia.org/wiki/RSS&#34;&gt;RSS&lt;/a&gt;. Você não é &lt;code&gt;obrigad[aeo]&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; a visitar meu site para ler nada que escrevo. 😊&lt;/p&gt;
&lt;h2 id=&#34;feeds-desse-site&#34;&gt;&lt;em&gt;Feeds&lt;/em&gt; desse site&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gmgall.net/blog/index.xml&#34;&gt;Blog&lt;/a&gt;: todos os posts do &lt;a href=&#34;https://gmgall.net/blog/&#34;&gt;blog&lt;/a&gt; independente de categoria&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; ou tag&lt;sup id=&#34;fnref1:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gmgall.net/categories/tech/index.xml&#34;&gt;Tech&lt;/a&gt;: todos os textos na categoria&lt;sup id=&#34;fnref2:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; de &lt;a href=&#34;https://gmgall.net/categories/tech/&#34;&gt;textos técnicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gmgall.net/categories/non-tech/index.xml&#34;&gt;Non-tech&lt;/a&gt;: todos os textos na categoria&lt;sup id=&#34;fnref3:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; de &lt;a href=&#34;https://gmgall.net/categories/non-tech/&#34;&gt;textos não técnicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gmgall.net/books/index.xml&#34;&gt;Books&lt;/a&gt;: só os textos da seção&lt;sup id=&#34;fnref4:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; com minhas &lt;a href=&#34;https://gmgall.net/books&#34;&gt;impressões de leitura&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Também existem &lt;em&gt;feeds&lt;/em&gt; para os textos marcados com cada uma das &lt;a href=&#34;https://gmgall.net/tags/&#34;&gt;tags&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As URLs para esses &lt;em&gt;feeds&lt;/em&gt; seguem o formato &lt;code&gt;https://gmgall.net/tags/NOME_TAG/index.xml&lt;/code&gt;. Exemplo: o &lt;em&gt;feed&lt;/em&gt; apenas com os posts marcados com a tag &lt;a href=&#34;https://gmgall.net/tags/sysadmin/&#34;&gt;sysadmin&lt;/a&gt; está em &lt;code&gt;https://gmgall.net/tags/sysadmin/index.xml&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;code&gt;obrigad[aeo]&lt;/code&gt; é uma &lt;a href=&#34;https://aurelio.net/regex/&#34;&gt;expressão regular&lt;/a&gt; que casa &lt;code&gt;obrigada&lt;/code&gt;, &lt;code&gt;obrigade&lt;/code&gt; e &lt;code&gt;obrigado&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;sobre a organização do conteúdo em categorias e tags, leia o post &lt;a href=&#34;https://gmgall.net/blog/hello-world/&#34;&gt;Hello World&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref1:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref2:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref3:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref4:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Licença</title>
      <link>https://gmgall.net/license/</link>
      <pubDate>Tue, 31 Jan 2023 11:08:22 -0300</pubDate>
      
      <guid>https://gmgall.net/license/</guid>
      <description>&lt;p&gt;Salvo indicação em contrário, os textos nesse site estão licenciados sob a &lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/deed.pt_BR&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/deed.pt_BR&#34;&gt;

&lt;figure&gt;
  &lt;img src=&#34;https://mirrors.creativecommons.org/presskit/icons/by.svg&#34; alt=&#34;atribuição&#34; /&gt;
&lt;/figure&gt;




&lt;figure&gt;
  &lt;img src=&#34;https://mirrors.creativecommons.org/presskit/icons/nc.svg&#34; alt=&#34;não comercial&#34; /&gt;
&lt;/figure&gt;




&lt;figure&gt;
  &lt;img src=&#34;https://mirrors.creativecommons.org/presskit/icons/sa.svg&#34; alt=&#34;mesmos termos&#34; /&gt;
&lt;/figure&gt;



&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Build Websites With Hugo</title>
      <link>https://gmgall.net/books/build-websites-with-hugo/</link>
      <pubDate>Sun, 15 Jan 2023 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/build-websites-with-hugo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; é o gerador de sites estáticos usado para gerar esse site. Depois de alguma pesquisa, me pareceu a melhor ferramenta do tipo disponível.&lt;/p&gt;
&lt;p&gt;Adotá-lo não foi um processo rápido para mim. Sempre que eu parava para estudá-lo por tutoriais no YouTube ou pela documentação oficial, acabava um pouco frustrado por não estar entendendo 100% do que estava acontecendo. Aí deixava ele de lado por um tempo.&lt;/p&gt;
&lt;p&gt;O Hugo não é uma ferramenta difícil de usar, longe disso. O problema é que com frequência eu esbarrava em termos específicos dele nos tutoriais. Nunca existia muita preocupação em explicar o que eles significavam. Parecia que os autores sempre assumiam algum conhecimento prévio da ferramenta e eu não tinha conhecimento algum.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34;&gt;&lt;em&gt;Front matter&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/content-management/archetypes/&#34;&gt;&lt;em&gt;archetypes&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/content-management/page-bundles/&#34;&gt;&lt;em&gt;page bundles&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;&lt;em&gt;shortcodes&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://gohugo.io/content-management/taxonomies/&#34;&gt;&lt;em&gt;taxonomies&lt;/em&gt;&lt;/a&gt;&amp;hellip; Um ou mais termos desses eventualmente apareciam &amp;ldquo;jogados&amp;rdquo; no meio da explicação e isso me fazia adiar o consumo daquela documentação para depois que eu tivesse dominado esses conceitos.&lt;/p&gt;
&lt;p&gt;A documentação oficial é boa, mas mais como guia de referência do que para aprender do zero.&lt;/p&gt;
&lt;p&gt;O livro &lt;em&gt;Build Websites With Hugo&lt;/em&gt; foi o livro que me fez sair desse zero para decidir manter esse site com o Hugo. &lt;strong&gt;É um livro 100% orientado pela prática.&lt;/strong&gt; A proposta dele é fazer um site de portfólio pessoal que sai do mais simples possível e vai ficando mais sofisticado a cada capítulo.&lt;/p&gt;
&lt;p&gt;Eu fui lendo, tomando notas e fazendo o site proposto pelo livro. Mantive a evolução do site em &lt;a href=&#34;https://github.com/gmgall/hugo-example&#34;&gt;um repositório git&lt;/a&gt; e tentei fazer mensagens de &lt;em&gt;commit&lt;/em&gt; informativas para eu poder rever algum conceito depois caso fosse necessário.&lt;/p&gt;
&lt;p&gt;2 coisas &amp;ldquo;clarearam&amp;rdquo; bastante o Hugo para mim:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ler esse livro, fazendo o site proposto e&lt;/li&gt;
&lt;li&gt;fazer esse site que você está lendo com ele.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Escolhi &lt;a href=&#34;https://themes.gohugo.io/themes/smol/&#34;&gt;um tema&lt;/a&gt; &lt;a href=&#34;https://themes.gohugo.io/tags/minimal/&#34;&gt;minimalista&lt;/a&gt; e fiz umas poucas adaptações. Além da minha preferência por sites em que o foco é o conteúdo, ser um tema simples tornou mais fácil fazer pequenas alterações.&lt;/p&gt;
&lt;p&gt;Além de interessante, foi bem divertido. Esse livro é o manual que falta para o Hugo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://gmgall.net/blog/hello-world/</link>
      <pubDate>Thu, 12 Jan 2023 13:45:38 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/hello-world/</guid>
      <description>&lt;p&gt;Eu já tentei manter um site pessoal na internet N vezes. Nunca foi &amp;ldquo;pra frente&amp;rdquo;. Essa é a tentativa N + 1.&lt;/p&gt;
&lt;p&gt;Não preciso ser convencido da importância da escrita, sei dos benefícios que posso tirar dela. Escrever nos ajuda a entender as coisas, robustece nosso pensamento. Existem coisas que parecem bem estruturadas na nossa cabeça até que tentemos escrever ou conversar com alguém sobre. Escrever é &lt;a href=&#34;https://en.wikipedia.org/wiki/Debugging&#34;&gt;&lt;em&gt;debugar&lt;/em&gt;&lt;/a&gt; a si mesmo.&lt;/p&gt;
&lt;p&gt;Depois que entendi isso, abandonei qualquer pretensão de originalidade, que, aliás, é &lt;a href=&#34;https://guzey.com/personal/why-have-a-blog/#but-i-dont-have-anything-original-to-say-and-i-would-be-just-repeating-things-said-elsewhere-on-the-internet&#34;&gt;superestimada&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ainda assim, a procrastinação seguia. Eu implicava com 2 coisas principalmente: a organização do conteúdo e a &lt;em&gt;stack&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;organização-do-conteúdo&#34;&gt;Organização do conteúdo&lt;/h2&gt;
&lt;p&gt;Ter um blog em que escrevesse tudo que eu quisesse, usando apenas tags para organizar o conteúdo, não me parecia ideal. E se alguém de TI entrasse no site buscando conteúdo técnico e tivesse que navegar por um monte de textos opinativos? E se alguma amiga de fora da área de tecnologia entrasse no site e visse um monte de textos sobre desenvolvimento de software?&lt;/p&gt;
&lt;p&gt;Quero poder escrever sobre tudo que me interessa, mas também não quero alienar uma potencial audiência apresentando tudo &amp;ldquo;junto e misturado&amp;rdquo;, numa forma difícil de navegar.&lt;/p&gt;
&lt;p&gt;Considerei sites separados para cada tipo de conteúdo, mas o trabalho extra necessário para manter mais de um site me demoveu dessa ideia. Fora que suscita a pergunta: qual critério eu deveria usar para colocar determinado conteúdo num site e não no outro? Os sites pessoais mais &lt;a href=&#34;https://aurelio.net/&#34;&gt;interessantes&lt;/a&gt; &lt;a href=&#34;https://epxx.co/&#34;&gt;que&lt;/a&gt; &lt;a href=&#34;https://thobias.org/&#34;&gt;conheço&lt;/a&gt; tratam de &lt;a href=&#34;https://epxx.co/artigos/index_pens.html&#34;&gt;tudo&lt;/a&gt; &lt;a href=&#34;https://aurelio.net/fvm/&#34;&gt;que &amp;ldquo;dá na telha&amp;rdquo;&lt;/a&gt; dos donos. O meu seria assim também.&lt;/p&gt;
&lt;p&gt;Foi remoendo as questões acima que decidi usar a organização com 2 &lt;a href=&#34;https://gohugo.io/content-management/taxonomies/&#34;&gt;taxonomias&lt;/a&gt; (&lt;strong&gt;categorias e tags&lt;/strong&gt;), que já é usada em muitos blogs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uma &lt;a href=&#34;https://gmgall.net/categories&#34;&gt;categoria&lt;/a&gt; é uma classificação mais ampla e dificilmente um post vai estar em mais de uma categoria. Para começar, terei 2 categorias: uma para posts &lt;a href=&#34;https://gmgall.net/categories/tech&#34;&gt;técnicos&lt;/a&gt; e outra para posts &lt;a href=&#34;https://gmgall.net/categories/non-tech&#34;&gt;não técnicos&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Uma &lt;a href=&#34;https://gmgall.net/tags&#34;&gt;tag&lt;/a&gt; é uma classificação mais estrita e frequentemente um post terá mais de uma tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Além disso, existem as seções de conteúdo separadas. Nelas cada página pode receber categorias e tags também, mas elas são apresentadas de forma diferente dos textos. A única seção separada hoje é a de &lt;a href=&#34;https://gmgall.net/books&#34;&gt;leituras&lt;/a&gt;. Pretendo que cada página sobre um livro mostre ao menos uma imagem da capa e informações do livro em destaque.&lt;/p&gt;
&lt;p&gt;Cada categoria, tag e seção separada terá seu próprio &lt;em&gt;feed&lt;/em&gt; RSS. Um potencial leitor pode assinar o &lt;em&gt;feed&lt;/em&gt; específico e acompanhar apenas o conteúdo de seu interesse.&lt;/p&gt;
&lt;h2 id=&#34;stack&#34;&gt;Stack&lt;/h2&gt;
&lt;p&gt;Depois de algumas tentativas de usar &lt;a href=&#34;https://en.wikipedia.org/wiki/Content_management_system&#34;&gt;CMS&lt;/a&gt;s, ficou claro que eu não queria ter o trabalho de instalar e manter atualizados os softwares de uma pilha &lt;a href=&#34;https://en.wikipedia.org/wiki/LAMP_(software_bundle)&#34;&gt;LAMP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Static_site_generator&#34;&gt;Geradores de sites estáticos&lt;/a&gt; seriam meu caminho. Li sobre as opções disponíveis e fiquei convencido de que o melhor &amp;ldquo;no mercado&amp;rdquo; é o &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Decidi usá-lo. Gostei do que vi nos primeiros usos, mas demorei um pouco até encontrar um &lt;a href=&#34;https://www.pragprog.com/titles/bhhugo/build-websites-with-hugo/&#34;&gt;livro que me ensinou decentemente&lt;/a&gt; sobre ele.&lt;/p&gt;
&lt;p&gt;Para hospedagem, estou usando &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para fazer o &lt;em&gt;build&lt;/em&gt; e o &lt;em&gt;deploy&lt;/em&gt;, estou usando &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt;. Existem &lt;em&gt;actions&lt;/em&gt; prontas para &lt;a href=&#34;https://github.com/marketplace/actions/hugo-setup&#34;&gt;instalar o Hugo&lt;/a&gt; e &lt;a href=&#34;https://github.com/marketplace/actions/github-pages-action&#34;&gt;fazer o &lt;em&gt;deploy&lt;/em&gt; no GitHub Actions&lt;/a&gt;, então o &lt;a href=&#34;https://github.com/gmgall/gmgall.net/blob/main/.github/workflows/gh-pages-deployment.yml&#34;&gt;&lt;em&gt;workflow&lt;/em&gt;&lt;/a&gt; fica relativamente simples.&lt;/p&gt;
&lt;p&gt;O primeiro lugar em que li sobre esse tipo de &lt;em&gt;workflow&lt;/em&gt; foi em &lt;a href=&#34;https://www.morling.dev&#34;&gt;morling.dev&lt;/a&gt;, no post &lt;a href=&#34;https://www.morling.dev/blog/automatically-deploying-hugo-website-via-github-actions/&#34;&gt;&lt;em&gt;Automatically Deploying a Hugo Website via GitHub Actions&lt;/em&gt;&lt;/a&gt;. Seguindo esse caminho, você fica com um repositório único que contém o código fonte do site (em um &lt;em&gt;branch&lt;/em&gt; principal) e os arquivos que efetivamente são servidos (em um &lt;em&gt;branch&lt;/em&gt; &lt;a href=&#34;https://dev.to/mcaci/how-to-create-an-orphan-branch-in-git-35ac&#34;&gt;órfão&lt;/a&gt; &lt;code&gt;gp-pages&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Outro padrão que vi sendo bastante usado é ter 2 repositórios: um só para o código fonte e outro só para os arquivos que serão servidos pelo GitHub Pages. Veja um exemplo em &lt;a href=&#34;https://ruddra.com/hugo-deploy-static-page-using-github-actions/&#34;&gt;&lt;em&gt;Hugo: Deploy Static Site using GitHub Actions&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Pensar nisso tudo acima antes mesmo de ter o que postar é complicar demais o que é simples, você deve estar pensando. O ideal seria simplesmente começar e ir ajustando o que fosse necessário pelo caminho.&lt;/p&gt;
&lt;p&gt;E você estaria certa. Procrastinei manter um site na web por muito mais tempo do que me orgulho. Estou com o domínio gmgall.net &amp;ldquo;parado&amp;rdquo; há vários anos.&lt;/p&gt;
&lt;p&gt;Protelei tanto por uma ansiedade de me expor que só consegui lidar melhor com &lt;a href=&#34;https://pt.wikipedia.org/wiki/Psicoterapia&#34;&gt;ajuda&lt;/a&gt;. Então deseje-me sorte e seja bem vinda, pessoa leitora! 😁&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Arte de Pedir</title>
      <link>https://gmgall.net/books/a-arte-de-pedir/</link>
      <pubDate>Mon, 29 Aug 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/a-arte-de-pedir/</guid>
      <description>&lt;p&gt;Esse livro é uma elaboração mais longa dos assuntos abordados no TED Talk da Amanda Palmer.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/xMj_P_6H69g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Hoje é rotineiro, mas no tempo de publicação do livro, &lt;em&gt;crowdfunding&lt;/em&gt; não era uma coisa tão comum. Abandonar os intermediários e pedir financiamento aos fãs diretamente parecia uma loucura, alguns interpretavam como mendicância.&lt;/p&gt;
&lt;p&gt;Ela própria enfrentou dúvidas no processo, mesmo compreendendo que pedir ajuda é um processo de troca, humano e natural. Mesmo já tendo pedido ajuda não financeira em vários momentos de sua vida de artista, seja por um lugar para dormir, comida ou instrumentos musicais.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] não é tanto o ato de pedir que trava a gente. É o que está por trás: o medo de ser vulnerável, o medo de ser rejeitado, o medo de parecer fraco ou carente. O medo de ser visto como um estorvo, e não como agente ativo da comunidade. Isso leva essencialmente ao distanciamento entre as pessoas [&amp;hellip;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Muitas vezes, o que nos imobiliza é a própria sensação de que não merecemos ajuda.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Esse é o tema principal: &lt;strong&gt;o valor em pedir e aceitar ajuda&lt;/strong&gt;. O individualismo exacerbado promovido pelo capitalismo nos tira essa perspectiva, de que é normal ser ajudado. Quem pede ajuda receia ser visto como um fardo. Perdemos nossa capacidade de pedir ajuda, especialmente no campo emocional.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Em geral, eles não tinham muita dificuldade em certos departamentos do pedir, mas, quando se tratava das suas necessidades emocionais, isso virava um problema. Sabiam pedir aumento, mas não conseguiam pedir um abraço.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;É inspirador e não é um livro de autoajuda. É a jornada da autora de sua época de estátua viva até o rompimento com sua gravadora e campanha recordista no &lt;a href=&#34;https://www.kickstarter.com/&#34;&gt;Kickstarter&lt;/a&gt;, passando pelo adoecimento de seu melhor amigo, o casamento com Neil Gaiman, um aborto e muito mais.&lt;/p&gt;
&lt;p&gt;Nesse caminho, vemos as dificuldades e sucessos de Amanda no processo de pedir e a comunidade criada com ela e seus ajudadores.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Uma última nota: como a visão de que produzir arte não é trabalho é tacanha, não? E quando é percebido como trabalho, é valorado de acordo com algum validador externo. Irritante.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ninguém teria gritado VAI TRABALHAR para o cara que estivesse pegando os ingressos na porta de uma galeria em que A Noiva estivesse em exposição. É como se, com o passar do tempo, tanto os artistas quanto o público tivessem se acostumado à presença de um agente legitimador, um intermediário comercial que lança um pozinho de pirlimpimpim profissional sobre a troca.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Engenheiros do Caos</title>
      <link>https://gmgall.net/books/engenheiros-do-caos/</link>
      <pubDate>Sun, 21 Aug 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/engenheiros-do-caos/</guid>
      <description>&lt;p&gt;Esse livro apresenta um histórico recente dos métodos de comunicação dessa &amp;ldquo;nova&amp;rdquo; direita populista que tem &amp;ldquo;nadado de braçada&amp;rdquo; nas redes sociais.&lt;/p&gt;
&lt;p&gt;Uma combinação de líderes populistas com técnicas sofisticadas de persuasão baseadas em &lt;em&gt;microtargeting&lt;/em&gt;, &lt;em&gt;big data&lt;/em&gt; e &lt;em&gt;fake news&lt;/em&gt; resultou em dividendos eleitorais por todo o mundo, especialmente em uma conjuntura de revolta intensa  - porém difusa - com os ditos políticos &amp;ldquo;tradicionais&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Brexit, Donald Trump, Boris Johnson, Matteo Salvini e Jair Bolsonaro são flagelos paridos por esse processo. Compreender as ferramentas usadas por esses engenheiros do caos é um pequeno passo para sairmos desse buraco.&lt;/p&gt;
&lt;p&gt;Esse é o livro que mais recomendei em 2022.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Em termos políticos, a chegada do Big Data poderia ser comparada à invenção do microscópio. No passado, a partir de sondagens sempre aleatórias, os comunicadores políticos podiam atingir grandes aglomerados demográficos ou profissionais: os jovens, os professores do setor público, as donas de casa e assim por diante. Hoje, o trabalho dos físicos estatísticos permite enviar uma mensagem personalizada a cada eleitor com base nas características individuais.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>C.S. Lewis, Richard Dawkins e o Sentido da Vida</title>
      <link>https://gmgall.net/books/sentido-da-vida/</link>
      <pubDate>Sun, 07 Aug 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/sentido-da-vida/</guid>
      <description>&lt;p&gt;O autor Alister McGrath é um ex-ateu, teólogo e apologista cristão. Nesse livro, ele se propõe a &amp;ldquo;mediar um debate&amp;rdquo; entre &lt;a href=&#34;https://pt.wikipedia.org/wiki/C._S._Lewis&#34;&gt;C.S. Lewis&lt;/a&gt; e &lt;a href=&#34;https://pt.wikipedia.org/wiki/Richard_Dawkins&#34;&gt;Richard Dawkins&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lido há 10 anos, certamente me empolgaria muito. Lido em 2022, depois de alguns anos pensando e lendo sobre as questões tratadas no livro, pareceu-me que não fui apresentado a nada muito novo.&lt;/p&gt;
&lt;p&gt;Fiquei com a sensação que já tinha antes da leitura: cristãos - e religiosos em geral - não estão preocupados em discutir se suas crenças estão próximas da materialidade ou não, estão interessados em dar sentido às suas vidas.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lewis sugere que julguemos um conjunto de crenças por sua capacidade de dar sentido às coisas. Mas, certamente, devemos perguntar que evidência pode nos levar, em primeiro lugar, a adotar essas crenças, em vez de apenas tomá-las como certas e, em seguida, proceder à avaliação delas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Essa busca por sentido é muito legítima, não há nada errado nisso.&lt;/strong&gt; Só me parece uma complicação absurda adotar toda uma mitologia para isso.&lt;/p&gt;
&lt;p&gt;Em outros momentos, o autor parece tangenciar o caminho batido de afirmar que conhecer propriedades do universo é pouco importante ou monótono.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aqui estão três afirmações que acredito estar corretas, com base nas evidências disponíveis para mim:
1. A precipitação pluviométrica anual na cidade inglesa de Durham em 1870 foi de 604,8 mm.
2. O peso atômico do único isótopo estável de ouro é 197.
3. A fórmula química da água é H2O.&lt;/p&gt;
&lt;p&gt;Todas essas três afirmações atendem ao padrão ouro de confiabilidade, pois cada uma delas é rigorosamente baseada em evidências. No entanto, nenhuma delas parece muito importante. Um mundo baseado nessas afirmações não é apenas muito pequeno e monótono, é existencialmente insatisfatório – não passa de uma agregação de fatos. Acho que viver em um mundo tão mental não seria grande coisa, e certamente não seria significativo. Nós precisamos de mais.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Acho isso de uma falta de curiosidade absurda. Citando &lt;a href=&#34;https://pt.wikipedia.org/wiki/Douglas_Adams&#34;&gt;Douglas Adams&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Não basta apreciar a beleza de um jardim, sem ter que imaginar que há fadas nele?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ficando só no fato 2: o que &lt;strong&gt;exatamente&lt;/strong&gt; significa ter peso atômico 197? Isso torna o ouro parecido com mais algum elemento no universo? Qual a diferença entre um isótopo estável e um instável? O modelo atômico em si, surgiu como? É útil por quê? Que fenômenos ele explica? Se explica, significa que nós, feitos de matéria, somos, como disse &lt;a href=&#34;https://pt.wikipedia.org/wiki/Carl_Sagan&#34;&gt;Carl Sagan&lt;/a&gt;, o universo pensando sobre si próprio.&lt;/p&gt;
&lt;p&gt;Como isso é &amp;ldquo;pequeno e monótono&amp;rdquo; ou &amp;ldquo;existencialmente insatisfatório&amp;rdquo;?&lt;/p&gt;
&lt;p&gt;Dou créditos ao autor por se dedicar a apresentar com algum cuidado as posições do Dawkins - apesar de &amp;ldquo;puxar a sardinha&amp;rdquo; para o Lewis - e por tratar brevemente dos limites epistemológicos dos humanos. Na minha experiência, é mais boa vontade com um ateu do que demonstra a média dos cristãos.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Misto-Quente</title>
      <link>https://gmgall.net/books/misto-quente/</link>
      <pubDate>Sat, 06 Aug 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/misto-quente/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Reunidos ao meu redor estavam os fracos em vez dos fortes, os feios em vez dos belos, os perdedores em vez dos vencedores. Era como se meu destino fosse cruzar a vida em companhia deles. Isto não me incomodava tanto quanto o fato de que para esses cretinos, para esses companheiros idiotas, eu era um cara irresistível. Eu era como um monte de bosta que atraía moscas em vez de ser uma flor desejada por borboletas e abelhas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Esse é um romance de formação com aspectos autobiográficos. O protagonista não teve uma infância e adolescência fáceis.&lt;/p&gt;
&lt;p&gt;Nasceu pobre, em família de origem alemã. Cresceu em plena &lt;a href=&#34;https://en.wikipedia.org/wiki/Wall_Street_Crash_of_1929&#34;&gt;recessão pós-1929&lt;/a&gt;, sem perspectivas de ser mais que mão de obra superexplorada. Na adolescência teve um caso grave de acne, que o afastou das garotas. O pai era violento e autoritário. A mãe era passiva.&lt;/p&gt;
&lt;p&gt;O único alívio para aquela realidade desgraçada era a literatura e o álcool.&lt;/p&gt;
&lt;p&gt;É um livro bom e ruim. Bom porque você se envolve com o estilo do narrador, com as observações ácidas que ele faz. Ruim porque parece que nada vai melhorar nunca, para ninguém.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Por que tudo se reduz sempre a escolher entre algo ruim ou algo ainda pior?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Acho que a única sensação boa que o leitor tem em alguns momentos é a de que ele lidaria melhor com algumas das situações narradas. O protagonista &amp;ldquo;não se ajuda&amp;rdquo;. Essa sensação some logo quando você percebe que é privilegiado comparado com ele. Aí sobra a culpa por ter se achado superior.&lt;/p&gt;
&lt;p&gt;Recomendo, mas leia ciente que não é uma história feliz. Não tem redenção no final. Não tem heróis.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Construção de Mim Mesma: Uma História de Transição de Gênero</title>
      <link>https://gmgall.net/books/a-construcao-de-mim-mesma/</link>
      <pubDate>Sun, 31 Jul 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/a-construcao-de-mim-mesma/</guid>
      <description>&lt;p&gt;Esse livro narra a história da autora, mulher transgênero, que decidiu transicionar aos 50 anos de idade após um infarto que a fez perceber que não era viável continuar vivendo como vinha até aquele ponto.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ser você mesma é algo que pode ser reprimido e recalcado, mas nunca riscado da sua lista de desejos absolutamente fundamentais. O destino de cada pessoa é ser e se expressar no mundo tal como ela é. Essa é a principal, talvez a única, razão de ser da existência humana, e ninguém vai se livrar de ao menos tentar realizar essa tarefa enquanto estiver viva.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Por mais que o nosso desejo pareça abominável aos olhos da sociedade, tudo que temos a fazer, se quisermos ser criaturas minimamente equilibradas e felizes, é correr atrás dele, com todas as nossas forças. Como propôs Lacan, a única coisa da qual se pode ser culpado é de ter desistido do seu desejo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A narrativa começa com a infância da autora, período em que ela já era pressionada por um sentimento de inadequação muito forte.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Desde a minha primeira volta nos sapatos de salto da minha mãe, a percepção que me acompanha é que eu faria um favor enorme ao mundo não sendo quem eu sou.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;O livro não é meramente um relato autobiográfico das dificuldades enfrentadas por uma pessoa transgênero, os capítulos também são recheados com as reflexões da Letícia sobre papéis de gênero e o caráter revolucionário da transição de gênero. Esse último aspecto só fui enxergar após essa leitura.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A crença comum entre pessoas transgêneras é que realizar a transição de gênero implica a adoção integral de padrões de conduta e papéis sociais determinados pelo binarismo de gênero. Tal procedimento elimina o caráter transgressivo e revolucionário da transição de gênero, fazendo dela nada mais do que simples readequação da pessoa ao arbitrário e opressivo dispositivo binário de gênero vigente na sociedade.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;O paradoxo é que, para tornar-se alguém perfeitamente passável, é preciso abdicar inteiramente de qualquer visibilidade social como pessoa transgênera. A pessoa deve diluir-se no contexto geral da sociedade [&amp;hellip;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;É um texto muito franco. A autora não tem problemas em admitir, por exemplo, que sentiu alívio ao descobrir que o pai mantinha uma segunda família porque isso o tirava do pedestal de pessoa perfeita&amp;hellip;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;O pai que, durante toda a minha vida, tinha sido o bastião da moral e dos bons costumes, aparecia agora como uma pessoa comum, sujeita aos desejos e às falhas de qualquer mortal.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ou que projetava na esposa a feminilidade que não conseguia realizar, o que felizmente não resultou em separação, mas gerava conflitos entre o casal.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Eu buscava realizar nela a mulher que eu não tinha forças para realizar em mim. Na perspectiva do olhar masculino,&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Recomendo especialmente para pessoas cis, que frequentemente ficam a vida inteira sem conhecer as dificuldades enfrentadas pelas pessoas transgênero ou sem questionar papéis de gênero.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Demian</title>
      <link>https://gmgall.net/books/demian/</link>
      <pubDate>Wed, 27 Jul 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/demian/</guid>
      <description>&lt;p&gt;Uma das melhores leituras do ano até agora, mas difícil de resenhar. É um &lt;a href=&#34;https://en.wikipedia.org/wiki/Bildungsroman&#34;&gt;romance de formação&lt;/a&gt; que narra o amadurecimento do menino Emil Sinclair.&lt;/p&gt;
&lt;p&gt;É a trajetória de um garoto tentando tornar-se si mesmo. Isso exige o rompimento com o passado e com o &amp;ldquo;ninho&amp;rdquo; e a conciliação do &amp;ldquo;mundo luminoso&amp;rdquo; com o &amp;ldquo;mundo sombrio&amp;rdquo; (essa dualidade permeia toda a obra).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hoje sei muito bem que nada na vida repugna tanto ao homem do que seguir pelo caminho que o conduz a si mesmo!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Todavia, só me interessam os passos que tive de dar na vida para chegar a mim mesmo. Deixo resplandecer na distância todos os pontos de repouso, ilhas encantadas e paraísos, cujo sortilégio provei e aos quais não desejo voltar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;E há muitos também que se embaraçam para sempre nesses escolhos e permanecem a vida toda agarrados a um passado sem retorno, ao sonho do paraíso perdido, o pior e o mais assassino de todos os sonhos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Vejo que pensas mais do que podes exprimir. Mas vejo também que nunca viveste completamente aquilo que pensas, e isso não é bom. Somente as ideias que vivemos é que têm valor. Percebeste que o “mundo permitido” era apenas a metade do mundo, e trataste de ocultar a outra metade, como fazem os religiosos e os professores. Jamais o conseguirás! Ninguém o consegue, a partir do momento em que começa a pensar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Quanto a mim, me sentia sem cuidados. Mantinha à minha maneira, tão singular quanto pouco atrativa — com bebedeira e jogo — a luta contra o mundo: era minha forma de protesto. Mas com ela me aniquilava, e ao perceber isso equacionava às vezes a questão nos seguintes termos: “Se o mundo não podia utilizar homens como eu, se não tinha para mim nenhum lugar melhor nem podia arranjar-me uma função mais alta, então não me restava outro caminho senão o aniquilamento. Pior para o mundo.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Quando me comparava com os demais, sentia-me muitas vezes orgulhoso e satisfeito comigo mesmo, e em outras tantas deprimido e humilhado. Ora me acreditava um verdadeiro gênio, ora meio maluco. Não me era possível compartilhar a vida e as alegrias dos outros rapazes de minha idade, e às vezes reprovava asperamente o meu isolamento e sentia profunda tristeza, crendo-me definitivamente afastado deles, sentindo-me excluído da vida.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Às vezes você se considera demasiado esquisito e se reprova por seguir caminhos diversos dos da maioria. Deixe disso. Contemple o fogo, as nuvens e quando surgirem presságios e as vozes soarem em sua alma abandone-se a elas sem perguntar se isso convém ou é do gosto do senhor seu pai ou do professor ou de algum bom deus qualquer. Com isso só conseguimos perder-nos, entrar na escala burguesa e fossilizar-nos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Não devemos temer nem julgar ilícito nada do que nossa alma deseja em nós mesmos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Mas o que impulsionava minha evolução interior não era essa ocupação erudita, mas algo totalmente contrário. O que verdadeiramente me fazia bem era o progresso do conhecimento de mim mesmo, minha confiança crescente em meus próprios sonhos, ideias e intuições; a revelação, cada dia mais clara, do poder que em mim mesmo levava.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;“Quem quiser nascer tem de destruir um mundo” — eis a mensagem — destruir no sentido de romper com o passado e as tradições já mortas, de desvincular-se do meio excessivamente cômodo e seguro da infância para a consequente dolorosa busca da própria razão de existir: ser é ousar ser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;O pouco que escrevi e esses trechos que destaquei não fazem jus à leitura da obra completa. Recomendo demais.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Herland: A Terra das Mulheres</title>
      <link>https://gmgall.net/books/herland/</link>
      <pubDate>Wed, 20 Jul 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/herland/</guid>
      <description>&lt;p&gt;Esse livro é uma utopia de 1915 que descreve uma sociedade formada unicamente por mulheres.&lt;/p&gt;
&lt;p&gt;A história é narrada por um sociólogo, que junto de outros 2 companheiros, fazem uma expedição até esse país. O narrador seria o personagem com a visão mais &amp;ldquo;neutra&amp;rdquo; e &amp;ldquo;científica&amp;rdquo; dos 3. Um outro é um sulista estadunidense que idealiza as mulheres como criaturas perfeitas e o terceiro é um tradicional &amp;ldquo;machão&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;A autora questiona papéis de gênero por meio do choque cultural que esses 3 personagens têm com as nativas.&lt;/p&gt;
&lt;p&gt;É uma história interessante, mas muito dos questionamentos que a autora levanta sobre as questões de gênero não foram novidade para mim. Já esperava alguns deles.&lt;/p&gt;
&lt;p&gt;A sociedade utópica dá uma ênfase muito grande na maternidade. Era o serviço social mais importante para as habitantes. A forma como tudo é organizado em torno da educação da próxima geração me chamou bem mais a atenção do que a questão de gênero em si. Esse tema dialoga um pouco com &lt;em&gt;A Mão Esquerda da Escuridão&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nenhuma filha daquela terra deparava com a grosseria excessiva que frequentemente dirigimos às nossas crianças. Elas eram pessoas também, desde pequenas; o maior tesouro da nação.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A princípio, eu havia me perguntado quando iriam para a escola, então descobri que nunca iam. Tudo dizia respeito à educação, mas não havia escola.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Existem alguns temas secundários que também são interessantes e infelizmente não foram tão desenvolvidos quanto a questão de gênero. Falo de alguns abaixo.&lt;/p&gt;
&lt;p&gt;Relacionamentos amorosos eram radicalmente diferentes, com praticamente nenhuma ideia de posse.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Agora tinha ficado claro para nós que aquelas mulheres tinham a mais alta, intensa e delicada ideia de privacidade, e nem a mais vaga noção da &lt;em&gt;solitude a deux&lt;/em&gt; que tanto apreciamos. Todas elas pareciam defender a teoria de quartos e banheiros separados. Desde a mais tenra infância, cada uma tinha uma suíte própria, e um dos marcos de entrada na vida adulta era a adição de um cômodo onde receber as amigas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;— Mas &lt;em&gt;estamos&lt;/em&gt; sozinhos, querido - Ellador me explicou com toda a paciência. — Estamos sozinhos nesta enorme floresta; podemos comer em qualquer lugar: só eu e você, ou em uma mesa separada, ou ainda cada um em seu quarto. Como poderíamos ficar ainda mais sozinhos?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Tínhamos nossa solidão mútua e agradável enquanto trabalhávamos, e longas e agradáveis conversas na casa delas ou na nossa; tínhamos, por assim dizer, todos os prazeres do namoro; mas não havia nada do que acho que poderia ser chamado de &amp;ldquo;posse&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Patriotismo é brevemente comentado. Esse é outro tema que aparece em &lt;em&gt;A Mão Esquerda da Escuridão&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nutriam um afeto praticamente universal umas pelas outras, estabelecendo amizades fortes e inquebrantáveis, dedicando sua devoção ao seu país e ao seu povo de uma maneira que nosso termo &amp;ldquo;patriotismo&amp;rdquo; não é suficiente para definir.
O patriotismo em si é compatível com a existência de interesses nacionais negligenciados, desonestidade, uma indiferença fria ao sofrimento de milhões. Patriotismo é em grande parte orgulho e combatividade. O patriotismo em geral envolve sentimentos de superioridade e inferioridade.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Uma religião não baseada na dualidade bem/mal e uma sociedade antipunitivista fecham os temas que considerei interessantes. Como comentei, são temas secundários. O foco é na questão de gênero mesmo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Mão Esquerda da Escuridão</title>
      <link>https://gmgall.net/books/a-mao-esquerda-da-escuridao/</link>
      <pubDate>Sun, 26 Jun 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/a-mao-esquerda-da-escuridao/</guid>
      <description>&lt;p&gt;Essa ficção científica narra a missão de um humano, Genly Ai, no planeta Gethen (também chamado de Inverno). O objetivo da missão é persuadir os líderes das nações do planeta a unirem Gethen a uma espécie de comunidade universal, algo como uma &amp;ldquo;ONU planetária&amp;rdquo;, que objetiva intercâmbio cultural e científico.&lt;/p&gt;
&lt;p&gt;A cultura getheniana é ricamente descrita e difere da nossa num aspecto muito fundamental: a diferença entre os gêneros. Os gethenianos não assumem permanentemente papéis masculinos ou femininos. Eles passam a maior parte do mês num estado não fértil, com aparência andrógina. Só desenvolvem características sexuais durante o período denominado &lt;em&gt;kemmer&lt;/em&gt;, uma espécie de cio, e um mesmo getheniano pode assumir características masculinas e femininas ao longo da vida, de acordo com variáveis ambientais.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Choque cultural não era quase nada comparado ao choque biológico que sofri como macho humano em meio a seres que eram, oitenta por cento do tempo, hermafroditas assexuados.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Os efeitos sociais e culturais dessa diferença biológica são grandes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Considere: qualquer um pode trabalhar em qualquer coisa. Parece muito simples, mas os efeitos psicológicos são incalculáveis. O fato de toda a população, entre dezessete e trinta e cinco anos de idade, estar sujeita a ficar (como Nim definiu) &amp;ldquo;amarrada à gravidez&amp;rdquo; sugere que ninguém aqui fica tão completamente &amp;ldquo;amarrado&amp;rdquo; como, provavelmente, ficam as mulheres em outros lugares - psicológica ou fisicamente. Fardo e privilégio são compartilhados de modo bem igualitário; todos têm o mesmo risco a correr ou a mesma escolha a fazer. Portanto, ninguém aqui é tão completamente livre quanto um macho livre, em qualquer outro lugar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Considere: não existe nenhuma divisão da humanidade em metades forte e fraca, protetora/protegida, dominante/submissa, dona/escrava, ativa/passiva. Na verdade, pode-se verificar que toda a tendência ao dualismo que permeia o pensamento humano é muito reduzida, ou alterada, aqui em Inverno.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Um homem deseja que sua virilidade seja reconhecida, uma mulher deseja que sua feminilidade seja apreciada, por mais indiretos que sejam esse reconhecimento ou essa apreciação. Em Inverno, isso não vai existir. Julga-se ou respeita-se uma pessoa apenas como ser humano.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;O carinho pelos filhos pareceu-me profundo, efetivo e quase que desprovido de possessividade. Só nessa falta de possessividade ele talvez se diferencie do que chamamos instinto &amp;ldquo;materno&amp;rdquo;. Desconfio que a distinção entre instintos materno e paterno nem mereça ser mencionada; o instinto, o desejo de proteger e de favorecer, não é uma característica ligada ao sexo&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;O livro não te coloca para pensar só em papéis de gênero. Nos trechos abaixo, temos uma reflexão sobre patriotismo:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Conheço pessoas, conheço cidades, fazendas, montanhas, rios e rochas, sei como o sol poente do outono se esparrama pela face de um certo tipo de terra arada nas montanhas; mas o sentido de impor uma fronteira a isso tudo, dar-lhe um nome e deixar de amar o lugar onde o nome não se aplica? O que é o amor pelo seu país? É o ódio pelo seu não-país? Então, não é uma coisa boa. É apenas amor próprio? Isso é bom, mas não se deve fazer dele uma virtude ou uma profissão de fé&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;E me perguntei, não pela primeira vez, o que é patriotismo, no que consiste verdadeiramente o amor pelo país, como surge a terna lealdade que deixara embargada a voz de meu amigo - e como esse amor tão real pode se transformar, com frequência, em intolerância tão vil e insensata. Em que ponto ele se torna nocivo?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Foi uma leitura sensacional, pelos questionamentos e pelo enredo. Certamente lerei mais coisas da autora.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fraude, Fome &amp; Fascismo: O Mito do Genocídio Ucraniano de Harvard à Hitler</title>
      <link>https://gmgall.net/books/fraude-fome-fascismo/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/fraude-fome-fascismo/</guid>
      <description>&lt;p&gt;O livro contesta o mito da fome-genocídio de 1932-1933, que teria sido perpetrado pela URSS contra a Ucrânia. Essa é das principais armas do arsenal de propaganda anticomunista e antissoviética.&lt;/p&gt;
&lt;p&gt;As referências são abundantes: 27 páginas são necessárias só para listar a bibliografia e as notas. Quem quiser se aprofundar no assunto, está muito bem servido.&lt;/p&gt;
&lt;p&gt;Li já esperando relatos de manipulação histórica para demonizar a URSS, mas mesmo assim fui surpreendido com a escala da campanha de desinformação levada a cabo por imprensa, acadêmicos, igrejas, fascistas e burgueses.&lt;/p&gt;
&lt;p&gt;Existem &amp;ldquo;fontes&amp;rdquo; que não estiveram nem perto dos locais dos eventos que relataram, fotos de fomes anteriores sendo apresentadas como a de 32-33, material nazista usado como &amp;ldquo;prova&amp;rdquo;. Números de mortos eram atribuídos ao evento de forma bastante arbitrária, ignorando fluxos migratórios e epidemias. A ajuda enviada por Moscou e a colaboração dos nacionalistas ucranianos (um dos principais grupos políticos envolvidos na popularização do mito) aos nazistas são escondidas. Esse um resumo super sucinto.&lt;/p&gt;
&lt;p&gt;O único lado ruim dessa leitura foram os erros de revisão da edição (a primeira) mas não há nada que prejudique o entendimento do conteúdo. Recomendo a leitura.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Será que Isso Presta?</title>
      <link>https://gmgall.net/books/sera-que-isso-presta/</link>
      <pubDate>Wed, 23 Mar 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/sera-que-isso-presta/</guid>
      <description>&lt;p&gt;Esse livro traz os textos de stand-up do Seinfeld desde o início de sua carreira na década de 70. Precisava de um livro leve e que me distraísse dado o &lt;a href=&#34;https://pt.wikipedia.org/wiki/Enchentes_e_deslizamentos_de_terra_em_Petr%C3%B3polis_em_2022&#34;&gt;momento em que iniciei a leitura&lt;/a&gt;. &lt;em&gt;Será que isso presta?&lt;/em&gt; cumpriu esse papel.&lt;/p&gt;
&lt;p&gt;Alguns textos me pareceram geniais, fruto de uma observação muito astuta da realidade. Outros, achei bem clichês. Natural em uma carreira tão longa. No geral, é uma leitura divertida. Os textos mais clichês não &amp;ldquo;estragam&amp;rdquo; a leitura.&lt;/p&gt;
&lt;p&gt;O livro é dividido nas décadas de carreira do autor e cada década é iniciada com um texto dele falando sobre sua vida e o processo de criação das piadas. Esses textos são curtos. Uma pena porque talvez um livro só com isso fosse mais interessante do que uma coletânea de piadas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ninguém Escreve ao Coronel</title>
      <link>https://gmgall.net/books/ninguem-escreve-ao-coronel/</link>
      <pubDate>Sun, 13 Mar 2022 00:58:37 -0300</pubDate>
      
      <guid>https://gmgall.net/books/ninguem-escreve-ao-coronel/</guid>
      <description>&lt;p&gt;A história angustiante de um coronel que lutou numa revolução e fica no aguardo de uma carta sobre a pensão a que tem direito por ser veterano. Enquanto espera muitos anos pela carta que nunca chega, precisa lidar com a miséria, com a mulher doente e o luto pela morte do filho.&lt;/p&gt;
&lt;p&gt;O pequeno povoado em que vive é modorrento, pacato. O coronel é um homem determinado (alguns diriam teimoso) e suporta a espera imposta pela burocracia estatal desumanizante com uma dignidade inabalável.&lt;/p&gt;
&lt;p&gt;Entendo que tem um comentário sobre a América do Sul aqui, especialmente sobre a Colômbia do autor, mas não foi um livro que me arrebatou.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sobre a Brevidade da Vida</title>
      <link>https://gmgall.net/books/sobre-a-brevidade-da-vida-sobre-a-firmeza-do-sabio/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/sobre-a-brevidade-da-vida-sobre-a-firmeza-do-sabio/</guid>
      <description>&lt;p&gt;Dois textos do filósofo Sêneca em formato epistolar. Ambos apresentam conceitos &amp;ldquo;óbvios&amp;rdquo;, mas que acabamos esquecendo.&lt;/p&gt;
&lt;p&gt;O 1º afirma que a vida não é tão breve quanto frequentemente se afirma que ela é. Nós a percebemos como breve porque desperdiçamos muito tempo:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;É assim que acontece: não recebemos uma vida breve, mas a fazemos; dela não somos carentes, mas pródigos. Tal como amplos e magníficos recursos, quando vêm para um mau detentor, são dissipados num instante, ao passo que, por mais modestos que sejam, se entregues a um bom guardião, crescem pelo uso que se faz deles, assim também a nossa existência é bastante extensa para quem dela bem dispõe.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Também estimula a contemplação e autoaperfeiçoamento. Dedicar-se mais a si mesmo ao invés de aos outros. O tempo que damos aos outros com muita liberalidade é um assunto importante em vários trechos.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ousa queixar-se da soberba do outro alguém que para si mesmo nunca tem tempo? Aquele, porém, mesmo com expressão insolente, olhou para ti, quem quer que sejas, ouviu tuas palavras, admitiu-te a seu lado: tu jamais te dignaste a te observar e a te ouvir. Assim, não há razão para que censures em alguém essas obrigações, posto que, na verdade, sempre que tu a cumprias, não é que desejavas estar com a outra pessoa, mas não podias estar contigo mesmo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Não se encontra ninguém que queria repartir seu dinheiro; já sua vida, quanto cada um a distribui entre muitos! São mesquinhos na retenção do patrimônio; mas, tão logo se trate de gastar tempo, são extremamente pródigos com a única coisa em relação à qual a avareza é honrosa.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Acredita-me, é próprio de um grande homem, daquele que está acima dos erros humanos, não permitir que tomem nada de seu tempo, e é por isso que a vida dele é muito longa: porque todo o tempo que lhe esteve disponível foi inteiramente reservado para si. Dele nada ficou sem uso e ocioso, nada esteve na dependência de outra pessoa, pois ele não encontrou nada que fosse digno de permutar por seu tempo, sendo dele um guardião bastante parcimonioso. Assim, o tempo foi para ele suficiente, mas é forçoso que tenha faltado para aqueles de cuja vida muito foi levado por um multidão.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Alerta o leitor da armadilha de usar a maior parte da vida no trabalho e outras atividades de rotina e deixar de viver:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Não te envergonha reservar para ti essas sobras de vida e destinar ao aprimoramento da alma apenas esse tempo que não poderias empregar em mais nada? Quanto é tardio começar a viver só quando é hora de terminar!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Até dá alguns exemplos:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;O divino Augusto, que os deuses elevaram mais do que a nenhum outro, não deixou de solicitar repouso para si e de pedir afastamento da administração pública. Toda conversa sua sempre esteve voltada para este ponto: que ele esperava retirar-se. Porém, ele se distraía de suas fadigas com este doce consolo, mesmo que falso: o de que um dia haveria de viver para si. Em carta ao Senado [&amp;hellip;] encontrei as seguintes palavras: &amp;ldquo;Mas isso pode ser mais ilusoriamente prometido do que realizado. No entanto, posto que a alegria real ainda demora, o desejo de um momento por mim tão almejado levou-me a experimentar de antemão algo desse prazer pelo deleite de expressá-lo em palavras&amp;rdquo;. O ócio pareceu-lhe um bem tão grande que ele o tomou antecipadamente em pensamento, posto que pelo usufruto não podia.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;O habitual &amp;ldquo;cair na rotina, manter-se nela mesmo que a odeie e só reclamar&amp;rdquo; também aparece:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Seria supérfluo mencionar muitas pessoas que, apesar de para os outros parecerem felicíssimas, deram contra si testemunho exato ao odiar toda atividade que empreenderam em seus anos. Mas, com tais lamentos, não modificaram nem os outros, nem a si próprias, pois seus sentimentos retornam ao padrão habitual logo depois de descarregados pelas palavras.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Estar atarefado não quer dizer que você esteja fazendo coisas significativas:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Enfim, é consenso que nenhuma atividade pode ser bem exercida por um homem ocupado, nem eloquência, nem estudos liberais, dado que seu espírito sobrecarregado não absorve nada de modo mais profundo, mas rejeita tudo como se lhe tivesse sido imposto. Nada é menos peculiar do homem ocupado do que viver. Não há coisa mais difícil de saber do que viver.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Usa uma analogia sensacional para dizer que ser velho não quer dizer que se viveu muito.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Então, não há motivo para pensares que alguém viveu longamente só por causa dos cabelos brancos ou das rugas: ele não viveu longo tempo, mas existiu longo tempo. É como se pensasses que navegou muito quem um terrível tempestade surpreendera na saída do porto, impelindo-o para um lado e outro sob ventos furiosos de diversas direções, e fazendo-o deslocar-se em círculo pelos mesmos lugares. Ele não navegou muito, mas foi muito fustigado.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Um trecho que foi como um tapa de luva de pelica foi o que reproduzo abaixo. Eu estou sempre adiando coisas por excesso de zelo&amp;hellip;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pode haver algo mais insensato do que o pensamento de algumas pessoas? Digo aquelas que se jactam de sua prudência. Estão empenhadamente ocupadas para que possam viver melhor; planificam sua vida com dispêndio de vida. Dispõem seus planos num longo prazo. Ora, mas a maior perda de vida é a protelação: esta nos arranca um dia após o outro, rouba-nos o presente enquanto promete o futuro. O maior obstáculo à vida é a expectativa, que fica na dependência do amanhã e perde o momento presente. Tu dispões o que está na mão da Fortuna, deixas de lado o que está nas tuas. Para onde olhas? Para onde te projetas? Tudo o que há de vir repousa na incerteza.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Se o resumo do 1º texto é &amp;ldquo;a vida não é curta, você que a desperdiça&amp;rdquo;, o resumo deste &amp;ldquo;Sobre a Firmeza do Sábio&amp;rdquo; seria &amp;ldquo;o que vem de baixo não me atinge&amp;rdquo;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;E então? Não poderá haver alguém que tente fazer injúria ao sábio?&amp;rdquo; Tentará, mas esta não irá atingi-lo. Ele de fato se encontra afastado do contato com o que lhe é inferior por uma distância grande demais para que alguma força negativa possa fazer chegar sua influência até ele.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A percepção que temos das crianças, o sábio a tem de todos os homens, que, mesmo depois da juventude e da velhice, permanecem na infância.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sêneca afirma que é inútil desejar que o façam mal, você precisa aprender a lidar com isso.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Mas seria melhor que não houvesse ninguém que quisesse fazê-lo.&amp;rdquo; Desejas coisa difícil para o gênero humano: a inofensividade. E o fato de não se fazer tem importância para os que têm intenção de fazer, não para aquele que não pode sofrer tal ação nem mesmo se lhe for feita.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A ideia de que o sábio só possui a própria virtude e de que as demais coisas são passageiras também é bem presente no texto. Dentro dessa ideia, um sábio não pode sofrer injúria.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Assim, não perderá nada do que ele verá como perecível. Está realmente de posse só da virtude, da qual não pode nunca ser destituído, das demais coisas faz uso temporário. Ora, quem se abala pela perda de um bem alheio? E se a injúria nada pode lesar desses bens que são próprios do sábio, porque, estando salva a virtude, salvos estão seus bens, ao sábio não se pode fazer injúria.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sêneca conta que o filósofo Estilbão - que teve seu patrimônio tomado como despojo de guerra - foi interrogado por Demétrio - o conquistador - se havia sofrido alguma perda. O filósofo responde: &amp;ldquo;Nenhuma, tudo o que é meu tenho comigo&amp;rdquo;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ele, no entanto, arrancou-lhe a vitória e atestou que estava não só invicto, como indene, pois tinha consigo os verdadeiros bens, sobre os quais não se pode lançar as mãos, e aqueles, dissipados e saqueados, que estavam sendo levados, não os julgava seus, mas exteriores e resultantes do desejo da fortuna. Por isso, não os apreciava como bens próprios. Realmente, é instável e incerta a posse de tudo quanto nos vem de fora.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Resiliência é outro valor que aparece como cultivado pelo sábio:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;O sábio, porém, não se sente menosprezado, por ninguém, conhece sua grandeza e afirma para si mesmo que ninguém tem poder sobre ele, e todos esses sentimentos que eu poderia chamar não de males, e sim de contrariedades da alma, ele não se empenha em vencer, pois nem sequer os sente.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;O cuidado com os conflitos em que você entra é outra questão de &amp;ldquo;bom senso&amp;rdquo; abordada mas que merece sempre ser relembrada.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;É de ânimo mesquinho quem se compraz em ter respondido com franqueza ao porteiro e quebrado o seu bastão, ter ido ao seu senhor e tê-lo feito açoitar. Quem entra numa contenda converte-se em adversário e, mesmo que vença, fica igualado ao oponente.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Consciência tranquila é outra característica que ajuda o sábio a enfrentar adversidades.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Essas coisas me acontecem merecida ou imerecidamente? Se merecidamente, não é contumélia, é uma sentença; se imerecidamente, aquele que pratica essa injustiça deveria enrubescer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;O final do texto lembra que todos esses conselhos não podem ser confundidos com um conselho de não sentir, de supressão dos sentimentos:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mas também não é liberdade nada sentir, enganamo-nos: liberdade é situar o ânimo acima das injúrias e constituir-se como um ser cuja felicidade lhe venha unicamente de si; é separar de si os eventos exteriores para não ter de levar uma vida atormentada, a temer o riso de todos, a língua de todos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Os imperfeitos, que se pautam ainda pela opinião comum, devem imaginar o seguinte: que eles terão de viver em meio a injúrias e contumélias; tudo lhes chegará mais leve se já estiverem esperando.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Encerro o comentário sobre esse livro destacando o quão boa é a seção de notas dessa edição da Penguin e Companhia das Letras. Várias observações sobre tradução e eventos históricos ajudam bastante na compreensão dos textos. É perfeitamente possível entender as ideias principais sem as notas, mas fica faltando um contexto bem interessante.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>As Doencas do Brasil</title>
      <link>https://gmgall.net/books/as-doencas-do-brasil/</link>
      <pubDate>Tue, 08 Feb 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/as-doencas-do-brasil/</guid>
      <description>&lt;p&gt;Uma história da época da colonização contada sob o ponto de vista dos nativos do Brasil e, em menor medida, dos povos escravizados aqui. O personagem principal é Honra, um indígena gerado a partir do estupro de sua mãe por um branco. Uma história de violência, mas narrada com muito lirismo através da &amp;ldquo;prosa poética&amp;rdquo; do autor.&lt;/p&gt;
&lt;p&gt;Precisei ler uns 20% do livro até me acostumar com a linguagem. Inicialmente houve estranhamento. Uma vez acostumado, achei muito bela. Lamentei quando cheguei ao fim da história.&lt;/p&gt;
&lt;p&gt;É um autor que definitivamente preciso conhecer mais.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Eu Odeio os Homens</title>
      <link>https://gmgall.net/books/eu-odeio-os-homens/</link>
      <pubDate>Sat, 05 Feb 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/eu-odeio-os-homens/</guid>
      <description>&lt;p&gt;Um ensaio de uma feminista que, em síntese, defende o direito das mulheres de sentirem raiva dos homens. E isso não é uma coisa indesejável, não é sinônimo de violência.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Muitas vezes confundimos raiva e violência, contudo essas duas palavras não aparecem sempre em par. A raiva de sermos tratadas como inferiores não é comparável com a violência que os homens nos humilham, nos violam e nos matam, nem mesmo com a a violência dos homens que nos ignoram, nos viram as costas e riem da nossa cara.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;O título chamativo pode suscitar o pensamento de que é um texto extremista, mas logo fica claro que a autora exprime frustrações e preocupações justificadas com o patriarcado.&lt;/p&gt;
&lt;p&gt;É uma leitura básica sobre feminismo. Apresenta as frustrações que motiva o movimento. Se você deseja genuinamente entender essas frustrações, é uma leitura rápida e vale a pena. Se você já conhece um pouco sobre o assunto, não sei se será de grande proveito.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cães Negros</title>
      <link>https://gmgall.net/books/caes-negros/</link>
      <pubDate>Sat, 29 Jan 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/caes-negros/</guid>
      <description>&lt;p&gt;A história de um casal bastante apaixonado que acaba se separando por diferenças de visão de mundo irreconciliáveis.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A verdade é que nós nos amamos, nunca deixamos de nos amar, somos obcecados. E fracassamos em fazer algo com isso. [&amp;hellip;] Não conseguimos desistir do amor, mas não nos curvamos ao seu poder. [&amp;hellip;] Se sou amarga é porque nunca me perdoei.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ambos iniciam o relacionamento alinhados, inclusive politicamente. Tornam-se membros do partido comunista britânico. Há muitos planos para o casal e para o mundo (a história se passa na otimista Europa pós 2ª Guerra); mas Bernard é materialista e permanece assim ao longo da vida, já June torna-se mística e espiritualista após uma experiência traumática.&lt;/p&gt;
&lt;p&gt;O narrador é o genro que não possui uma posição bem definida. No prefácio ele afirma:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Em conversas com eles ao longo de muitos anos, descobri que o vazio emocional, a sensação de não pertencer a lugar nenhum e a ninguém que me afligiu entre os oito e trinta e sete anos, teve uma importante consequência intelectual: eu não tinha apegos, não acreditava em nada.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;É a escolha ideal de narrador por conseguir ficar &amp;ldquo;neutro&amp;rdquo;.  Nem sobre sua própria falta de paixão por uma posição o narrador tem convicção:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A meu ver, acreditar em tudo, não fazer escolhas, dá no mesmo que não acreditar em coisa alguma. Não sei ao certo se nossa civilização, nesta virada de milênio, sofre de um excesso ou de uma falta de crença, se são pessoas como Bernard ou June que causam problemas, ou pessoas como eu.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Atrito com pessoas queridas por divergências ideológicas se tornou uma experiência bem comum nos últimos anos. Muita gente vai se identificar com esse livro. Gostei bastante.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Barata</title>
      <link>https://gmgall.net/books/a-barata/</link>
      <pubDate>Thu, 20 Jan 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/a-barata/</guid>
      <description>&lt;p&gt;Uma versão &amp;ldquo;reversa&amp;rdquo; de &lt;em&gt;A Metamorfose&lt;/em&gt; de Kafka em que ao invés de um Gregor Samsa transformado em inseto temos um inseto que certo dia se vê transformado em humano. Um humano que por um acaso é primeiro ministro britânico e está tentando implementar uma mudança econômica absurda.&lt;/p&gt;
&lt;p&gt;Foi escrito como uma sátira ao processo que culminou no Brexit e recebeu algumas críticas negativas pela falta de sutileza ao expor a opinião política do autor. A analogia políticos = baratas é bastante óbvia e o livro até inclui um posfácio só para falar sobre a situação política da Grã-Bretanha.&lt;/p&gt;
&lt;p&gt;Não é a obra prima do autor, mas é divertido e rápido de ler.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Enclausurado</title>
      <link>https://gmgall.net/books/enclausurado/</link>
      <pubDate>Sun, 16 Jan 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/enclausurado/</guid>
      <description>&lt;p&gt;O narrador desse livro é um feto que acompanha o planejamento e execução de um crime pela mãe de dentro dela. Só essa frase acho que já motiva o suficiente a leitura. Tem uma pegada de &lt;em&gt;thriller&lt;/em&gt;, livro difícil de largar depois de iniciada a leitura.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Atenção</title>
      <link>https://gmgall.net/books/atencao/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/books/atencao/</guid>
      <description>&lt;p&gt;O autor é um zen-budista que propõe o que chama de práticas de atenção para tentar aplacar o autocentramento, superficialidade e falta de zelo com que fazemos as coisas hoje em dia.&lt;/p&gt;
&lt;p&gt;Não é um livro de autoajuda. Mais do que autoaprimoramento, é sugerido prestar atenção no outro como veículo de ação política, de mudança material no mundo.&lt;/p&gt;
&lt;p&gt;Cada capítulo trata de uma prática. É tanta coisa interessante que tenho dificuldade de resumir. Vou apenas destacar alguns trechos abaixo:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;De um modo ou de outro, julgamos as outras pessoas por suas ações, mas queremos ser julgadas por nossas intenções.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Não há nada no mundo mais bem distribuído do que o bom senso&amp;rdquo;, escreveu Descartes, com um toque de ironia, na primeira frase do &lt;em&gt;Discurso do método&lt;/em&gt;: &amp;ldquo;Mesmo aquelas pessoas que acham que poderiam ser mais ricas, ou mais cultas, ou mais bonitas, ou mais instruídas, consideram que possuem bom senso na medida certa.&amp;rdquo; Mas o que pode ser mais egocêntrico do que a própria &lt;em&gt;ideia&lt;/em&gt; de bom senso, esse critério autocentrado de medição do mundo?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Afinal, apesar da irresistível força de nossas autoevidentes certezas, se nossa amiga e nós temos opiniões diferentes sobre a vida &lt;em&gt;dela&lt;/em&gt;, por que a &lt;em&gt;nossa&lt;/em&gt; opinião estaria automaticamente certa?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Somos péssimas juízas de nós mesmas: além de autoindulgentes, levamos excessivamente em conta nossas intenções. Já as outras pessoas têm a enorme vantagem de nos analisar somente por nossas ações.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Reconhecer o direito das outras pessoas de viverem livres da opressão de nossas opiniões invasivas também é uma maneira de agir politicamente no mundo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Não é verdade que devemos tratar as pessoas como gostaríamos de ser tratadas. Porque a outra pessoa é uma outra pessoa. Porque ela tem outros traumas, outras necessidades. Basicamente, porque ela não sou eu. Porque eu não sou, nem nunca vou ser, nem devo ser, a medida de como as outras pessoas devem ser tratadas. Utilizar a mim mesma, minhas vontades e necessidades, como parâmetro para todas as outras pessoas é a essência do autocentramento e do egocentrismo. É o exato oposto da empatia, da atenção, do cuidado. A outra pessoa deve ser tratada não como &lt;em&gt;eu&lt;/em&gt; gostaria de ser tratada, mas como ela merece, precisa, deseja ser tratada.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Considerando o curtíssimo tempo que passamos existindo e a quase eternidade que passamos não existindo, nosso estado natural é a não existência. Existir seria apenas um breve soluço, um &lt;em&gt;glitch&lt;/em&gt;, um &lt;em&gt;bug&lt;/em&gt;, dentro de uma perfeita, plena e eterna condição de não existir. Somos todos seres inexistentes que, por um acaso, existem. Mas não por muito tempo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;O nosso Eu apenas busca tão desesperadamente pertencer porque ele mesmo se posiciona (eu aqui, o universo ali) como uma entidade apartada da totalidade à qual pertence. Por definição, para um Eu apartado, não existe pertencimento possível: sua carência será insaciável.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[&amp;hellip;] poucos conselhos são mais canalhas do que &amp;ldquo;seja você mesma&amp;rdquo;. A maioria dos problemas do mundo veio de pessoas que estavam simplesmente &amp;ldquo;sendo elas mesmas&amp;rdquo;. Mais importante do que sermos nós mesmas é sermos quem queremos ser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Como fica claro pela quantidade de trechos que marquei, achei a leitura instigante.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Awful German Language</title>
      <link>https://gmgall.net/books/the-awful-german-language/</link>
      <pubDate>Sun, 02 Jan 2022 23:36:46 -0300</pubDate>
      
      <guid>https://gmgall.net/books/the-awful-german-language/</guid>
      <description>&lt;p&gt;Um ensaio humorístico sobre as frustrações de um nativo do inglês ao tentar aprender alemão.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My philological studies have satisfied me that a gifted person ought to learn English (barring spelling and pronouncing) in thirty hours, French in thirty days, and German in thirty years. It seems manifest, then, that the latter tongue ought to be trimmed down and repaired. If it is to remain as it is, it ought to be gently and reverently set aside among the dead languages, for only the dead have time to learn it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;O texto traz várias das reclamações dos iniciantes contemporâneos em alemão  (como a diferença entre os casos, posicionamento dos verbos e verbos separáveis), mas tem algumas colocações surpreendentes para um leitor de 2022.&lt;/p&gt;
&lt;p&gt;Chamou muito a minha atenção como a língua alemã é descrita como frívola, mansa, pouco impressionante. O Twain sugere a importação de palavras &amp;ldquo;fortes&amp;rdquo; do inglês para xingar e &amp;ldquo;descrever coisas vigorosas de maneiras vigorosas&amp;rdquo;. Um contraste brutal com a forma como vídeos de &lt;a href=&#34;https://youtu.be/NcxvQI88JRY&#34;&gt;YouTube&lt;/a&gt; e &lt;a href=&#34;https://www.tiktok.com/@ifluent/video/6985297060715040006&#34;&gt;TikTok&lt;/a&gt; percebem a língua, onde ela é descrita como ríspida e meio assustadora, &amp;ldquo;forte&amp;rdquo; até demais. Fiquei me perguntando o quanto o governo de um certo chanceler de bigode engraçado influenciou nessa mudança de percepção.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Criando Suas Próprias Ações no fail2ban - Parte 3</title>
      <link>https://gmgall.net/blog/criando-suas-proprias-acoes-no-fail2ban-parte-3/</link>
      <pubDate>Thu, 04 Aug 2011 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/criando-suas-proprias-acoes-no-fail2ban-parte-3/</guid>
      <description>&lt;h2 id=&#34;estrutura-de-uma-ação&#34;&gt;Estrutura de uma ação&lt;/h2&gt;
&lt;p&gt;Cada ação é um arquivo no diretório &lt;code&gt;action.d&lt;/code&gt;. Esses arquivos seguem a seguinte estrutura:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Definition]

# Option:  actionstart
# Notes.:  comando executado ao iniciar o Fail2Ban.
# Values:  CMD
#
actionstart =


# Option:  actionstop
# Notes.:  comando executado ao encerrar o Fail2Ban
# Values:  CMD
#
actionstop =


# Option:  actioncheck
# Notes.:  comando executado antes de cada comando actionban
# Values:  CMD
#
actioncheck =


# Option:  actionban
# Notes.:  comando executado ao banir um IP. Observe que o comando
#          é executado com as permissões do usuário executando o Fail2Ban.
# Tags:    &amp;lt;ip&amp;gt;  IP address
#          &amp;lt;failures&amp;gt;  number of failures
#          &amp;lt;time&amp;gt;  unix timestamp of the ban time
# Values:  CMD
#
actionban = ipfw add deny tcp from &amp;lt;ip&amp;gt; to &amp;lt;localhost&amp;gt; &amp;lt;port&amp;gt;


# Option:  actionunban
# Notes.:  comando executado ao &amp;#34;desbanir&amp;#34; um IP. Observe que o comando
#          é executado com as permissões do usuário executando o Fail2Ban.
# Tags:    &amp;lt;ip&amp;gt;  IP address
#          &amp;lt;failures&amp;gt;  number of failures
#          &amp;lt;time&amp;gt;  unix timestamp of the ban time
# Values:  CMD
#
actionunban = ipfw delete `ipfw list | grep -i &amp;lt;ip&amp;gt; | awk &amp;#39;{print $1;}&amp;#39;`

[Init]

# Option:  port
# Notes.:  specifies port to monitor
# Values:  [ NUM | STRING ]
#
port = ssh

# Option:  localhost
# Notes.:  the local IP address of the network interface
# Values:  IP
#
localhost = 127.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O arquivo que usei de exemplo acima já vem com o pacote e configura uma ação que usa o ipfw para bloquear os IPs. Traduzi os comentários da seção &lt;code&gt;[Definition]&lt;/code&gt; para explicar o que cada entrada define.&lt;/p&gt;
&lt;p&gt;A seção &lt;code&gt;[Init]&lt;/code&gt; define &amp;ldquo;variáveis&amp;rdquo; que podem ser usadas ao longo do arquivo. Nesse exemplo, &lt;code&gt;port&lt;/code&gt; e &lt;code&gt;localhost&lt;/code&gt;, mas que variáveis definir é por conta do usuário. &lt;strong&gt;Lembrando que&lt;/strong&gt; &lt;code&gt;&amp;lt;ip&amp;gt;&lt;/code&gt; &lt;strong&gt;vira o IP/hostname casado no grupo&lt;/strong&gt; &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; &lt;strong&gt;dos filtros&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;definindo-uma-ação&#34;&gt;Definindo uma ação&lt;/h2&gt;
&lt;p&gt;Existem ações predefinidas que bloqueiam por &lt;code&gt;iptables&lt;/code&gt;, &lt;code&gt;ipfw&lt;/code&gt;, &lt;code&gt;shorewall&lt;/code&gt;, TCP wrappers, que avisam por e-mail a cada bloqueio&amp;hellip; Mas não existe nenhuma que avise via Gtalk. Vamos criar uma ação que faz isso.&lt;/p&gt;
&lt;p&gt;Usarei o programa &lt;a href=&#34;https://web.archive.org/web/20110827104139/http://sendxmpp.platon.sk/&#34;&gt;sendxmpp&lt;/a&gt; para definir uma ação que enviará uma mensagem para mim no Gtalk a cada evento. Como configurar o sendxmpp para o Gtalk &lt;a href=&#34;http://ubuntuforums.org/showpost.php?s=0ecf5b2a9c9a97fbfa5438c354dcfc2c&amp;amp;p=8876182&amp;amp;postcount=3&#34;&gt;pode ser visto aqui&lt;/a&gt;. Conheci o sendxmpp num &lt;a href=&#34;http://eriberto.pro.br/blog/2011/03/02/mensagens-jabber-via-linha-de-comando-ideal-para-servidores-de-rede/&#34;&gt;post&lt;/a&gt; do &lt;a href=&#34;http://eriberto.pro.br/blog/&#34;&gt;blog&lt;/a&gt; do &lt;a href=&#34;http://eriberto.pro.br/site/&#34;&gt;João Eriberto Mota Filho&lt;/a&gt; (&lt;a href=&#34;https://twitter.com/eribertomota&#34;&gt;@eribertomota&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Vamos à listagem do arquivo &lt;code&gt;action.d/gtalk.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Definition]

actionstart = printf %%b &amp;#34;Hi,\n
              The jail &amp;lt;name&amp;gt; has been started successfully.\n
              Regards,\n
              Fail2Ban&amp;#34;|sendxmpp -t -u &amp;lt;from&amp;gt; -o gmail.com 

actionstop = printf %%b &amp;#34;Hi,\n
             The jail &amp;lt;name&amp;gt; has been stopped.\n
             Regards,\n
             Fail2Ban&amp;#34;|sendxmpp -t -u &amp;lt;from&amp;gt; -o gmail.com 

actioncheck =

actionban = printf %%b &amp;#34;Hi,\n
            The IP &amp;lt;ip&amp;gt; has just been banned by Fail2Ban after
            &amp;lt;failures&amp;gt; attempts against &amp;lt;name&amp;gt;.\n
            Regards,\n
            Fail2Ban&amp;#34;|sendxmpp -t -u &amp;lt;from&amp;gt; -o gmail.com &amp;lt;to&amp;gt;

actionunban =

[Init]

name = default

from =

to =
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Essa ação enviará uma mensagem para o usuário definido em &lt;code&gt;to&lt;/code&gt; tendo como remetente o usuário definido em &lt;code&gt;from&lt;/code&gt; ao iniciar, parar e ao bloquear um IP.&lt;/p&gt;
&lt;h2 id=&#34;ativando-sua-ação&#34;&gt;Ativando sua ação&lt;/h2&gt;
&lt;p&gt;As ações são definidas por &lt;em&gt;jail&lt;/em&gt; ou globalmente na seção &lt;code&gt;[DEFAULT]&lt;/code&gt; de &lt;code&gt;jail.local&lt;/code&gt;. Ações definidas nas &lt;em&gt;jails&lt;/em&gt; tem prioridade sobre as definidas globalmente.&lt;/p&gt;
&lt;p&gt;Observe o seguinte trecho de &lt;code&gt;jail.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ACTIONS
#

# Default banning action (e.g. iptables, iptables-new,
# iptables-multiport, shorewall, etc) It is used to define
# action_* variables. Can be overriden globally or per
# section within jail.local file
banaction = iptables-multiport

# email action. Since 0.8.1 upstream fail2ban uses sendmail
# MTA for the mailing. Change mta configuration parameter to mail
# if you want to revert to conventional &amp;#39;mail&amp;#39;.
mta = sendmail

# Default protocol
protocol = tcp

#
# Action shortcuts. To be used to define action parameter

# The simplest action to take: ban only
action_ = %(banaction)s[name=%(__name__)s, port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s]

# ban &amp;amp; send an e-mail with whois report to the destemail.
action_mw = %(banaction)s[name=%(__name__)s, port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s]
%(mta)s-whois[name=%(__name__)s, dest=&amp;#34;%(destemail)s&amp;#34;, protocol=&amp;#34;%(protocol)s]

# ban &amp;amp; send an e-mail with whois report and relevant log lines
# to the destemail.
action_mwl = %(banaction)s[name=%(__name__)s, port=&amp;#34;%(port)s&amp;#34;, protocol=&amp;#34;%(protocol)s]
%(mta)s-whois-lines[name=%(__name__)s, dest=&amp;#34;%(destemail)s&amp;#34;, logpath=%(logpath)s]

# Choose default action. To change, just override value of &amp;#39;action&amp;#39; with the
# interpolation to the chosen action shortcut (e.g. action_mw, action_mwl, etc) in jail.local
# globally (section [DEFAULT]) or per specific section
action = %(action_)s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A variável &lt;code&gt;action&lt;/code&gt; define a ação globalmente. As outras variáveis definidas antes (&lt;code&gt;action_mvl&lt;/code&gt;, &lt;code&gt;action_mw&lt;/code&gt; e &lt;code&gt;action_&lt;/code&gt;) são atalhos úteis. Leia os comentários com atenção para entender como essas variáveis interagem.&lt;/p&gt;
&lt;p&gt;Repare que mais de uma ação pode ser setada por linha e que cada ação pode receber parâmetros entre colchetes. Esses parâmetros definem os valores das variáveis declaradas na seção &lt;code&gt;[Init]&lt;/code&gt;. Os atalhos &lt;code&gt;action_mvl&lt;/code&gt;, &lt;code&gt;action_mw&lt;/code&gt; e &lt;code&gt;action_&lt;/code&gt; são úteis por já ativarem ações e passarem parâmetros funcionais para tarefas rotineiras como banir e enviar um e-mail com informações úteis.&lt;/p&gt;
&lt;p&gt;Para definir nossa ação gtalk globalmente, basta fazer&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;action = %(action_)s
        gtalk[name=%(__name__)s, from=gmgall, to=gmgall]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;e recarregar as configurações do serviço:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/init.d/fail2ban reload
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Funciona!&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;screenshot.png&#34;
         alt=&#34;Janela de chat do mensageiro instantâneo Pidgin, mostrando mensagens enviadas pelo fail2ban.&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Janela de chat do mensageiro instantâneo Pidgin, mostrando mensagens enviadas pelo fail2ban.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Criando Seus Próprios Filtros no fail2ban - Parte 2</title>
      <link>https://gmgall.net/blog/criando-seus-proprios-filtros-no-fail2ban-parte-2/</link>
      <pubDate>Mon, 01 Aug 2011 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/criando-seus-proprios-filtros-no-fail2ban-parte-2/</guid>
      <description>&lt;p&gt;Se não existe um filtro pronto para o log que você deseja monitorar em &lt;code&gt;filter.d&lt;/code&gt;, será necessário criar seu próprio filtro. Mostrarei como fazer isso através do exemplo que descrevo abaixo:&lt;/p&gt;
&lt;h2 id=&#34;cenário-do-exemplo&#34;&gt;Cenário do exemplo&lt;/h2&gt;
&lt;p&gt;Mantenho um wiki &lt;a href=&#34;http://moinmo.in/&#34;&gt;moinmoin&lt;/a&gt; e desejo bloquear o acesso à ele pelos hosts que tentarem login por mais de 3 vezes sem sucesso. Vamos fazer um filtro para fazer esse bloqueio. O log do wiki é escrito em &lt;code&gt;/var/log/moinmoin.log&lt;/code&gt;. Segue trecho desse log:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2011-07-12 15:45:40,447 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 15:45:44,002 MoinMoin.auth WARNING moin: performing login action | request from 192.168.0.10
2011-07-12 15:45:44,003 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;GuilhermeGall&amp;#39; (not valid) | request from 192.168.0.10
2011-07-12 15:45:44,030 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 15:45:47,705 MoinMoin.auth WARNING moin: performing login action | request from 192.168.0.10
2011-07-12 15:45:47,706 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;GuilhermeGall&amp;#39; (not valid) | request from 192.168.0.10
2011-07-12 15:45:47,732 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 15:55:59,473 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-12 16:08:51,543 MoinMoin.Page WARNING The page &amp;#34;MissingPage&amp;#34; could not be found. Check your underlay directory setting.
2011-07-13 09:09:01,908 MoinMoin.auth WARNING moin: performing login action | request from 192.168.0.7
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não é difícil perceber que as linhas com &lt;code&gt;could not authenticate user u&#39;GuilhermeGall&#39; (not valid)&lt;/code&gt; representam as tentativas de login malsucedidas. Se desejamos bloquear os hosts de origem dessas tentativas temos que fazer a regex do filtro casar essas linhas e usar o IP que aparece nelas para executar nossa ação (por &lt;em&gt;default&lt;/em&gt;, bloquear via &lt;code&gt;iptables&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Antes de criar nosso filtro, vamos entender a estrutura de um filtro e como desenvolver nossas próprias regexes.&lt;/p&gt;
&lt;h2 id=&#34;estrutura-de-um-filtro&#34;&gt;Estrutura de um filtro&lt;/h2&gt;
&lt;p&gt;Um filtro é simplesmente um arquivo com uma entrada &lt;code&gt;failregex&lt;/code&gt;, que define as regexes que casam as linhas que representam as tentativas de login malsucedidas, e uma entrada &lt;code&gt;ignoreregex&lt;/code&gt;, que define regexes que casam com linhas que devem ser ignoradas. Outras entradas podem existir, como &lt;code&gt;before&lt;/code&gt; que faz um “import” de outro arquivo, mas &lt;code&gt;failregex&lt;/code&gt; e &lt;code&gt;ignoreregex&lt;/code&gt; são as essenciais e usadas na maioria dos casos.&lt;/p&gt;
&lt;p&gt;Se for definir mais de uma regex para &lt;code&gt;failregex&lt;/code&gt; ou &lt;code&gt;ignoreregex&lt;/code&gt;, coloque uma por linha. Exemplo do arquivo &lt;code&gt;filter.d/apache-auth.conf&lt;/code&gt; que já vem no pacote &lt;code&gt;fail2ban&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Definition]

# Option:  failregex
# Notes.:  regex to match the password failure messages in the logfile. The
#          host must be matched by a group named &amp;#34;host&amp;#34;. The tag &amp;#34;&amp;lt;HOST&amp;gt;&amp;#34; can
#          be used for standard IP/hostname matching and is only an alias for
#          (?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;[\w\-.^_]+)
# Values:  TEXT
#
failregex = [[]client &amp;lt;HOST&amp;gt;[]] user .* authentication failure
            [[]client &amp;lt;HOST&amp;gt;[]] user .* not found
            [[]client &amp;lt;HOST&amp;gt;[]] user .* password mismatch

# Option:  ignoreregex
# Notes.:  regex to ignore. If this regex matches, the line is ignored.
# Values:  TEXT
#
ignoreregex =
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Conforme pode ser lido nos comentários do arquivo acima, a tag &lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; deve aparecer dentro da regex na posição onde aparece o IP/hostname do host ofensor. Repare que mais de uma regex foi definida para &lt;code&gt;failregex&lt;/code&gt; – uma em cada linha – e que &lt;code&gt;ignoreregex&lt;/code&gt; pode ser vazio.&lt;/p&gt;
&lt;h2 id=&#34;desenvolvendo-suas-próprias-regexes&#34;&gt;Desenvolvendo suas próprias regexes&lt;/h2&gt;
&lt;p&gt;Para escrever suas próprias regexes para o &lt;code&gt;fail2ban&lt;/code&gt; é preciso ter em mente o seguinte:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Em toda linha de uma &lt;code&gt;failregex&lt;/code&gt;, a parte que casa com o IP/hostname deve estar envolta pela estrutura &lt;code&gt;(?P&amp;lt;host&amp;gt; ... )&lt;/code&gt;. Essa estrutura é uma extensão específica do Python que atribui o nome &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; ao que foi casado pelo grupo. A tag &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; é como você informa ao &lt;code&gt;fail2ban&lt;/code&gt; qual host estava tentando logar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Como conveniência, é possível usar &lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; nas suas regexes, conforme citei no tópico anterior. &lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; é um alias para &lt;code&gt;(?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;\S+)&lt;/code&gt; que casa um IP/hostname dentro de um grupo chamado &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;. Vide item anterior.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nas ações, a tag &lt;code&gt;&amp;lt;ip&amp;gt;&lt;/code&gt; será substituída pelo IP do host casado pela tag &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;, por isso sempre deve existir um grupo nomeado &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Para que uma linha de um log case com sua &lt;code&gt;failregex&lt;/code&gt;, ela deve casar em duas partes: o início da linha tem que casar com um padrão de &lt;em&gt;timestamp&lt;/em&gt; e o restante da linha deve casar com a regex definida em &lt;code&gt;failregex&lt;/code&gt;. Se sua &lt;code&gt;failregex&lt;/code&gt; possui a âncora &lt;code&gt;^&lt;/code&gt;, então a âncora refere-se ao início do restante da linha, após o &lt;em&gt;timestamp&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Por último, mas não menos importante, o comando &lt;code&gt;fail2ban-regex&lt;/code&gt; permite testar suas regexes antes de criar o filtro. Na realidade, como escrever suas próprias regexes pode envolver alguma – muita! – tentativa e erro no começo, eu diria que esse é o item mais importante. 🙂 Ele pode ser usado de duas maneiras:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fail2ban-regex /path/para/arquivo.log &amp;#39;^regex a ser testada$&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ou&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fail2ban-regex &amp;#39;linha exemplo de log&amp;#39; &amp;#39;^regex a ser testada$&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;definindo-o-filtro&#34;&gt;Definindo o filtro&lt;/h2&gt;
&lt;p&gt;A regex que casa com as linhas que representam as tentativas de login malsucedidas é:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não é do escopo desse artigo ensinar expressões regulares. Tem muito &lt;a href=&#34;https://aurelio.net/regex/&#34;&gt;material bom sobre isso&lt;/a&gt; por aí, mas resumindo a expressão acima:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MoinMoin\.auth&lt;/code&gt; casa &lt;code&gt;MoinMoin.auth&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;DEBUG|INFO|WARNING|ERROR|CRITICAL)&lt;/code&gt; casa &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; ou &lt;code&gt;CRITICAL&lt;/code&gt;. Eu poderia ter casado apenas um dos níveis de severidade, mas ainda estou decidindo em qual nível reportarei as mensagens referentes à tentativas de login.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;moin: could not authenticate user&lt;/code&gt; casa &lt;code&gt;moin: could not authenticate user&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.*&lt;/code&gt; casa &lt;em&gt;qualquer caractere em qualquer quantidade&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;not valid\) \| request from&lt;/code&gt; casa &lt;code&gt;(not valid) | request from&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;HOST&amp;gt;&lt;/code&gt; casa o &lt;em&gt;IP/hostname&lt;/em&gt;. É a tal tag indicativa de onde está o IP/hostname que é substituída por &lt;code&gt;(?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;\S+)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$&lt;/code&gt; casa o &lt;em&gt;fim da linha&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Testando uma linha de exemplo do log com o &lt;code&gt;fail2ban-regex&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fail2ban-regex &amp;#39;2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;UserName&amp;#39; (not valid) | request from 192.168.0.27&amp;#39; &amp;#39;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$&amp;#39;

Running tests
=============

Use regex line : MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL)...
Use single line: 2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin...

Results
=======

Failregex
|- Regular expressions:
|  [1] MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$
|
`- Number of matches:
   [1] 1 match(es)

Ignoreregex
|- Regular expressions:
|
`- Number of matches:

Summary
=======

Addresses found:
[1]
    192.168.0.27 (Mon Jul 18 14:24:42 2011)

Date template hits:
0 hit(s): MONTH Day Hour:Minute:Second
0 hit(s): WEEKDAY MONTH Day Hour:Minute:Second Year
0 hit(s): WEEKDAY MONTH Day Hour:Minute:Second
0 hit(s): Year/Month/Day Hour:Minute:Second
0 hit(s): Day/Month/Year Hour:Minute:Second
0 hit(s): Day/Month/Year Hour:Minute:Second
0 hit(s): Day/MONTH/Year:Hour:Minute:Second
0 hit(s): Month/Day/Year:Hour:Minute:Second
2 hit(s): Year-Month-Day Hour:Minute:Second
0 hit(s): Day-MONTH-Year Hour:Minute:Second[.Millisecond]
0 hit(s): Day-Month-Year Hour:Minute:Second
0 hit(s): TAI64N
0 hit(s): Epoch
0 hit(s): ISO 8601
0 hit(s): Hour:Minute:Second
0 hit(s): 

Success, the total number of match is 1

However, look at the above section &amp;#39;Running tests&amp;#39; which could contain important
information.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Perceba que o comando mostrou a regex e o número de casamentos, além do IP encontrado abaixo de &amp;ldquo;Addresses found&amp;rdquo;, indicando que a regex está correta. O número de casamentos presumivelmente seria maior que 1, se o comando fosse executado contra um arquivo de log ao invés de apenas contra uma linha de exemplo.&lt;/p&gt;
&lt;p&gt;Vamos supor você tenha cometido um erro, como por exemplo não especificar um grupo chamado &lt;code&gt;host&lt;/code&gt; na sua regex:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fail2ban-regex &amp;#39;2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin: could not authenticate user u&amp;#39;UserName&amp;#39; (not valid) | request from 192.168.0.27&amp;#39; &amp;#39;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from$&amp;#39;

Running tests
=============

Use regex line : MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL)...
Use single line: 2011-07-18 14:24:42,687 MoinMoin.auth WARNING moin...

No &amp;#39;host&amp;#39; group in &amp;#39;MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from$&amp;#39;
Cannot remove regular expression. Index 0 is not valid

Results
=======

Failregex
|- Regular expressions:
|  [1] MoinMoin\.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from$
|
`- Number of matches:
   [1] 0 match(es)

Ignoreregex
|- Regular expressions:
|
`- Number of matches:

Summary
=======

Sorry, no match

Look at the above section &amp;#39;Running tests&amp;#39; which could contain important
information.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Perceba que o &lt;code&gt;fail2ban-regex&lt;/code&gt; informa o erro &lt;code&gt;No &#39;host&#39; group in...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Como já temos a regex funcional, crie um arquivo com o nome do filtro em &lt;code&gt;filter.d&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cd /etc/fail2ban/
# cat filter.d/moinmoin.conf
[Definition]

# Option:  failregex
# Notes.:  regex to match the password failures messages in the logfile. The
#          host must be matched by a group named &amp;#34;host&amp;#34;. The tag &amp;#34;&amp;lt;HOST&amp;gt;&amp;#34; can
#          be used for standard IP/hostname matching and is only an alias for
#          (?:::f{4,6}:)?(?P&amp;lt;host&amp;gt;[\w\-.^_]+)
# Values:  TEXT
#
failregex = MoinMoin.auth (DEBUG|INFO|WARNING|ERROR|CRITICAL) moin: could not authenticate user .* \(not valid\) \| request from &amp;lt;HOST&amp;gt;$

# Option:  ignoreregex
# Notes.:  regex to ignore. If this regex matches, the line is ignored.
# Values:  TEXT
#
ignoreregex =
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Crie uma &lt;em&gt;jail&lt;/em&gt; que usa o filtro recém-criado em &lt;code&gt;jail.local&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[moinmoin]

enabled = true
port = 80
filter = moinmoin
logpath = /var/log/moinmoin.log
maxretry = 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A variável &lt;code&gt;filter&lt;/code&gt; define o nome do filtro, que é o nome do arquivo criado em &lt;code&gt;filter.d&lt;/code&gt; sem a extensão &lt;code&gt;.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Reinicie o &lt;code&gt;fail2ban&lt;/code&gt; para ativar a nova &lt;em&gt;jail&lt;/em&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/init.d/fail2ban restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;É interessante monitorar o log do próprio &lt;code&gt;fail2ban&lt;/code&gt;, que por padrão fica em &lt;code&gt;/var/log/fail2ban.log&lt;/code&gt;, para verificar se suas alterações foram aplicadas com sucesso:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# tail -f /var/log/fail2ban.log
2011-08-01 09:52:04,994 fail2ban.filter : INFO   Set findtime = 600
2011-08-01 09:52:04,994 fail2ban.actions: INFO   Set banTime = 600
2011-08-01 09:52:04,999 fail2ban.jail   : INFO   Creating new jail &amp;#39;ssh&amp;#39;
2011-08-01 09:52:04,999 fail2ban.jail   : INFO   Jail &amp;#39;ssh&amp;#39; uses poller
2011-08-01 09:52:05,000 fail2ban.filter : INFO   Added logfile = /var/log/auth.log
2011-08-01 09:52:05,001 fail2ban.filter : INFO   Set maxRetry = 3
2011-08-01 09:52:05,002 fail2ban.filter : INFO   Set findtime = 600
2011-08-01 09:52:05,002 fail2ban.actions: INFO   Set banTime = 600
2011-08-01 09:52:05,035 fail2ban.jail   : INFO   Jail &amp;#39;moinmoin&amp;#39; started
2011-08-01 09:52:05,039 fail2ban.jail   : INFO   Jail &amp;#39;ssh&amp;#39; started
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As duas últimas linhas nos mostra as &lt;em&gt;jails&lt;/em&gt; iniciadas. A &lt;code&gt;ssh&lt;/code&gt;, que já vem configurada, e a &lt;code&gt;moinmoin&lt;/code&gt;, que acabamos de configurar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introdução ao fail2ban - Parte 1</title>
      <link>https://gmgall.net/blog/introducao-ao-fail2ban-parte-1/</link>
      <pubDate>Fri, 29 Jul 2011 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/introducao-ao-fail2ban-parte-1/</guid>
      <description>&lt;p&gt;O fail2ban é um software que monitora os logs do sistema e em caso de X (sendo X configurável) tentativas de autenticação sem sucesso em diversos serviços toma uma atitude, que pode ser colocar o host ofensor em &lt;code&gt;/etc/hosts.deny&lt;/code&gt;, &amp;ldquo;dropar&amp;rdquo; seus pacotes via &lt;code&gt;iptables&lt;/code&gt; ou qualquer outra ação definida pelo usuário.&lt;/p&gt;
&lt;h2 id=&#34;instalação-do-fail2ban&#34;&gt;Instalação do fail2ban&lt;/h2&gt;
&lt;p&gt;Em máquinas Debian, a melhor maneira de instalar o &lt;code&gt;fail2ban&lt;/code&gt; é via &lt;code&gt;apt-get&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# apt-get update
# apt-get install fail2ban
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As configurações &lt;em&gt;default&lt;/em&gt; bloqueiam via &lt;code&gt;iptables&lt;/code&gt; por 10 minutos os hosts que tentarem sem sucesso login via ssh 6 vezes. O &lt;code&gt;fail2ban&lt;/code&gt; cria uma &lt;em&gt;chain&lt;/em&gt; com nome no padrão &lt;code&gt;fail2ban-serviço&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# iptables -L
Chain INPUT (policy ACCEPT)
target prot opt source destination
fail2ban-ssh tcp -- anywhere anywhere multiport dports ssh

Chain FORWARD (policy ACCEPT)
target prot opt source destination

Chain OUTPUT (policy ACCEPT)
target prot opt source destination

Chain fail2ban-ssh (1 references)
target prot opt source destination
RETURN all -- anywhere anywhere
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Lembrando que todo esse comportamento é configurável. O bloqueio pode ser feito via TCP-wrappers (&lt;code&gt;/etc/hosts.{allow,deny}&lt;/code&gt;), e muitos outros serviços são suportados.&lt;/p&gt;
&lt;h2 id=&#34;entendendo-os-arquivos-de-configuração&#34;&gt;Entendendo os arquivos de configuração&lt;/h2&gt;
&lt;p&gt;Alguns termos usados pelo &lt;code&gt;fail2ban&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;filter&lt;/strong&gt;: um filtro define uma regex que casa um padrão correspondente a uma tentativa de login mal sucedido nos arquivos de log;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;action&lt;/strong&gt;: uma ação define os comandos que são executados nos mais diversos eventos, como bloquear um host (ex: bloquear via TCP-wrappers ou &lt;code&gt;iptables&lt;/code&gt;), iniciar o &lt;code&gt;fail2ban&lt;/code&gt; (ex: criar as chains no firewall) e parar o &lt;code&gt;fail2ban&lt;/code&gt; (ex: remover as &lt;em&gt;chains&lt;/em&gt; criadas ao iniciar);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;jail&lt;/strong&gt;: uma &lt;em&gt;jail&lt;/em&gt; é uma combinação de um filtro com uma ou várias &lt;em&gt;actions&lt;/em&gt;. O &lt;code&gt;fail2ban&lt;/code&gt; pode lidar com diversas &lt;em&gt;jails&lt;/em&gt; ao mesmo tempo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Uma &lt;em&gt;jail&lt;/em&gt; é como dar a seguinte ordem ao &lt;code&gt;fail2ban&lt;/code&gt;: &amp;ldquo;bloqueie via &lt;code&gt;iptables&lt;/code&gt; por 10 minutos os hosts que aparecerem 3 vezes em &lt;code&gt;/var/log/auth.log&lt;/code&gt; com falha de autenticação&amp;rdquo;. Nesse exemplo, bloquear via &lt;code&gt;iptables&lt;/code&gt; é uma ação e a regex que casa a falha de autenticação é o filtro.&lt;/p&gt;
&lt;p&gt;Os arquivos de configuração ficam em &lt;code&gt;/etc/fail2ban&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cd /etc/fail2ban
# ls -l
total 17
drwxr-xr-x 2 root root 1024 Jun 28 14:30 action.d
-rw-r--r-- 1 root root 859 Feb 27 2008 fail2ban.conf
drwxr-xr-x 2 root root 1024 Jun 28 14:30 filter.d
-rw-r--r-- 1 root root 6683 Jun 28 2010 jail.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Os diretórios &lt;code&gt;action.d&lt;/code&gt; e &lt;code&gt;filter.d&lt;/code&gt; mantêm as configurações de ações e filtros, respectivamente. Os que vêm com o pacote já devem atender à maior parte das necessidades. O arquivo &lt;code&gt;fail2ban.conf&lt;/code&gt; contém configurações gerais do &lt;em&gt;daemon&lt;/em&gt; &lt;code&gt;fail2ban-server&lt;/code&gt;, como &lt;em&gt;path&lt;/em&gt; do arquivo de &lt;em&gt;log&lt;/em&gt; do &lt;code&gt;fail2ban&lt;/code&gt;, &lt;em&gt;path&lt;/em&gt; do arquivo socket usado para o cliente de linha de comando se comunicar com o &lt;em&gt;daemon&lt;/em&gt; etc.&lt;/p&gt;
&lt;p&gt;O arquivo &lt;code&gt;jail.conf&lt;/code&gt; é o mais importante, já que configura as &lt;em&gt;jails&lt;/em&gt;. No tópico abaixo será explicado como modificar uma &lt;em&gt;jail&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;mudando-as-configurações-default&#34;&gt;Mudando as configurações default&lt;/h2&gt;
&lt;p&gt;Na maior parte do tempo, os filtros e ações que vêm com o pacote atendem às necessidades, bastando usá-los nas suas &lt;em&gt;jails&lt;/em&gt;. A única &lt;em&gt;jail&lt;/em&gt; que vem ativada por padrão é a que bloqueia os hosts que tentarem logar mais de 6 vezes via SSH. Como exemplo, será mostrado como alterar o número de tentativas antes do bloqueio de 6 para 3.&lt;/p&gt;
&lt;p&gt;Primeiramente crie uma cópia do arquivo &lt;code&gt;jail.conf&lt;/code&gt; chamada &lt;code&gt;jail.local&lt;/code&gt; e faça as suas modificações nesse arquivo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# cp jail.conf jail.local
# vim jail.local
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O trecho abaixo configura uma &lt;em&gt;jail&lt;/em&gt; chamada &lt;code&gt;ssh&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ssh]

enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 6
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Mude para:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ssh]

enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Faça o &lt;code&gt;fail2ban&lt;/code&gt; reler os arquivos de configuração:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/init.d/fail2ban reload
Reloading authentication failure monitor: fail2ban.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Não faça as alterações diretamente em &lt;code&gt;jail.conf&lt;/code&gt;. Apesar de funcionar, o arquivo pode ser sobrescrito por atualizações no pacote &lt;code&gt;fail2ban&lt;/code&gt;. O &lt;code&gt;fail2ban&lt;/code&gt; aplica as regras primeiro do &lt;code&gt;jail.conf&lt;/code&gt; depois do &lt;code&gt;jail.local&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Daemon em Python</title>
      <link>https://gmgall.net/blog/daemon-em-python/</link>
      <pubDate>Sun, 24 May 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/daemon-em-python/</guid>
      <description>&lt;p&gt;Já usei mais de uma vez o código abaixo para criar pequenos &lt;a href=&#34;http://en.wikipedia.org/wiki/Daemon_(computer_software)&#34;&gt;daemons&lt;/a&gt; para Linux. Achei &lt;a href=&#34;https://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/&#34;&gt;aqui&lt;/a&gt; e como ele foi &lt;a href=&#34;https://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/#c6&#34;&gt;liberado em domínio público&lt;/a&gt;, use como melhor convir.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; atexit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; signal &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SIGTERM 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Daemon&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    A generic daemon class.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Usage: subclass the Daemon class and override the run() method
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, pidfile, stdin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;, stdout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;, stderr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dev/null&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stdin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stdout
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stderr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pidfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;daemonize&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        do the UNIX double-fork magic, see Stevens&amp;#39; &amp;#34;Advanced
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Programming in the UNIX Environment&amp;#34; for details (ISBN 0201563177)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        http://www.erlenstar.demon.co.uk/unix/faq_2.html#SEC16
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fork()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# exit first parent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OSError&lt;/span&gt;, e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fork #1 failed: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;errno, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strerror))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# decouple from parent environment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chdir(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setsid()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;umask(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# do second fork&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fork()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# exit from second parent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OSError&lt;/span&gt;, e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fork #2 failed: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; (e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;errno, e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strerror))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# redirect standard file descriptors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        si &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        so &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a+&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dup2(si&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno(), sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dup2(so&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno(), sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dup2(se&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno(), sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fileno())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# write pidfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        atexit&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delpid)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getpid())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; pid)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;delpid&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Start the daemon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Check for a pidfile to see if the daemon already runs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pid:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pidfile &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; already exist. Daemon already running?&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(message &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Start the daemon&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;daemonize()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stop&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Stop the daemon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Get the pid from the pidfile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; pid:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pidfile &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; does not exist. Daemon not running?&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stderr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(message &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# not an error in a restart&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Try killing the daemon process&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kill(pid, SIGTERM)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OSError&lt;/span&gt;, err:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            err &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(err)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; err&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No such process&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                print str(err)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;restart&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Restart the daemon
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        You should override this method when you subclass Daemon. It will be called after the process has been
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        daemonized by start() or restart().
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Resolvi adicionar a funcionalidade de verificar o status do processo também, daí adicionei o seguinte método à classe acima:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        procfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/proc/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/status&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; pid, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        procfile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IOError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;there is not a process with the PID specified in &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TypeError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pidfile &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; does not exist&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pidfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stdout&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;the process with the PID &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; is running&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; pid)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Não ficou muito bonito, mas funciona. Lembrando o que já está comentado no &lt;a href=&#34;http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python&#34;&gt;código original&lt;/a&gt;: para usar a classe acima para &amp;ldquo;daemonizar&amp;rdquo; seu programa, crie uma classe filha de &lt;code&gt;Daemon&lt;/code&gt; e sobrescreva o método &lt;code&gt;run()&lt;/code&gt;. Ele será chamado após o processo de &amp;ldquo;daemonização&amp;rdquo; por &lt;code&gt;start()&lt;/code&gt; e &lt;code&gt;restart()&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sequência Look and Say em Python</title>
      <link>https://gmgall.net/blog/sequencia-look-and-say-em-python/</link>
      <pubDate>Wed, 11 Mar 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/sequencia-look-and-say-em-python/</guid>
      <description>&lt;p&gt;Tenho brincado ultimamente com os desafios do &lt;a href=&#34;http://www.pythonchallenge.com/&#34;&gt;Python Challenge&lt;/a&gt;. São bem interessantes para quem quer aprender Python na prática. Estou resolvendo o nível 11 e já precisei &lt;a href=&#34;https://web.archive.org/web/20090309064253/http://www.pythonware.com/products/pil/&#34;&gt;processar imagens&lt;/a&gt;, descompactar dados comprimidos com &lt;a href=&#34;https://docs.python.org/3/library/zipfile.html&#34;&gt;zip&lt;/a&gt; e &lt;a href=&#34;https://docs.python.org/3/library/bz2.html&#34;&gt;bz2&lt;/a&gt;, &lt;a href=&#34;https://docs.python.org/3/library/pickle.html&#34;&gt;serializar objetos&lt;/a&gt;, &lt;a href=&#34;https://docs.python.org/3/library/urllib.html&#34;&gt;acessar recursos via URL&lt;/a&gt;, &lt;a href=&#34;https://docs.python.org/3/library/re.html&#34;&gt;usar expressões regulares&lt;/a&gt; e algumas tarefas que não exigiam necessariamente um módulo.&lt;/p&gt;
&lt;p&gt;O último nível que resolvi tinha como resposta o &lt;a href=&#34;https://web.archive.org/web/20111111070626/http://oeis.org/A005341&#34;&gt;comprimento de um elemento específico&lt;/a&gt; de uma &lt;a href=&#34;https://web.archive.org/web/20090303175131/http://www.research.att.com/~njas/sequences/&#34;&gt;sequência de inteiros&lt;/a&gt; conhecida como &lt;a href=&#34;https://web.archive.org/web/20090304154846/http://www.research.att.com/~njas/sequences/A005150&#34;&gt;&lt;em&gt;look and say&lt;/em&gt;&lt;/a&gt; (olhe e descreva). Achei diversas implementações da geração da sequência pela web, nenhuma delas me pareceu &lt;em&gt;pythonica&lt;/em&gt; ou legível o suficiente. Resolvi juntar algumas das idéias que vi nessas implementações com os conhecimentos que obtive recentemente com a leitura de um material sobre &lt;a href=&#34;https://docs.python.org/dev/howto/functional.html&#34;&gt;programação funcional em Python&lt;/a&gt; e criei uma função que retorna uma lista com os elementos da sequência. A minha solução não é a mais eficiente possível (&lt;a href=&#34;http://www.fantascienza.net/leonardo/so/briciole_python1/&#34;&gt;essa página&lt;/a&gt; contém uma implementação alegadamente otimizada para velocidade), mas acho que é elegante e mostra alguns aspectos interessantes da linguagem. Segue o código:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;look_and_say&lt;/span&gt;(first, elements):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; itertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; groupby
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    seq &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [str(first)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;say&lt;/span&gt;(number):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k,g &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; groupby(number):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ret&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append( str(len(list(g))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; k )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(ret)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; xrange(elements):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        seq&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(say(seq[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; seq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O argumento &lt;code&gt;first&lt;/code&gt; de &lt;code&gt;look_and_say&lt;/code&gt; recebe o primeiro elemento da lista e &lt;code&gt;elements&lt;/code&gt; quantos elementos depois do primeiro devem ser gerados. Exemplo de uso:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; look_and_say(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;21&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;111221&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;312211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;13112221&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1113213211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;31131211131221&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;13211311123113112211&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11131221133112132113212221&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; look_and_say(&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;55&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;25&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1215&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11121115&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;31123115&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dentre os aspectos que gostaria de destacar estão a possibilidade de importar partes de módulos e definir funções dentro de funções, o uso de listas para &lt;a href=&#34;https://web.archive.org/web/20090324052548/http://codare.net/2006/09/17/python-concatenacao-eficiente-de-strings/&#34;&gt;concatenar strings com eficiência&lt;/a&gt; e o uso de &lt;a href=&#34;https://docs.python.org/dev/howto/functional.html#grouping-elements&#34;&gt;itertools.groupby&lt;/a&gt; que faz um agrupamento semelhante ao do comando &lt;code&gt;uniq&lt;/code&gt; do Unix, juntando elementos iguais consecutivos em um &lt;a href=&#34;https://docs.python.org/dev/howto/functional.html#iterators&#34;&gt;&lt;em&gt;iterator&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para quem quiser uma abordagem matemática da sequência, o &lt;a href=&#34;https://mathworld.wolfram.com/&#34;&gt;Wolfram Mathworld&lt;/a&gt; tem uma &lt;a href=&#34;https://mathworld.wolfram.com/LookandSaySequence.html&#34;&gt;página sobre ela&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metaclasses em Python</title>
      <link>https://gmgall.net/blog/metaclasses-em-python/</link>
      <pubDate>Sat, 21 Feb 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/metaclasses-em-python/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;
&lt;p&gt;Li dois textos interessantes no &lt;a href=&#34;http://kodumaro.blogspot.com/&#34;&gt;Kodumaro&lt;/a&gt; recentemente: um sobre &lt;a href=&#34;http://kodumaro.blogspot.com/2009/01/propriedades.html&#34;&gt;propriedades e acessores&lt;/a&gt; e outro sobre o &lt;a href=&#34;http://kodumaro.blogspot.com/2009/01/s-ingleton.html&#34;&gt;design pattern &lt;em&gt;singleton&lt;/em&gt;&lt;/a&gt;. Ambos citavam as metaclasses, um conceito novo para mim e, pelo que andei conversando, novo para muitos de meus colegas de faculdade e trabalho. O seguinte texto é resultado de minha tentativa de explicar o que são metaclasses de uma forma simples de ser assimilada por pessoas que começaram a estudar Python há pouco tempo como eu e portanto não pode ser considerado como um guia definitivo e sem erros sobre o assunto. Qualquer sugestão ou comentário é bem vindo.&lt;/p&gt;
&lt;h2 id=&#34;revisando-orientação-a-objetos-e-definindo-metaclasses&#34;&gt;Revisando Orientação a Objetos e definindo metaclasses&lt;/h2&gt;
&lt;p&gt;Em uma linguagem de programação orientada a objetos, você pode definir classes que combinam dados (atributos) e métodos (comportamentos) que atuam sobre esses dados. Pode-se afirmar que ao definir uma classe se está definindo um domínio.&lt;/p&gt;
&lt;p&gt;As classes geralmente atuam como modelos para a criação de instâncias de classe, que apesar de compartilharem uma mesma &amp;ldquo;forma&amp;rdquo;, possuem dados diferentes. Uma instância &lt;code&gt;real&lt;/code&gt; e outra &lt;code&gt;peso&lt;/code&gt; de uma mesma classe &lt;code&gt;Moeda&lt;/code&gt; podem possuir um atributo &lt;code&gt;cotacao&lt;/code&gt;, mas cada instância terá seu próprio valor para esse atributo.&lt;/p&gt;
&lt;p&gt;Em Python, tudo é objeto e tudo tem um tipo. Não existe diferença real entre uma classe e um tipo, especialmente depois da unificação de classes e tipos iniciada no Python 2.2. Ao definir uma classe, portanto, o programador está criando um novo tipo de dados. Como tudo é objeto, as classes também o são e possuem uma classe, um tipo. A classe de uma classe é chamada de metaclasse. O tipo &lt;em&gt;default&lt;/em&gt; de uma classe é &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Moeda&lt;/span&gt;(object):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(Moeda)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Moeda
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__main__&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Moeda&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ao chamar &lt;code&gt;type()&lt;/code&gt; com apenas um argumento, obtém-se o tipo do objeto. Observe que o tipo da &lt;strong&gt;classe&lt;/strong&gt; &lt;code&gt;Moeda&lt;/code&gt; é &lt;code&gt;type&lt;/code&gt;. Afirmar que o tipo de uma classe é &lt;code&gt;type&lt;/code&gt; é o mesmo que afirmar que a sua metaclasse é &lt;code&gt;type&lt;/code&gt;. O exemplo acima comprovou que as classes realmente são um objeto com um tipo.&lt;/p&gt;
&lt;p&gt;Os conceitos apresentados até aqui são um tanto abstratos para quem aprendeu orientação a objetos em linguagens como Java e C# e para os novatos em Python. No tópico seguinte, apresento a implementação de uma classe e de uma metaclasse com dicionários, como se Python não tivesse suporte sintático para OO. Apesar de ninguém querer programar assim na prática o exemplo é extremamente útil para entender como os objetos funcionam em Python.&lt;/p&gt;
&lt;h2 id=&#34;implementando-classes-com-dicionários&#34;&gt;Implementando classes com dicionários&lt;/h2&gt;
&lt;p&gt;O código abaixo foi originalmente postado no blog de Pedro Werneck em um post que explicava o &lt;a href=&#34;https://web.archive.org/web/20110812155307/http://diaspar.blogspot.com/2008/11/o-porqu-do-self-explcito-ser-que-agora.html&#34;&gt;porquê do &lt;code&gt;self&lt;/code&gt; explícito&lt;/a&gt;. Apesar de explicar metaclasses não ser o objetivo principal do texto, achei bastante útil para entender como o suporte a orientação a objetos foi implementado em Python. Isso acaba levando ao entendimento de vários conceitos interessantes (entre eles metaclasses) da linguagem e a uma apreciação ainda maior de sua simplicidade e consistência.&lt;/p&gt;
&lt;p&gt;No post original, o código evoluiu aos poucos até chegar ao ponto em que está aqui. Para um entendimento pleno, &lt;a href=&#34;https://web.archive.org/web/20110812155307/http://diaspar.blogspot.com/2008/11/o-porqu-do-self-explcito-ser-que-agora.html&#34;&gt;leia o post original&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A primeira parte define uma função &lt;code&gt;newClass&lt;/code&gt; que recebe um nome de classe e um dicionário com seus atributos e retorna um dicionário que faz o papel das &amp;ldquo;classes&amp;rdquo; desse programa.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# precisaremos usar isso logo adiante...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; functools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; partial
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### Agora já podemos pensar nela como a classe &amp;#39;Class&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newClass&lt;/span&gt;(nome, atributos):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;:nome} &lt;span style=&#34;color:#75715e&#34;&gt;# cria o dicionário para a classe somente com seu nome&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k, v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; atributos&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# aqui se um método for o newNome, ele tem de receber a mesma&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# alteração e passar a receber &amp;#39;cls&amp;#39; como primeiro argumento&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;new&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;nome:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; partial(v, cls)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# e atribuímos tudo normalmente&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cls[k] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; cls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Em seguida, é definido uma &amp;ldquo;classe&amp;rdquo; &lt;code&gt;Pessoa&lt;/code&gt; com os atributos &lt;code&gt;nome&lt;/code&gt;, &lt;code&gt;nascimento&lt;/code&gt; e um método &lt;code&gt;idade&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### Classe Pessoa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# construtor, corresponde ao __new__ de Python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newPessoa&lt;/span&gt;(cls, nome, nascimento): &lt;span style=&#34;color:#75715e&#34;&gt;# agora a classe mesmo vem aqui&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {} &lt;span style=&#34;color:#75715e&#34;&gt;# a nova instância&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;classe&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cls &lt;span style=&#34;color:#75715e&#34;&gt;# a instância tem de saber de que classe é, e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                         &lt;span style=&#34;color:#75715e&#34;&gt;# agora pode saber dinamicamente&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Agora a instância vai criar os métodos embrulhando as chamadas&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# para as funções originais em uma nova, já se incluindo nela&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k, v &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cls&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Se for função...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; callable(v):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# é, então vamos embrulhar...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            metodo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; partial(v, inst)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            inst[k] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; metodo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;init&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;cls[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;]](nome, nascimento)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; inst
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# inicializador, corresponde ao __init__ de Python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initPessoa&lt;/span&gt;(inst, nome, nascimento):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nome&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nome
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nascimento&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nascimento
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# assim como fazemos normalmente no __init__, aqui não precisamos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# nos preocupar&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;idade&lt;/span&gt;(inst, hoje):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hd, hm, ha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hoje
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    nd, nm, na &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inst[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nascimento&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ha &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; na
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Com as funções que se tornarão os métodos da classe &lt;code&gt;Pessoa&lt;/code&gt; definidos, falta a última parte da definição da classe que é criar o objeto que representa a classe. Esse objeto é retornado pela função &lt;code&gt;newClass&lt;/code&gt; definida no início do código.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# e agora initPessoa() tem de entrar aqui também&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pessoa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newClass(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pessoa&amp;#39;&lt;/span&gt;, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newPessoa&amp;#39;&lt;/span&gt;:newPessoa,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;initPessoa&amp;#39;&lt;/span&gt;:initPessoa,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;:idade})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;### Fim da definição de classe&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A seguir, cria-se duas instâncias de &lt;code&gt;Pessoa&lt;/code&gt; para testar a implementação.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hank &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pessoa[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newPessoa&amp;#39;&lt;/span&gt;](&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hank Moody&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1967&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print hank[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;]((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fante &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pessoa[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newPessoa&amp;#39;&lt;/span&gt;](&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;John Fante&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1909&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print fante[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;]((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nesse exemplo, a função &lt;code&gt;newClass&lt;/code&gt; faz o papel de uma metaclasse, pois é ela que é chamada para criar a classe. É interessante notar que não existe diferença real entre o funcionamento de &lt;code&gt;newClass&lt;/code&gt; e &lt;code&gt;newPessoa&lt;/code&gt;. Ambas são funções que retornam instâncias, as instâncias retornadas por &lt;code&gt;newClass&lt;/code&gt; são &amp;ldquo;classes&amp;rdquo; e as instâncias retornadas por &lt;code&gt;newPessoa&lt;/code&gt; são objetos do tipo &lt;code&gt;Pessoa&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O autor termina o texto usando as funções de inicialização e cálculo de idade com a metaclasse padrão de Python, &lt;code&gt;type&lt;/code&gt;. Ela recebe uma string que será o nome da nova classe, uma tupla de classes base e um dicionário representando o &lt;em&gt;namespace&lt;/em&gt; da classe. Esse dicionário contém o que você normalmente define como o corpo de uma instrução &lt;code&gt;class&lt;/code&gt;. A única coisa que tem que mudar é o acesso aos atributos, que antes estavam sendo feitos como chaves de dicionários e agora devem usar a sintaxe de atributos normais.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initPessoa&lt;/span&gt;(inst, nome, nascimento):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inst&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nome
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inst&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nascimento &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nascimento
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;idade&lt;/span&gt;(inst, hoje):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hd, hm, ha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hoje
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        nd, nm, na &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inst&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nascimento
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ha &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; na
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pessoa &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; type(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pessoa&amp;#39;&lt;/span&gt;, (), {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__init__&amp;#39;&lt;/span&gt;:initPessoa,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idade&amp;#39;&lt;/span&gt;:idade})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Representação de Pessoa como string: &amp;#34;&lt;/span&gt;,Pessoa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tipo de Pessoa (sua metaclasse): &amp;#34;&lt;/span&gt;,type(Pessoa)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Imprimindo a idade de uma instância de Pessoa para teste: &amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hank &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pessoa(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hank Moody&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1967&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print hank&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;idade((&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2008&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Resumindo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Em Python tudo é objeto, inclusive classes e instâncias. Não existe diferença real entre elas.&lt;/li&gt;
&lt;li&gt;Criar uma classe é criar um novo tipo.&lt;/li&gt;
&lt;li&gt;A classe de uma classe é chamada de metaclasse. As instâncias de metaclasses são classes.&lt;/li&gt;
&lt;li&gt;A metaclasse &lt;em&gt;default&lt;/em&gt; é &lt;code&gt;type&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Não existe diferença real entre métodos e funções. Os métodos são apenas funções com &lt;em&gt;namespaces&lt;/em&gt; específicos (suas classes).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;criando-e-definindo-metaclasses&#34;&gt;Criando e definindo metaclasses&lt;/h2&gt;
&lt;p&gt;Para definir sua própria metaclasse, basta criar uma classe que herda da metaclasse &lt;code&gt;type&lt;/code&gt;. O método inicializador recebe os mesmos argumentos que o método inicializador de &lt;code&gt;type&lt;/code&gt;: uma string que será o nome da classe, uma tupla de classes bases e um dicionário representando o &lt;em&gt;namespace&lt;/em&gt; da classe.&lt;/p&gt;
&lt;p&gt;Segue um &lt;a href=&#34;https://web.archive.org/web/20090215011047/http://www.ibm.com/developerworks/linux/library/l-pymeta.html&#34;&gt;exemplo ligeiramente modificado&lt;/a&gt; de um artigo do &lt;a href=&#34;https://web.archive.org/web/20090221162632/http://www.ibm.com/developerworks/&#34;&gt;IBM developerWorks&lt;/a&gt;. Primeiramente, vamos definir uma nova metaclasse:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ChattyType&lt;/span&gt;(type):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __new__(cls, name, bases, dct):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Alocando memória para classe&amp;#34;&lt;/span&gt;, name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       dct[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;usa_metaclasse&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; type&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__new__(cls, name, bases, dct)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(cls, name, bases, dct):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       print &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Inicializando (configurando) classe&amp;#34;&lt;/span&gt;, name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;       super(ChattyType, cls)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__init__(name, bases, dct)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Essa metaclasse sobrescreve o método &lt;code&gt;__new__&lt;/code&gt; que efetivamente é o construtor e retorna uma nova instância de classe (nesse exemplo específico, a instância retornada será uma classe por estarmos escrevendo uma &lt;strong&gt;meta&lt;/strong&gt;classe) e o método &lt;code&gt;__init__&lt;/code&gt; que é o inicializador da instância e não retorna nada. É tentador chamar o &lt;code&gt;__init__&lt;/code&gt; de construtor, mas o trabalho de criação de instâncias é do &lt;code&gt;__new__&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O código acima criou um novo tipo que imprime uma mensagem quando está sendo criado e outra quando está sendo inicializado. Definiu-se também que todas as instâncias do novo tipo terão um atributo &lt;code&gt;usa_metaclasse&lt;/code&gt; com o valor inicial &lt;code&gt;True&lt;/code&gt;. Essa mudança foi feita adicionando uma chave ao dicionário que representa o &lt;em&gt;namespace&lt;/em&gt;  da classe (&lt;code&gt;dct&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Com a metaclasse definida, já é possível criar classes a partir dela chamando-a como chama-se &lt;code&gt;type&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; X&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ChattyType(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;, (object,), {})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Alocando memória para classe X
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Inicializando (configurando) classe X
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Instanciar classes manualmente como feito acima, não é um procedimento muito comum. Segue como Python &lt;a href=&#34;https://www.python.org/download/releases/2.2.3/descrintro/#metaclasses&#34;&gt;determina a metaclasse&lt;/a&gt; de uma determinada classe:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Se o dicionário que representa o &lt;em&gt;namespace&lt;/em&gt; da classe contiver uma chave &lt;code&gt;__metaclass__&lt;/code&gt;, o seu valor é usado.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Senão, se existe pelo menos uma classe base, sua metaclasse é usada.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Senão, se existe uma variável global &lt;code&gt;__metaclass__&lt;/code&gt;, seu valor é usado.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Senão, &lt;code&gt;types.ClassType&lt;/code&gt; é usado.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A criação da classe &lt;code&gt;X&lt;/code&gt; feita no exemplo acima comumente seria feita assim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;X&lt;/span&gt;(object):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;    __metaclass__&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ChattyType
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Alocando memória para classe X
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Inicializando (configurando) classe X
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A instanciação de &lt;code&gt;ChattyType&lt;/code&gt;, feita explicitamente no primeiro exemplo, agora é feita pelo interpretador Python no final da instrução &lt;code&gt;class&lt;/code&gt;. Note que a instrução &lt;code&gt;class&lt;/code&gt; é simplesmente &lt;a href=&#34;https://en.wikipedia.org/wiki/Syntactic_sugar&#34;&gt;açúcar sintático&lt;/a&gt; para a instanciação de classes através de suas metaclasses. Os programadores que não fazem uso de metaclasses acabam não percebendo isso, já que simplesmente criam suas classes usando &lt;code&gt;class&lt;/code&gt; e Python simplesmente as instancia chamando &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Continuando o exemplo, podemos confirmar que o tipo da classe é a metaclasse:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(X)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__main__&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ChattyType&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;X()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__main__&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;X&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; type(X) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; type(type(y))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para concluir, segue algumas dicas na hora de usar metaclasses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A modificação do dicionário que representa o &lt;em&gt;namespace&lt;/em&gt; da classe deve ser feita em &lt;code&gt;__new__&lt;/code&gt;, como no exemplo. Se na definição de &lt;code&gt;ChattyType&lt;/code&gt;, &lt;code&gt;dct[&#39;usa_metaclasse&#39;]=True&lt;/code&gt; fosse executado em &lt;code&gt;__init__&lt;/code&gt;, a alteração não teria efeito. Considere o uso de &lt;a href=&#34;https://docs.python.org/3/library/functions.html#setattr&#34;&gt;setattr&lt;/a&gt; nesses casos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sempre herde de &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;__new__&lt;/code&gt; é o construtor e deve retornar uma nova instância.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Erros em metaclasses costumam aparecer durante &lt;code&gt;import&lt;/code&gt;s e definições de classes que usem metaclasses diferentes de &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;alguns-exemplos&#34;&gt;Alguns exemplos&lt;/h2&gt;
&lt;p&gt;Metaclasses são usadas na maior parte do tempo para alterar o comportamento de criação e inicialização de classes. Na maioria dos casos, os usuários finais são outros programadores. Frameworks e ferramentas de mapeamento objeto-relacional são exemplos de softwares que usam metaclasses.&lt;/p&gt;
&lt;p&gt;Alguns usos para as metaclasses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20101122212629/http://www.python.org.br/wiki/UnificandoTiposClasses&#34;&gt;Criar propriedades automaticamente&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://kodumaro.blogspot.com/2009/01/s-ingleton.html&#34;&gt;Usar o design pattern singleton de forma transparente&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://everything2.com/title/metaclass&#34;&gt;Monitorar todas as chamadas a métodos de uma classe&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://web.archive.org/web/20090405120043/http://effbot.org/zone/metaclass-plugins.htm&#34;&gt;Fazer plugins se registrarem automaticamente em um registro comum&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verificar diversos aspectos de uma classe para garantir que a classe tenha os métodos e atributos necessários para o correto funcionamento do sistema. Isso é interessante se a aplicação pode ser estendida por plugins desenvolvidos por terceiros.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O importante é que a classe só é realmente criada na chamada final a &lt;code&gt;type&lt;/code&gt; na metaclasse. Você é livre para modificar o dicionário de atributos de acordo com as suas necessidades antes disso, portanto existem muito mais possibilidades de uso para as metaclasses do que as apresentadas aqui.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Here Strings, Redirecionamentos e o builtin time</title>
      <link>https://gmgall.net/blog/here-strings-redirecionamentos-e-o-builtin-time/</link>
      <pubDate>Wed, 28 Jan 2009 00:00:00 -0300</pubDate>
      
      <guid>https://gmgall.net/blog/here-strings-redirecionamentos-e-o-builtin-time/</guid>
      <description>&lt;p&gt;Estou fazendo um comparativo entre &lt;code&gt;gzip&lt;/code&gt; e &lt;code&gt;bzip2&lt;/code&gt; em seus diferentes modos de compressão (-1 a -9) e para automatizar o processo fiz um script bash que usa alguns recursos bastante interessantes, mas às vezes negligenciados, por isso vou falar sobre eles aqui.&lt;/p&gt;
&lt;p&gt;O script basicamente compacta um determinado arquivo com o &lt;code&gt;bzip2&lt;/code&gt; e o &lt;code&gt;gzip&lt;/code&gt;, cada um deles usando todos os modos de compressão, mede o tempo que o compactador ficou na CPU e escreve os resultados em um arquivo de saída. O comando para compactar o arquivo é montado dinamicamente usando dois loops aninhados. Um deles, o mais externo, itera sobre a lista de modos de compressão (-1 a -9) e o outro, o mais interno, itera sobre os compactadores. No final, a linha que realmente faz a compactação e mede o tempo gasto é&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TIMEC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;bc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; time eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$CMDC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Onde &lt;code&gt;TIMEC&lt;/code&gt; recebe o tempo de CPU gasto pelo comando de compactação e &lt;code&gt;$CMDC&lt;/code&gt; contém o comando de compactação. Um valor que essa variável pode assumir durante a execução é &lt;code&gt;gzip -c -2 arquivo&amp;gt;arquivo.gz&lt;/code&gt;, por exemplo.&lt;/p&gt;
&lt;p&gt;Feita essa introdução, o primeiro recurso interessante que eu gostaria de apresentar é o &lt;em&gt;here strings&lt;/em&gt;. O funcionamento dele é simples. Dado um comando como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1+1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;a string &lt;code&gt;1+1&lt;/code&gt; será usada para alimentar a entrada padrão de &lt;code&gt;bc&lt;/code&gt;. Isso substitui a forma tradicional&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1+1&amp;#39;&lt;/span&gt; | bc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;que faz a mesma coisa, mas força um &lt;a href=&#34;https://en.wikipedia.org/wiki/Fork_(system_call)&#34;&gt;fork&lt;/a&gt; para isso, sendo mais ineficiente.&lt;/p&gt;
&lt;p&gt;Na linha do script que citei no início do post, o &lt;code&gt;bc&lt;/code&gt; vai receber o tempo gasto em modo usuário e o tempo gasto em modo kernel separados por um sinal de adição, fazendo portanto &lt;code&gt;TIMEC&lt;/code&gt; receber a soma desses valores. Aqui chegamos no segundo recurso que gostaria de citar nesse post. O builtin &lt;code&gt;time&lt;/code&gt; do bash (não confundir com o comando externo &lt;code&gt;time&lt;/code&gt;), pode ter sua saída formatada através do conteúdo da variável &lt;code&gt;TIMEFORMAT&lt;/code&gt;. Para fazer a saída do &lt;code&gt;time&lt;/code&gt; ficar no formato de uma soma, simplesmente atribuí o valor &lt;code&gt;%U+%S&lt;/code&gt; à &lt;code&gt;TIMEFORMAT&lt;/code&gt;. O &lt;code&gt;%U&lt;/code&gt; representa o tempo gasto em modo de usuário e o &lt;code&gt;%S&lt;/code&gt; o tempo gasto em modo kernel.&lt;/p&gt;
&lt;p&gt;Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ time df
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sist. Arq.           1K-blocos      Usad Dispon.   Uso% Montado em
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/hdc3             &lt;span style=&#34;color:#ae81ff&#34;&gt;37491624&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32393072&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3194048&lt;/span&gt;  92% /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmpfs                   &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;   0% /dev/shm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m0.061s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    0m0.020s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m0.016s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ TIMEFORMAT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;%U+%S &lt;span style=&#34;color:#75715e&#34;&gt;# Formatando a saída de time&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ time df
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sist. Arq.           1K-blocos      Usad Dispon.   Uso% Montado em
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/hdc3             &lt;span style=&#34;color:#ae81ff&#34;&gt;37491624&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;32393072&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3194048&lt;/span&gt;  92% /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmpfs                   &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;         &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;255180&lt;/span&gt;   0% /dev/shm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0.020+0.008
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Com isso, só fica faltando uma última coisa para mostrar: como redirecionar a saída do builtin &lt;code&gt;time&lt;/code&gt;. A primeira coisa importante a ter em mente, é que os tempos medidos em si são jogados na &lt;code&gt;stderr&lt;/code&gt;, enquanto que a &lt;code&gt;stdout&lt;/code&gt; é usada para a saída do comando cujo tempo de execução é medido. Dito isso uma primeira tentativa de redirecionar a saída do &lt;code&gt;time&lt;/code&gt; para um arquivo por exemplo, seria fazer simplesmente fazer algo como &lt;code&gt;time comando 2&amp;gt; arquivo&lt;/code&gt;, mas isso não funciona. O que é redirecionado para arquivo nesse caso é a saída de erros de comando, não a do time, que continua imprimindo na tela. Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ time ls naoexiste 2&amp;gt;saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m0.041s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    0m0.036s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m0.004s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls: impossível acessar naoexiste: Arquivo ou diretório não encontrado
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A saída para isso é executar o &lt;code&gt;time&lt;/code&gt; dentro de um bloco (em uma subshell também funciona, mas é ineficiente) e redirecionar a saída de erros desse bloco. Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; time ls naoexiste 2&amp;gt;/dev/null; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 2&amp;gt;saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat saida_erros
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m0.056s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    0m0.028s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m0.004s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Perceba que dentro do bloco eu redirecionei a saída de erros de &lt;code&gt;ls naoexiste&lt;/code&gt; para &lt;code&gt;/dev/null&lt;/code&gt;, para que ela não se misturasse com a saída do &lt;code&gt;time&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Com isso já temos toda a teoria para entender a linha que citei no início do post. Vamos desmembrá-la e revisar o que apresentei nesse post.&lt;/p&gt;
&lt;h2 id=&#34;revisando&#34;&gt;Revisando&lt;/h2&gt;
&lt;p&gt;Na linha&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TIMEC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;bc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; time eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$CMDC&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;TIMEC&lt;/code&gt; vai receber a soma, feita pela calculadora &lt;code&gt;bc&lt;/code&gt;, dos tempos calculados pelo builtin &lt;code&gt;time&lt;/code&gt; do bash. A saída desse comando foi formatada de acordo com a variável &lt;code&gt;TIMEFORMAT&lt;/code&gt; para formar uma string com uma soma do tempo gasto em modo kernel com o tempo gasto em modo de usuário (&lt;code&gt;%U+%S&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Dentro da subshell cujo resultado alimenta a entrada padrão do &lt;code&gt;bc&lt;/code&gt; o &lt;code&gt;time&lt;/code&gt; precisou ser executado dentro de um bloco, para ser possível capturar o seu resultado, que vai para &lt;code&gt;stderr&lt;/code&gt;. A &lt;code&gt;stdout&lt;/code&gt; é usada para a saída do comando cujo tempo de execução é medido pelo &lt;code&gt;time&lt;/code&gt;. A &lt;code&gt;stderr&lt;/code&gt; do bloco inteiro foi conectado a &lt;code&gt;stdout&lt;/code&gt;, sendo assim devidamente retornada pela subshell e usada para alimentar a entrada padrão da &lt;code&gt;bc&lt;/code&gt; via &lt;em&gt;here strings&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;É isso. Quaisquer comentários são bem vindos.&lt;/p&gt;
&lt;h2 id=&#34;referências&#34;&gt;Referências&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mywiki.wooledge.org/BashFAQ/032&#34;&gt;BashFaq: How can I redirect the output of &amp;rsquo;time&amp;rsquo; to a variable or file?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tldp.org/LDP/abs/html/io-redirection.html&#34;&gt;Advanced Bash-Scripting Guide: I/O Redirection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jneves.wordpress.com/2008/03/05/hello-world/&#34;&gt;Papo de Botequim: Tira Gosto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/1/bash&#34;&gt;Manpage do Bash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
